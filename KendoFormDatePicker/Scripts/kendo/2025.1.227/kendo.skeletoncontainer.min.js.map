{"version":3,"sources":["raw-js/kendo.skeletoncontainer.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Skeletoncontainer","this","$","window","ui","Widget","SkeletonContainer","extend","init","element","options","that","fn","call","addClass","_setWrapperStyles","_initItems","_initTemplate","_aria","name","animation","grid","template","height","width","setOptions","deepExtend","empty","getOptions","attr","role","progress","messages","loading","shape","settings","item","items","i","length","toLowerCase","css","format","colStart","colSpan","rowStart","rowSpan","appendTo","replace","append","_addClasses","shapes","animations","find","removeAttr","j","columns","rows","gap","plugin","jQuery","kendo$1","__meta__","id","category","depends","default","Object","defineProperty","value"],"mappings":"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","file":"kendo.skeletoncontainer.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Skeletoncontainer = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"skeletoncontainer\",\n        name: \"SkeletonContainer\",\n        category: \"web\",\n        depends: [ \"core\"]\n    };\n\n    (function($) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            WAVE_ANIMATION = \"k-skeleton-wave\",\n            PULSE_ANIMATION = \"k-skeleton-pulse\",\n            WRAPPER_CLASS = \"k-skeleton-container\";\n\n        var SkeletonContainer = Widget.extend( {\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.element = $(element).addClass(WRAPPER_CLASS);\n\n                that._setWrapperStyles();\n                that._initItems();\n                that._initTemplate();\n                that._aria();\n            },\n\n            options: {\n                name: \"SkeletonContainer\",\n                animation: \"pulse\",\n                grid: null,\n                template: null,\n                height: \"\",\n                width: \"\"\n            },\n\n            setOptions: function(options) {\n                kendo.deepExtend(this.options, options);\n                this.element.empty();\n                this.init(this.element, this.options);\n            },\n\n            getOptions: function() {\n                var result = $.extend(true, {}, this.options);\n\n                return result;\n            },\n\n            _aria: function() {\n                var element = this.element;\n\n                element.attr({\n                    \"role\": \"alert\",\n                    \"aria-live\": \"polite\",\n                    \"aria-label\": kendo.ui.progress.messages.loading\n                });\n            },\n\n            _initItems: function() {\n                if (!this.options.grid) {\n                    return;\n                }\n\n                var that = this;\n                var grid = that.options.grid;\n                var items = grid.items;\n                var shape;\n                var settings;\n                var item;\n\n                for (var i = 0; i < items.length; i++) {\n                    settings = items[i];\n                    item = $(\"<div></div>\");\n\n                    shape = settings.shape.toLowerCase();\n\n                    item\n                        .css({\n                            \"grid-column\": kendo.format(\"{0} / span {1}\",settings.colStart, settings.colSpan),\n                            \"grid-row\": kendo.format(\"{0} / span {1}\",settings.rowStart, settings.rowSpan)\n                        })\n    \t\t\t\t\t.addClass(\"k-skeleton\")\n                        .addClass(kendo.format(\"k-skeleton-{0}\", shape === \"rectangle\" ? \"rect\" : shape));\n\n                    item.appendTo(that.element);\n                }\n            },\n\n            _initTemplate: function() {\n                if (!this.options.template || this.options.grid) {\n                    return;\n                }\n\n                var template = kendo.template(this.options.template)({});\n\n                template = template\n                        .replace(/data-animation/gi, \"k-skeleton\")\n                        .replace(/data-shape/gi, \"k-skeleton\")\n                        .replace(/k-skeleton-rectangle/gi, \"k-skeleton-rect\");\n\n                this.element.append(template);\n\n                this._addClasses();\n            },\n\n            _addClasses: function() {\n                var shapes = [\"circle\", \"rect\", \"text\"];\n                var animations = [\"wave\", \"pulse\"];\n\n                for (var i = 0; i < shapes.length; i++) {\n                    this.element\n                        .find(\"[k-skeleton-\" + shapes[i] + \"]\")\n                        .removeAttr(\"k-skeleton-\" + shapes[i])\n                        .addClass(\"k-skeleton k-skeleton-\" + shapes[i] + \"\");\n                }\n\n                for (var j = 0; j < animations.length; j++) {\n                    this.element\n                        .find(\"[k-skeleton-\" + animations[j] + \"]\")\n                        .removeAttr(\"k-skeleton-\" + animations[j])\n                        .addClass(\"k-skeleton-\" + animations[j] + \"\");\n                }\n            },\n\n            _setWrapperStyles: function() {\n                var that = this;\n                var options = that.options;\n                var grid = options.grid;\n                var animation = options.animation.toLowerCase();\n\n                if (grid) {\n                    that.element\n                        .css({\n                            \"grid-template-columns\": kendo.format(\"repeat({0}, 1fr)\", grid.columns),\n                            \"grid-template-rows\": kendo.format(\"repeat({0}, 1fr)\", grid.rows),\n                            \"column-gap\": (grid.gap || {}).columns + \"px\",\n                            \"row-gap\": (grid.gap || {}).rows + \"px\"\n                        })\n                        .addClass(\"k-d-grid\");\n                }\n\n                that.element.css({\n                    \"width\": typeof options.width === \"string\" ? options.width : options.width + \"px\",\n                    \"height\": typeof options.height === \"string\" ? options.height : options.height + \"px\"\n                });\n\n                if (animation !== \"none\") {\n                    that.element.addClass(animation == \"wave\" ? WAVE_ANIMATION : PULSE_ANIMATION);\n                }\n            }\n        });\n\n        ui.plugin(SkeletonContainer);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}