{"version":3,"sources":["raw-js/kendo.checkboxgroup.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Checkboxgroup","this","$","window","ui","InputGroupBase","CHECKED","CheckBoxGroup","extend","options","name","inputName","inputRounded","inputSize","enabled","labelPosition","layout","items","ITEM_TEMPLATE","NS","COMPONENT","groupStyles","item","input","label","list","vertical","horizontal","disabled","checkAll","shouldCheck","that","inputs","element","find","prop","_value","each","i","push","value","values","currentInput","selectedElements","updatedSelectedElements","selectedValues","length","add","_changeHandler","e","target","val","_targetForPreventedChange","is","filter","trigger","_dataValRequired","validationAttributes","wrapper","attr","cssProperties","registerPrefix","registerValues","roundedValues","concat","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default","Object","defineProperty"],"mappings":"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","file":"kendo.checkboxgroup.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.inputgroupbase.js'), require('kendo.checkbox.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.inputgroupbase', 'kendo.checkbox'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Checkboxgroup = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"checkboxgroup\",\n        name: \"CheckBoxGroup\",\n        category: \"web\",\n        description: \"The CheckBoxGroup component.\",\n        depends: [ \"core\", \"inputgroupbase\", \"checkbox\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            InputGroupBase = ui.InputGroupBase,\n            CHANGE = \"change\",\n            DOT = \".\",\n            CHECKED = \"checked\",\n            VERTICAL = \"vertical\",\n            AFTER = \"after\";\n\n        var CheckBoxGroup = InputGroupBase.extend({\n            options: {\n                name: \"CheckBoxGroup\",\n                inputName: \"\",\n                inputRounded: \"medium\",\n                inputSize: \"medium\",\n                enabled: true,\n                labelPosition: AFTER,\n                layout: VERTICAL,\n                items: []\n            },\n\n            ITEM_TEMPLATE: '<li class=\"k-checkbox-list-item\">' +\n                '<input type=\"checkbox\" class=\"k-checkbox\" >' +\n            '</li>',\n\n            NS: \".kendoCheckBoxGroup\",\n\n            COMPONENT: \"kendoCheckBox\",\n\n            groupStyles: {\n                item: \"k-checkbox-list-item\",\n                input: \"k-checkbox\",\n                label: \"k-checkbox-label\",\n                list: \"k-checkbox-list\",\n                vertical: \"k-list-vertical\",\n                horizontal: \"k-list-horizontal\",\n                disabled: \"k-disabled\"\n            },\n\n            checkAll: function(shouldCheck) {\n                var that = this,\n                    inputs = that.element.find(\"input\"),\n                    getValues = function(i, input) {\n                        that._value.push(input.value);\n                    };\n\n                if (shouldCheck === true) {\n                    inputs.prop(CHECKED, true);\n                    that._value = [];\n                    inputs.each(getValues);\n                } else if (shouldCheck === false) {\n                    inputs.prop(CHECKED, false);\n                    that._value = [];\n                }\n            },\n\n            value: function(values) {\n                var that = this,\n                    currentInput,\n                    selectedValues = [],\n                    selectedElements, updatedSelectedElements, i;\n\n                if (values === undefined$1) {\n                    if (!that._value) {\n                        that._value = [];\n                    }\n                    return that._value;\n                } else if (values === null || values.length === 0) {\n                    that._value = [];\n                    that.element.find(DOT + that.groupStyles.input).prop(CHECKED, false);\n                    return;\n                } else if (!values || values.length < 1) {\n                    return;\n                }\n\n                selectedElements = that.element.find(\"input[value='\" + values[0] + \"']\");\n\n                if (selectedElements.length) {\n                    selectedValues.push(values[0]);\n                }\n\n                for (i = 1; i < values.length; i++) {\n                    currentInput = that.element.find(\"input[value='\" + values[i] + \"']\");\n                    updatedSelectedElements = selectedElements.add(currentInput);\n\n                    if (updatedSelectedElements.length > selectedElements.length) {\n                        selectedElements = updatedSelectedElements;\n                        selectedValues.push(values[i]);\n                    }\n                }\n\n                that._value = selectedValues;\n                that.element.find(DOT + that.groupStyles.input).prop(CHECKED, false);\n                selectedElements.prop(CHECKED, true);\n            },\n\n            _changeHandler: function(e) {\n                var target = $(e.target),\n                    value = target.val(),\n                    filterOut = function(item) {\n                        return item !== value;\n                    };\n\n                if (this._targetForPreventedChange === e.target) {\n                    this._targetForPreventedChange = null;\n                    return;\n                }\n\n                if (!this._value) {\n                    this._value = [];\n                }\n\n                if (target.is(\":checked\")) {\n                    this._value.push(value);\n                } else {\n                    this._value = this._value.filter(filterOut);\n                }\n\n                this.trigger(CHANGE, {\n                    target: target\n                });\n            },\n\n            _dataValRequired: function(validationAttributes) {\n                validationAttributes[\"data-msg-required\"] = this.wrapper.attr(\"data-val-required\");\n                validationAttributes[\"data-rule-required\"] = \"true\";\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"CheckBoxGroup\", \"k-checkbox-\");\n\n        kendo.cssProperties.registerValues(\"CheckBoxGroup\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(CheckBoxGroup);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}