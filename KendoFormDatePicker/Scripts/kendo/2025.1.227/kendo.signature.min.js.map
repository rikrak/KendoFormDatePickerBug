{"version":3,"sources":["raw-js/kendo.signature.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Signature","this","window","inputs","kendoDrawing","_a","util","elementOffset","limitValue","Point","geometry","Rect","transform","noop","SignaturePad","element","options","lastMoveTime","Object","assign","scale","precision","samplingRate","smooth","color","backgroundColor","strokeWidth","onChange","onDraw","onDrawEnd","pathOptions","stroke","width","lineCap","lineJoin","initSurface","attachEvents","prototype","destroy","detachEvents","clear","rootGroup","path","defineProperty","get","Boolean","points","enumerable","configurable","toString","set","value","MultiPath","parse","append","loadImage","data","size","height","contentWidth","contentHeight","importWidth","importHeight","scaleX","scaleY","Math","min","img","Image","exportImage","_b","exportWidth","exportHeight","exportRect","exportGroup","Group","clip","Path","fromRect","contentGroup","frame","fill","children","push","apply","resize","surface","setOptions","background","Surface","create","type","style","touchAction","offsetWidth","offsetHeight","draw","onPointerDown","bind","onPointerMove","onPointerUp","addEventListener","removeEventListener","touchPoint","e","offset","pageX","pageY","left","top","readonly","isPrimary","button","isMainButton","setPointerCapture","pointerId","point","moveTo","now","Date","getTime","lastPoint","length","minDelta","distanceTo","lineTo","segments","curveFromPoints","paths","splice","pathData","common","drawing","$","Widget","ui","Dialog","html","outerWidth","_outerWidth","outerHeight","_outerHeight","Pad","ns","CHANGE","OPEN","CLOSE","CLICK","extend","init","that","fn","call","_createElements","maximizable","_createInput","wrapper","getComputedStyle","_createPad","_createDialogPad","_attachHandlers","_assignLabel","_pad","_dialogPad","enable","name","fillMode","hideLine","label","popupScale","rounded","exportScale","events","currentOptions","oldBtnClass","getValidCssClass","btns","add","_dialogPadEl","find","targets","removeClass","_clearCssClasses","deepExtend","_destroyPad","_destroyDialog","pad","i","copyPath","_hideLine","_applyCssClasses","toggle","addClass","removeAttr","close","_dialog","open","off","empty","toggleClass","renderButton","icon","insertAfter","_dialogEl","_value","_input","val","reset","attr","_ariaLabel","on","trigger","autocomplete","required","appendTo","remove","line","maximize","padOptions","then","hide","show","canvas","title","closable","keyCode","keys","ESC","cssProperties","registerPrefix","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default"],"mappings":"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","file":"kendo.signature.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.drawing.js'), require('kendo.dialog.js'), require('kendo.html.button.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.drawing', 'kendo.dialog', 'kendo.html.button'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Signature = {})));\n})(this, (function (exports) {\n    (function () {\n\n    window.kendo = window.kendo || {};\n    window.kendo.inputs = window.kendo.inputs || {};\n    (function (exports, kendoDrawing) {\n\n        var _a = kendoDrawing.util, elementOffset = _a.elementOffset, limitValue = _a.limitValue;\n\n        var Point = kendo.geometry.Point, Rect = kendo.geometry.Rect, transform = kendo.geometry.transform;\n        var noop = function () { };\n        var DECIMAL_DIGITS = 3;\n        var DEFAULT_COLOR = '#000';\n        var DEFAULT_BACKGROUND_COLOR = '#fff';\n        var DEFAULT_PRECISION = 1;\n        var DEFAULT_SAMPLING_RATE = 200; // Updates per second\n        var DEFAULT_STROKE_WIDTH = 1;\n        var DEFAULT_WIDTH = 750;\n        var DEFAULT_HEIGHT = 250;\n        var DEFAULT_SCALE = 1;\n        // Export images at maximized scale (3x) and 2x pixel density to cover HiDPI screens.\n        var DEFAULT_EXPORT_SCALE = 6;\n        var SignaturePad = /** @class */ (function () {\n            function SignaturePad(element, options) {\n                if (options === void 0) { options = {}; }\n                this.element = element;\n                this.lastMoveTime = 0;\n                this.options = Object.assign({\n                    scale: DEFAULT_SCALE,\n                    precision: DEFAULT_PRECISION,\n                    samplingRate: DEFAULT_SAMPLING_RATE,\n                    smooth: options.smooth !== false,\n                    color: options.color || DEFAULT_COLOR,\n                    backgroundColor: options.backgroundColor || DEFAULT_BACKGROUND_COLOR,\n                    strokeWidth: DEFAULT_STROKE_WIDTH,\n                    onChange: noop,\n                    onDraw: noop,\n                    onDrawEnd: noop\n                }, options);\n                this.pathOptions = {\n                    stroke: {\n                        color: this.options.color,\n                        width: this.options.strokeWidth,\n                        lineCap: 'round',\n                        lineJoin: 'round'\n                    }\n                };\n                this.initSurface();\n                this.attachEvents();\n            }\n            SignaturePad.prototype.destroy = function () {\n                this.detachEvents();\n            };\n            SignaturePad.prototype.clear = function () {\n                this.rootGroup.clear();\n                this.path = null;\n            };\n            Object.defineProperty(SignaturePad.prototype, \"isDrawing\", {\n                get: function () {\n                    return Boolean(this.points);\n                },\n                enumerable: false,\n                configurable: true\n            });\n            Object.defineProperty(SignaturePad.prototype, \"pathData\", {\n                get: function () {\n                    var _a;\n                    return (_a = this.path) === null || _a === void 0 ? void 0 : _a.toString(DECIMAL_DIGITS);\n                },\n                set: function (value) {\n                    this.clear();\n                    this.path = kendoDrawing.MultiPath.parse(value, this.pathOptions);\n                    this.rootGroup.append(this.path);\n                },\n                enumerable: false,\n                configurable: true\n            });\n            SignaturePad.prototype.loadImage = function (data, size) {\n                if (size === void 0) { size = []; }\n                if (!data) {\n                    this.clear();\n                    return;\n                }\n                var _a = this.size, width = _a[0], height = _a[1];\n                var contentWidth = width / this.options.scale;\n                var contentHeight = height / this.options.scale;\n                var importWidth = size[0] || contentWidth * DEFAULT_EXPORT_SCALE;\n                var importHeight = size[1] || contentHeight * DEFAULT_EXPORT_SCALE;\n                var scaleX = contentWidth / importWidth;\n                var scaleY = contentHeight / importHeight;\n                var scale = Math.min(scaleX, scaleY);\n                var img = new kendoDrawing.Image(data, new kendo.geometry.Rect([0, 0], [importWidth, importHeight]));\n                img.transform(transform().scale(scale, scale));\n                this.clear();\n                this.rootGroup.append(img);\n            };\n            SignaturePad.prototype.exportImage = function (options) {\n                var _a;\n                var _b = this.size, width = _b[0], height = _b[1];\n                var contentWidth = width / this.options.scale;\n                var contentHeight = height / this.options.scale;\n                var exportWidth = (options === null || options === void 0 ? void 0 : options.width) || contentWidth * DEFAULT_EXPORT_SCALE;\n                var exportHeight = (options === null || options === void 0 ? void 0 : options.height) || contentHeight * DEFAULT_EXPORT_SCALE;\n                var scaleX = exportWidth / contentWidth;\n                var scaleY = exportHeight / contentHeight;\n                var scale = Math.min(scaleX, scaleY);\n                var exportRect = new Rect([0, 0], [exportWidth, exportHeight]);\n                var exportGroup = new kendoDrawing.Group({\n                    clip: kendoDrawing.Path.fromRect(exportRect)\n                });\n                var contentGroup = new kendoDrawing.Group({\n                    transform: transform().scale(scale, scale)\n                });\n                var frame = kendoDrawing.Path.fromRect(exportRect, {\n                    fill: {\n                        color: this.options.backgroundColor\n                    }\n                });\n                exportGroup.append(frame);\n                exportGroup.append(contentGroup);\n                (_a = contentGroup.children).push.apply(_a, this.rootGroup.children);\n                return kendoDrawing.exportImage(exportGroup, Object.assign({\n                    width: exportWidth,\n                    height: exportHeight\n                }, options));\n            };\n            SignaturePad.prototype.resize = function () {\n                this.surface.resize(true);\n            };\n            SignaturePad.prototype.setOptions = function (options) {\n                Object.assign(this.options, options);\n                this.pathOptions.stroke.color = this.options.color;\n                this.pathOptions.stroke.width = this.options.strokeWidth;\n                if (this.path) {\n                    this.path.options.set('stroke.color', this.options.color);\n                    this.path.options.set('stroke.width', this.options.strokeWidth);\n                }\n                this.background.options.set('fill.color', this.options.backgroundColor);\n            };\n            SignaturePad.prototype.initSurface = function () {\n                this.surface = kendoDrawing.Surface.create(this.element, { type: 'canvas' });\n                this.element.style.touchAction = 'none';\n                var scale = this.options.scale;\n                this.rootGroup = new kendoDrawing.Group({\n                    transform: transform().scale(scale, scale)\n                });\n                // The signature is not resizable, store initial dimensions.\n                var width = this.element.offsetWidth || DEFAULT_WIDTH;\n                var height = this.element.offsetHeight || DEFAULT_HEIGHT;\n                this.size = [width, height];\n                this.background = kendoDrawing.Path.fromRect(new Rect([0, 0], this.size), {\n                    fill: {\n                        color: this.options.backgroundColor\n                    }\n                });\n                this.surface.draw(this.background);\n                this.surface.draw(this.rootGroup);\n            };\n            SignaturePad.prototype.attachEvents = function () {\n                this.onPointerDown = this.onPointerDown.bind(this);\n                this.onPointerMove = this.onPointerMove.bind(this);\n                this.onPointerUp = this.onPointerUp.bind(this);\n                this.element.addEventListener('pointerdown', this.onPointerDown);\n                this.element.addEventListener('pointermove', this.onPointerMove);\n                this.element.addEventListener('pointerup', this.onPointerUp);\n            };\n            SignaturePad.prototype.detachEvents = function () {\n                this.element.removeEventListener('pointerdown', this.onPointerDown);\n                this.element.removeEventListener('pointermove', this.onPointerMove);\n                this.element.removeEventListener('pointerup', this.onPointerUp);\n            };\n            SignaturePad.prototype.touchPoint = function (e) {\n                var offset = elementOffset(this.element);\n                var pageX = e.pageX;\n                var pageY = e.pageY;\n                var scale = 1 / this.options.scale;\n                return new Point(pageX - offset.left, pageY - offset.top).scale(scale, scale);\n            };\n            SignaturePad.prototype.onPointerDown = function (e) {\n                if (this.options.readonly || !e.isPrimary || !isMainButton(e)) {\n                    return;\n                }\n                if (!this.path) {\n                    this.path = new kendoDrawing.MultiPath(this.pathOptions);\n                    this.rootGroup.append(this.path);\n                }\n                this.options.onDraw();\n                this.element.setPointerCapture(e.pointerId);\n                var point = this.touchPoint(e);\n                this.points = [point];\n                this.path.moveTo(point);\n            };\n            SignaturePad.prototype.onPointerMove = function (e) {\n                if (!this.points || !e.isPrimary) {\n                    return;\n                }\n                var now = (new Date()).getTime();\n                var elapsed = now - this.lastMoveTime;\n                var minTimeDelta = 1000 / limitValue(this.options.samplingRate, 1, 10000);\n                if (elapsed < minTimeDelta) {\n                    return;\n                }\n                else {\n                    this.lastMoveTime = now;\n                }\n                var point = this.touchPoint(e);\n                var lastPoint = this.points[this.points.length - 1];\n                var minDelta = 1 / limitValue(this.options.precision, 0.01, 100);\n                if (point.distanceTo(lastPoint) < minDelta) {\n                    return;\n                }\n                this.points.push(point);\n                this.path.lineTo(point);\n            };\n            SignaturePad.prototype.onPointerUp = function (e) {\n                if (!e.isPrimary || !this.path || !this.points || this.options.readonly) {\n                    return;\n                }\n                if (this.options.smooth) {\n                    var segments = kendoDrawing.Path.curveFromPoints(this.points);\n                    this.path.paths.splice(this.path.paths.length - 1, 1, segments);\n                }\n                this.points = null;\n                this.options.onDrawEnd();\n                this.options.onChange(this.pathData);\n            };\n            return SignaturePad;\n        }());\n        function isMainButton(e) {\n            return typeof (e.button) !== 'number' || e.button === 0;\n        }\n\n        exports.SignaturePad = SignaturePad;\n\n    })(window.kendo.inputs.common = window.kendo.inputs.common || {}, window.kendo.drawing);\n\n\n    })();\n\n    const __meta__ = {\n        id: \"signature\",\n        name: \"Signature\",\n        category: \"web\",\n        description: \"The Signature component ...\",\n        depends: [ \"core\", \"dialog\", \"html.button\", \"drawing\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            Dialog = kendo.ui.Dialog,\n            html = kendo.html,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            Pad = kendo.inputs.common.SignaturePad,\n            ns = \".kendoSignature\",\n            DEFAULT_BACKGROUND_COLOR = '#ffffff',\n            CHANGE = \"change\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CLICK = \"click\",\n            TABINDEX = \"tabindex\",\n            ARIA_LABEL = \"aria-label\",\n            ARIA_LABELLEDBY = \"aria-labelledby\";\n\n        var Signature = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                options = options || {};\n\n                Widget.fn.init.call(that, element, options);\n\n                that._createElements(that.element, that.options.maximizable ? \"maxi\" : \"\", false, 1);\n                that._createInput();\n                that.wrapper = that.element;\n                if (!that.options.backgroundColor) {\n                    that.options.backgroundColor = getComputedStyle(that.element[0]).backgroundColor || DEFAULT_BACKGROUND_COLOR;\n                }\n\n                that._createPad();\n                that._createDialogPad();\n                that._attachHandlers();\n                that._assignLabel();\n\n                if (that.options.value) {\n                    that._pad.loadImage(that.options.value);\n                    that._dialogPad.loadImage(that.options.value);\n                }\n\n                if (that.options.readonly) {\n                    that.readonly();\n                }\n\n                if (!that.options.enable) {\n                    that.enable(false);\n                }\n            },\n\n            options: {\n                name: \"Signature\",\n                color: \"#000000\",\n                enable: true,\n                fillMode: \"solid\",\n                hideLine: false,\n                label: \"\",\n                maximizable: true,\n                popupScale: 3,\n                readonly: false,\n                rounded: \"medium\",\n                size: \"medium\",\n                smooth: false,\n                strokeWidth: 1,\n                exportScale: 2,\n                value: \"\"\n            },\n\n            events: [ CHANGE, OPEN, CLOSE],\n\n            setOptions: function(options) {\n                var currentOptions = this.options;\n                var path;\n                var oldBtnClass = kendo.getValidCssClass(\"k-button-\", \"size\", currentOptions.size);\n                var btns = this.element.add(this._dialogPadEl).find(\".\" + oldBtnClass);\n                var targets = $(this._pad.element).add(this._dialogPad.element);\n\n                btns.removeClass(oldBtnClass);\n                this._clearCssClasses(currentOptions);\n                this.element.removeClass(kendo.getValidCssClass(\"k-signature-\", \"size\", currentOptions.size));\n                kendo.deepExtend(currentOptions, options);\n                this.options = currentOptions;\n                this.element.width(currentOptions.width);\n                this.element.height(currentOptions.height);\n                this._dialogPadEl.width(currentOptions.width * currentOptions.popupScale);\n                this._dialogPadEl.height(currentOptions.height * currentOptions.popupScale);\n                path = this._pad.path;\n                this._destroyPad();\n                this._destroyDialog();\n                this._createPad();\n                this._createDialogPad();\n                copyPath(this._pad, path);\n                this.enable(currentOptions.enable);\n                this.readonly(currentOptions.readonly);\n                this._hideLine(this.element);\n                this._hideLine(this._dialogPadEl);\n                this._applyCssClasses(this.element);\n                this.element.find(\".k-signature-maximize\").toggle(currentOptions.maximizable);\n                this.element.removeClass(kendo.getValidCssClass(\"k-input-\", \"size\", this.options.size));\n                this.element.addClass(kendo.getValidCssClass(\"k-signature-\", \"size\", this.options.size));\n                btns.addClass(kendo.getValidCssClass(\"k-button-\", \"size\", currentOptions.size));\n\n                targets.removeAttr(\"aria-label\");\n                this._assignLabel();\n            },\n\n            close: function() {\n                if (!this._dialog) {\n                    return;\n                }\n                this._dialog.close();\n            },\n\n            open: function() {\n                if (!this.options.maximizable || !this._dialog) {\n                    return;\n                }\n                this._dialog.open();\n            },\n\n            destroy: function() {\n                var that = this;\n                that._destroyPad();\n\n                that._destroyDialog();\n\n                that.element.off(ns);\n                that.element.empty();\n                Widget.fn.destroy.call(that);\n            },\n\n            enable: function(enable) {\n                var enable = enable !== false;\n                if (!enable) {\n                    this._dialog.close();\n                }\n\n                this.element.find(\".k-button\").toggle(enable);\n                this.element.toggleClass(\"k-disabled\", !enable);\n                this._pad.options.readonly = !enable;\n                this._dialogPad.options.readonly = !enable;\n            },\n\n            readonly: function(toggle) {\n                var that = this;\n                var toggle = toggle !== false;\n\n                that._pad.options.readonly = toggle;\n                that._dialogPad.options.readonly = toggle;\n\n                var clearButton = that.element.find(\".k-signature-clear\");\n\n                if (!clearButton.length && !toggle) {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"></button>', {\n                        icon: \"x\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).insertAfter(that.element.find(\".k-signature-actions-bottom\"));\n\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"></button>', {\n                        icon: \"x\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).insertAfter(that._dialogEl.find(\".k-signature-actions-bottom\"));\n                }\n\n                that.element.find(\".k-signature-clear\").toggle(!toggle);\n                that._dialogEl.find(\".k-signature-clear\").toggle(!toggle);\n            },\n\n            value: function(value) {\n                if (value !== undefined$1) {\n                    this._value = value;\n                    this._input.val(value);\n                    this._pad.loadImage(value);\n                }\n\n                return this._value;\n            },\n\n            reset: function() {\n                this._dialogPad.clear();\n                this._pad.clear();\n                this._value = \"\";\n            },\n\n            _assignLabel: function() {\n                var targets = $(this._pad.element).add(this._dialogPad.element);\n\n                if (this.options.label) {\n                    targets.attr(ARIA_LABEL, this.options.label);\n                } else {\n                    this._ariaLabel(targets);\n                }\n\n                this.element.removeAttr(ARIA_LABELLEDBY);\n            },\n\n            _attachHandlers: function() {\n                var that = this;\n                that.element\n                    .on(CLICK + ns, \".k-signature-clear\", function() {\n                        that.reset();\n                    })\n                    .on(CLICK + ns, \".k-signature-maximize\", function() {\n                        that._dialog.open();\n                        that._dialog.wrapper.find(\".k-signature-minimize\").trigger(\"focus\");\n                    });\n            },\n\n            _createInput: function() {\n                var that = this;\n                var name = that.element.attr(\"name\");\n                var autocomplete = that.element.attr(\"autocomplete\");\n                var required = that.element.attr(\"required\");\n\n                that._input = $(\"<input class='k-hidden' aria-hidden='true'/>\").appendTo(that.element);\n\n                if (name) {\n                    that._input.attr(\"name\", name);\n                    that.element.removeAttr(\"name\");\n                }\n\n                if (autocomplete) {\n                    that._input.attr(\"autocomplete\", autocomplete);\n                    that.element.removeAttr(\"autocomplete\");\n                }\n\n                if (required) {\n                    that._input.attr(\"required\", required);\n                    that.element.removeAttr(\"required\");\n                }\n            },\n\n            _destroyPad: function() {\n                if (this._pad) {\n                    kendo.destroy(this.element.find(\".k-signature-canvas\"));\n                    this._pad = null;\n                    this.element.find(\".k-signature-canvas\").empty();\n                }\n            },\n\n            _destroyDialog: function() {\n                if (this._dialogPad) {\n                    this._dialogPad.destroy();\n                    this._dialogPad = null;\n                    this._dialogEl.off(ns);\n                    this._dialog.destroy();\n                    this._dialog = null;\n                    this._dialogEl.remove();\n                    this._dialogEl = null;\n                }\n            },\n\n            _hideLine: function(wrapper) {\n                var line = wrapper.find(\".k-signature-line\");\n                if (!this.options.hideLine && !line.length) {\n                    $(\"<div class='k-signature-line'>\").appendTo(wrapper);\n                }\n\n                if (this.options.hideLine) {\n                    line.remove();\n                }\n            },\n\n            _createElements: function(wrapper, button, maximize, scale) {\n                $(\"<div class='k-signature-canvas' role='img' tabindex='0'>\").appendTo(wrapper);\n\n                this._hideLine(wrapper);\n\n                $(\"<div class='k-signature-actions k-signature-actions-top'></div>\").appendTo(wrapper);\n\n                if (button == \"mini\") {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-minimize k-rotate-180\" aria-label=\"Minimize signature\"></button>', {\n                        icon: \"hyperlink-open\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).appendTo(wrapper.find(\".k-signature-actions-top\"));\n                }\n\n                if (button == \"maxi\") {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-maximize\" aria-label=\"Maximize signature\"></button>', {\n                        icon: \"hyperlink-open\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).appendTo(wrapper.find(\".k-signature-actions-top\"));\n                }\n\n                $(\"<div class='k-signature-actions k-signature-actions-bottom'></div>\").appendTo(wrapper);\n\n                if (!this.options.readonly) {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"  aria-label=\"Clear signature\"></button>', {\n                        icon: \"x\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).appendTo(wrapper.find(\".k-signature-actions-bottom\"));\n                }\n\n                wrapper.addClass(\"k-input k-signature\");\n\n                wrapper.width(this.options.width * scale);\n                wrapper.height(this.options.height * scale);\n\n                if (maximize) {\n                    wrapper.addClass(\"k-signature-maximized\");\n                }\n\n                this._applyCssClasses(wrapper);\n                //workaround as the sizings are added to -signature- but roundings to -input-\n                wrapper.removeClass(kendo.getValidCssClass(\"k-input-\", \"size\", this.options.size));\n                wrapper.addClass(kendo.getValidCssClass(\"k-signature-\", \"size\", this.options.size));\n            },\n\n            _createPad: function() {\n                var that = this;\n                var padOptions = $.extend(true, {}, that.options, {\n                    onChange: function() {\n                        var width = outerWidth(that.element, false);\n                        var height = outerHeight(that.element, false);\n                        that._pad.exportImage({\n                            width: width * that.options.exportScale,\n                            height: height * that.options.exportScale\n                        }).then(function(val) {\n                            that._value = val;\n                            that._input.val(val);\n                            that.trigger(CHANGE);\n                        });\n\n                        that._pad.exportImage({\n                            width: width * that.options.exportScale * that.options.popupScale,\n                            height: height * that.options.exportScale * that.options.popupScale\n                        }).then(function(val) {\n                            that._dialogPad.loadImage(val);\n                        });\n                    },\n                    onDraw: function() {\n                        that.element.find(\".k-button\").hide();\n                    },\n                    onDrawEnd: function() {\n                        that.element.find(\".k-button\").show();\n                    }\n                });\n\n                that._pad = new Pad(that.element.find(\".k-signature-canvas\")[0], padOptions);\n            },\n\n            _createDialogPad: function() {\n                var that = this;\n                var canvas = null;\n\n                that._dialogEl = $(\"<div>\").appendTo(that.element);\n                that._dialog = new Dialog(that._dialogEl, {\n                    title: false,\n                    closable: false,\n                    open: function() {\n                        that.trigger(OPEN);\n                    },\n                    close: function() {\n                        that.trigger(CLOSE);\n                    }\n                });\n\n                that._dialogEl\n                    .removeAttr(TABINDEX)\n                    .on(\"keydown\", function(e) {\n                        if (e.keyCode === kendo.keys.ESC) {\n                            that._dialog.close();\n                        }\n                    });\n\n                that._dialogPadEl = $(\"<div>\").appendTo(that._dialog.element);\n                that._createElements(that._dialogPadEl, \"mini\", true, this.options.popupScale);\n                canvas = that._dialogPadEl.find(\".k-signature-canvas\")[0];\n\n                that._dialogPad = new Pad(canvas, $.extend(true, {}, that.options, {\n                    scale: that.options.popupScale,\n                    onChange: function() {\n                        var width = outerWidth(that.element, false);\n                        var height = outerHeight(that.element, false);\n                        that._dialogPad.exportImage({\n                            width: width * that.options.exportScale,\n                            height: height * that.options.exportScale\n                        }).then(function(val) {\n                            that._pad.loadImage(val);\n                            that._value = val;\n                            that._input.val(val);\n                            that.trigger(CHANGE);\n                        });\n                    },\n                    onDraw: function() {\n                        that._dialogEl.find(\".k-button\").hide();\n                    },\n                    onDrawEnd: function() {\n                        that._dialogEl.find(\".k-button\").show();\n                    }\n                }));\n\n                // Dialog should be opened at first for drawing to work\n                that._dialog.close();\n                that._dialogEl\n                    .on(CLICK + ns, \".k-signature-clear\", function() {\n                        that.reset();\n                    })\n                    .on(CLICK + ns, \".k-signature-minimize\", function() {\n                        that._dialog.close();\n                    });\n            }\n        });\n\n        function copyPath(pad, path) {\n            if (!path || !path.paths || !path.paths.length) {\n                return;\n            }\n            pad.path = new kendo.drawing.MultiPath(pad.pathOptions);\n            pad.rootGroup.append(pad.path);\n\n            for (var i = 0; i < path.paths.length; i++) {\n                pad.path.paths.push(path.paths[i]);\n            }\n            pad.options.onChange();\n        }\n\n        kendo.cssProperties.registerPrefix(\"Signature\", \"k-input-\");\n\n        kendo.ui.plugin(Signature);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}