{"version":3,"sources":["raw-js/kendo.textbox.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Textbox","Core","Floatinglabel","Icons","PrefixSuffixContainersChunk","this","kendo_core_js","kendo_floatinglabel_js","kendo_icons_js","kendo_prefixSuffixContainers_chunk_js","$","undefined$1","window","Widget","ui","isPlainObject","NS","CHANGE","DISABLED","READONLY","INPUT","INPUT_EV","FOCUSED","STATEDISABLED","STATEREADONLY","HIDDENCLASS","ARIA_DISABLED","TextBox","extend","init","element","options","that","fn","call","value","val","readonly","Boolean","attr","enable","placeholder","inputMode","_wrapper","_label","_editable","disable","addClass","icon","_icon","a","widget","wrapper","_clearButton","_clear","on","_clearValue","bind","notify","_applyCssClasses","floatingLabel","refresh","events","name","clearButton","label","rounded","size","fillMode","prefixOptions","separator","suffixOptions","_value","_showClear","_hideClear","focus","destroy","off","style","width","removeClass","setOptions","_inputLabel","remove","_floatingLabelContainer","unwrap","deepExtend","e","trigger","originalEvent","role","tabIndex","appendTo","toggleClass","prop","_focusin","_focusout","_change","_input","prepend","iconClass","newValue","floating","labelText","id","content","wrap","parent","FloatingLabel","isFunction","guid","DOMElement","cssText","className","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery","kendo$1","__meta__","category","description","depends","default","Object","defineProperty"],"mappings":"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","file":"kendo.textbox.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.floatinglabel.js'), require('kendo.icons.js'), require('kendo.prefix-suffix-containers.chunk.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.floatinglabel', 'kendo.icons', 'kendo.prefix-suffix-containers.chunk'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Textbox = {}), global.kendo._globals.Core, global.kendo._globals.Floatinglabel, global.kendo._globals.Icons, global.kendo._globals.PrefixSuffixContainersChunk));\n})(this, (function (exports, kendo_core_js, kendo_floatinglabel_js, kendo_icons_js, kendo_prefixSuffixContainers_chunk_js) {\n    const __meta__ = {\n        id: \"textbox\",\n        name: \"TextBox\",\n        category: \"web\",\n        description: \"The TextBox widget enables you to style and provide a floating label functionality to input elements\",\n        depends: [\"core\", \"floatinglabel\", \"icons\", \"prefix-suffix-containers.chunk\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            ui = kendo.ui,\n            isPlainObject = $.isPlainObject,\n            NS = \".kendoTextBox\",\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            INPUT = \"k-input-inner\",\n            INPUT_EV = \"input\",\n            FOCUSED = \"k-focus\",\n            LABELCLASSES = \"k-label k-input-label\",\n            FLOATINGLABELCLASS = \"k-floating-label\",\n            STATEDISABLED = \"k-disabled\",\n            STATEREADONLY = \"k-readonly\",\n            HIDDENCLASS = \"k-hidden\",\n            ARIA_DISABLED = \"aria-disabled\";\n\n        var TextBox = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n                options = $.extend(true, {}, options);\n\n                that.options.value = options.value || that.element.val();\n                that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n                that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(that.element.attr(\"disabled\")));\n                that.options.placeholder = options.placeholder || that.element.attr(\"placeholder\");\n                that.options.inputMode = options.inputMode || that.element.attr(\"inputmode\") || \"text\";\n\n                that.value(that.options.value);\n                that._wrapper();\n                that._label();\n                that._editable({\n                    readonly: that.options.readonly,\n                    disable: !(that.options.enable)\n                });\n\n                that.element\n                    .addClass(INPUT)\n                    .attr(\"placeholder\", that.options.placeholder)\n                    .attr(\"inputmode\", that.options.inputMode)\n                    .attr(\"autocomplete\", \"off\");\n\n                if (options.icon) {\n                    that._icon();\n                }\n\n                kendo_prefixSuffixContainers_chunk_js.a({ widget: that, wrapper: that.wrapper, options: that.options });\n                that._clearButton();\n                if (that._clear) {\n                    that._clear.on(\"click\" + NS + \" touchend\" + NS, that._clearValue.bind(that));\n                }\n\n                kendo.notify(that);\n                that._applyCssClasses();\n                if (that.floatingLabel) {\n                    that.floatingLabel.refresh();\n                }\n            },\n\n            events: [\n                CHANGE,\n                INPUT_EV\n            ],\n\n            options: {\n                name: 'TextBox',\n                value: '',\n                readonly: false,\n                clearButton: false,\n                enable: true,\n                placeholder: '',\n                label: null,\n                rounded: \"medium\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                icon: null,\n                prefixOptions: {\n                    separator: true\n                },\n                suffixOptions: {\n                    separator: true\n                }\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                that._value = value;\n                that.element.val(value);\n\n                value ? that._showClear() : that._hideClear();\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.refresh();\n                }\n            },\n\n            readonly: function(readonly) {\n                var that = this;\n\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                var that = this;\n\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            focus: function() {\n                var that = this;\n\n                that.element[0].focus();\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                }\n\n                if (that._clear) {\n                    that._clear.off(NS);\n                    that._clear = null;\n                }\n\n                that.element.off(NS);\n                that.element[0].style.width = \"\";\n                that.element.removeClass(INPUT);\n                Widget.fn.destroy.call(that);\n            },\n\n            setOptions: function(options) {\n                this.destroy();\n\n                if (this._inputLabel) {\n                    this._inputLabel.remove();\n                    this._inputLabel = null;\n                }\n\n                if (this._floatingLabelContainer) {\n                    this.floatingLabel.destroy();\n                    this.floatingLabel = null;\n                    this.element.unwrap();\n                    this.element.unwrap();\n                    this._floatingLabelContainer = null;\n                } else {\n                    this.element.unwrap();\n                }\n\n                kendo.deepExtend(this.options, options);\n                this.init(this.element, this.options);\n            },\n\n            _clearValue: function(e) {\n                this.element.val(\"\");\n                this.element.focus();\n                this.element.trigger(CHANGE, { value: \"\", originalEvent: e });\n                this._hideClear();\n            },\n\n            _hideClear: function() {\n                if (this._clear) {\n                    this._clear.addClass(HIDDENCLASS);\n                }\n            },\n\n            _showClear: function() {\n                if (this._clear) {\n                    this._clear.removeClass(HIDDENCLASS);\n                }\n            },\n\n            _clearButton: function() {\n                let that = this;\n\n                if (!that._clear) {\n                    that._clear = $(`<span unselectable=\"on\" class=\"k-clear-value\" title=\"Clear\">${kendo.ui.icon(\"x\")}</span>`).attr({\n                        \"role\": \"button\",\n                        \"tabIndex\": -1\n                    });\n                    that._clear.appendTo(that.wrapper);\n                }\n\n                if (!that.options.clearButton) {\n                    that._clear.remove();\n                }\n\n                if (!that.element.val()) {\n                    that._hideClear();\n                }\n            },\n\n            _editable: function(options) {\n                var that = this;\n                var element = that.element;\n                var wrapper = that.wrapper;\n                var disable = options.disable;\n                var readonly = options.readonly;\n\n                element.off(NS);\n\n                if (!readonly && !disable) {\n                    element.prop(DISABLED, false)\n                           .prop(READONLY, false)\n                           .attr(ARIA_DISABLED, false);\n\n                    wrapper.removeClass(STATEDISABLED)\n                            .removeClass(STATEREADONLY);\n\n                    element.on(\"focusin\" + NS, that._focusin.bind(that));\n                    element.on(\"focusout\" + NS, that._focusout.bind(that));\n                    element.on(CHANGE + NS, that._change.bind(that));\n                    element.on(INPUT_EV + NS, that._input.bind(that));\n                } else {\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable);\n\n                    wrapper.toggleClass(STATEDISABLED, disable)\n                            .toggleClass(STATEREADONLY, readonly);\n                }\n            },\n\n            _icon: function() {\n                this.wrapper.prepend(kendo.ui.icon({ icon: this.options.icon, iconClass: \"k-input-icon\" }));\n            },\n\n            _input: function(e) {\n                var that = this;\n                var newValue = that.element.val();\n\n                that.trigger(INPUT_EV, { value: newValue, originalEvent: e });\n            },\n\n            _label: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var id = element.attr(\"id\");\n                var floating;\n                var labelText;\n\n                if (options.label !== null) {\n                    floating = isPlainObject(options.label) ? options.label.floating : false;\n                    labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                    if (floating) {\n                        that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                        that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                    }\n\n                    if (kendo.isFunction(labelText)) {\n                        labelText = labelText.call(that);\n                    }\n\n                    if (!labelText) {\n                        labelText = \"\";\n                    }\n\n                    if (!id) {\n                        id = options.name + \"_\" + kendo.guid();\n                        element.attr(\"id\", id);\n                    }\n                    that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n                }\n            },\n\n            _focusin: function() {\n                var that = this;\n\n                that.wrapper.addClass(FOCUSED);\n            },\n\n            _focusout: function() {\n                var that = this;\n\n                that.wrapper.removeClass(FOCUSED);\n            },\n\n            _change: function(e) {\n                var that = this;\n                var newValue = that.element.val();\n\n                that._value = newValue;\n\n                that.trigger(CHANGE, { value: newValue, originalEvent: e });\n                newValue ? that._showClear() : that._hideClear();\n            },\n\n            _wrapper: function() {\n                var that = this;\n                var element = that.element;\n                var DOMElement = element[0];\n                var wrapper;\n\n                wrapper = element.wrap(\"<span class='k-input k-textbox'></span>\").parent();\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = \"100%\";\n                that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"TextBox\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"TextBox\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(TextBox);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}