{"version":3,"sources":["raw-js/kendo.wizard.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Wizard","this","$","undefined$1","window","Widget","ui","extend","encode","htmlEncode","WIZARD","CLICK","ACTIVATE","SELECT","RESET","SUBMIT","PREVIOUS","NEXT","DONE","ERROR","CONTENTLOAD","FORM_VALIDATE_FAILED","HIDDEN","STEPPER_STEP_LINK","ARIA_SELECTED","ARIA_HIDDEN","ARIA_LABEL","BOTTOM","RIGHT","LEFT","DOT","ID","ROLE","DATA_WIZARD_PREFIX","wizardClasses","Step","Class","init","options","actionBar","_processButtons","_render","name","index","content","contentUrl","contentId","markupContainer","form","buttons","pager","selected","enabled","className","totalSteps","wizardId","formTag","messages","_defaultButtonsConfiguration","first","middle","last","_pagerTemplate","step","currentStep","of","_buttons","load","_ajaxRequest","resetButtons","buttonsContainer","element","find","destroy","remove","_buttonsContainer","wizard","triggerActivate","that","url","ajaxOptions","type","cache","dataType","data","error","xhr","status","_triggerError","complete","_triggerActivate","success","contentElement","html","_triggerContentLoad","e","ajax","_ariaAttributes","label","attr","_buttonFactory","buttonOptions","button","kendoButton","themeColor","primary","getKendoButton","buttonElement","text","click","bind","enable","position","_leftButtonsContainer","append","_rightButtonsContainer","push","addClass","map","_pager","_content","loadFromRemote","prepend","_form","formElement","hide","formOptions","buttonsTemplate","kendoForm","getKendoForm","show","_iterateButton","charAt","toUpperCase","slice","pagerData","template","buttonsOptions","defaultButtons","length","fn","call","_wrapper","_createSteps","_stepper","_attachEvents","contentPosition","loadOnDemand","reloadOnSelect","validateForms","stepper","steps","reset","previous","next","done","events","wrapper","off","activeStep","enableStep","stepIndex","value","targetStep","isNaN","_steps","Number","insertAt","stepOptions","stepperStepOptions","alteredStep","numberOfSteps","_mapStepForStepper","is","forEach","i","splice","_insertStepElementAtIndex","_stepperAriaAttributes","_iterateAriaStep","stepsLength","currentStepIndex","_select","_selectStepper","removeAt","newSelectedStepIndex","stepContentElement","get","hasClass","select","clickBeforeSubmit","_doneClicked","_stepperSelectHandler","on","_resetClickHandler","_previousClickHandler","_nextClickHandler","_doneHandler","_changeStep","removeClass","removeAttr","_createStep","stepsFromMarkup","total","stepsFromMarkupTitles","children","title","textContent","toString","stepsContainer","stepsOptions","progress","empty","_refreshEditorWidgets","forms","validator","validate","preventDefault","trigger","sender","originalEvent","target","stepElement","after","_isEmpty","trim","stepperStep","ajaxLoad","validateOnPrevious","editorElements","getKendoEditor","refresh","targetLink","stepperElement","prependTo","stepperOptions","orientation","selectOnFocus","kendoKeydown","keyCode","keys","TAB","preventKendoKeydown","kendoStepper","getKendoStepper","wrapperId","stepperSteps","getIndex","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","features","default","Object","defineProperty"],"mappings":"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","file":"kendo.wizard.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.stepper.js'), require('kendo.button.js'), require('kendo.form.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.stepper', 'kendo.button', 'kendo.form'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Wizard = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"wizard\",\n        name: \"Wizard\",\n        category: \"web\",\n        description: \"The Wizard widget serves as a container of stepped process.\",\n        depends: [ \"stepper\", \"button\", \"form\" ],\n        features: [{\n            id: \"wizard-form-dropdowns\",\n            name: \"DropDowns\",\n            description: \"Support for DropDown editors in Wizard From\",\n            depends: [ \"autocomplete\", \"combobox\", \"multiselect\", \"dropdowntree\", \"multicolumncombobox\" ]\n        }, {\n            id: \"wizard-form-datepickers\",\n            name: \"DatePickers\",\n            description: \"Support for DatePicker editors in Wizard From\",\n            depends: [ \"dateinput\", \"datepicker\", \"datetimepicker\", \"timepicker\" ]\n        }, {\n            id: \"wizard-form-inputs\",\n            name: \"Inputs\",\n            description: \"Support for Input editors in Wizard From\",\n            depends: [ \"numerictextbox\", \"maskedtextbox\", \"switch\", \"rating\", \"slider\", \"colorpicker\" ]\n        }, {\n            id: \"wizard-form-editor\",\n            name: \"Editor\",\n            description: \"Support for Editor editor in Wizard From\",\n            depends: [ \"editor\" ]\n        }]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n\n            WIZARD = \".kendoWizard\",\n\n            CLICK = \"click\",\n            ACTIVATE = \"activate\",\n            SELECT = \"select\",\n            RESET = \"reset\",\n            SUBMIT = \"submit\",\n            PREVIOUS = \"previous\",\n            NEXT = \"next\",\n            DONE = \"done\",\n            ERROR = \"error\",\n            CONTENTLOAD = \"contentLoad\",\n            FORM_VALIDATE_FAILED = \"formValidateFailed\",\n\n            HIDDEN = \"k-hidden\",\n            STEPPER_LIST = \"k-step-list\",\n            STEPPER_STEP_LINK = \"k-step-link\",\n\n\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_CONTROLS = \"aria-controls\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_LABEL = \"aria-label\",\n\n            VERTICAL = \"vertical\",\n            HORIZONTAL = \"horizontal\",\n            BOTTOM = \"bottom\",\n            RIGHT = \"right\",\n            LEFT = \"left\",\n\n            DOT = \".\",\n            SPACE = \" \",\n            DASH = \"-\",\n            ID = \"id\",\n            TABINDEX = \"tabindex\",\n            ROLE = \"role\",\n            DATA_WIZARD_PREFIX = \"data-wizard-\";\n\n        var wizardClasses = {\n            wizard: \"k-wizard\",\n            horizontalWizard: \"k-wizard-horizontal\",\n            verticalWizard: \"k-wizard-vertical\",\n            rightWizard: \"k-wizard-right\",\n            leftWizard: \"k-wizard-left\",\n            wizardStepsContainer: \"k-wizard-steps\",\n            wizardStep: \"k-wizard-step\",\n            wizardContent: \"k-wizard-content\",\n            wizardButtons: \"k-wizard-buttons\",\n            wizardLeftButtons: \"k-wizard-buttons-left\",\n            wizardRightButtons: \"k-wizard-buttons-right\",\n            wizardPager: \"k-wizard-pager\"\n        };\n\n        var Step = kendo.Class.extend({\n            init: function(options) {\n                this.options = extend({}, this.options, options);\n\n                if (this.options.actionBar) {\n                    this._processButtons();\n                }\n\n                this._render();\n            },\n\n            options: {\n                name: \"WizardStep\",\n                index: 0,\n                content: \"\",\n                contentUrl: null,\n                contentId: null,\n                markupContainer: null,\n                form: null,\n                actionBar: true,\n                buttons: [],\n                pager: true,\n                selected: false,\n                enabled: true,\n                className: \"\",\n                totalSteps: 1,\n                wizardId: \"wizard\",\n                formTag: \"form\",\n                messages: {}\n            },\n\n            _defaultButtonsConfiguration: {\n                first: [RESET,NEXT],\n                middle: [RESET,PREVIOUS,NEXT],\n                last: [RESET,PREVIOUS,DONE]\n            },\n\n            _pagerTemplate: ({ step, currentStep, of, totalSteps }) =>\n            '<span class=\"k-wizard-pager\">' +\n                `${encode(step)} ` +\n                `${encode(currentStep)} ` +\n                `${encode(of)} ` +\n                `${encode(totalSteps)}` +\n            '</span>',\n\n            buttons: function() {\n                return this._buttons;\n            },\n\n            load: function() {\n                if (this.options.contentUrl) {\n                    this._ajaxRequest();\n                }\n            },\n\n            resetButtons: function() {\n                var buttonsContainer = this.element.find(DOT + wizardClasses.wizardButtons);\n\n                kendo.destroy(buttonsContainer);\n                buttonsContainer.remove();\n\n                this.options.buttons = [];\n                this._processButtons();\n                this._buttonsContainer();\n            },\n\n            _ajaxRequest: function(wizard, triggerActivate) {\n                var that = this,\n                    url = that.options.contentUrl,\n                    data = {},\n                    element = that.element;\n\n                var ajaxOptions = {\n                    type: \"GET\",\n                    cache: false,\n                    url: url,\n                    dataType: \"html\",\n                    data: data,\n\n                    error: function(xhr, status) {\n                        if (wizard) {\n                            wizard._triggerError(xhr, status, that);\n                        }\n                    },\n\n                    complete: function() {\n                        if (wizard && triggerActivate) {\n                            wizard._triggerActivate(that);\n                        }\n                    },\n\n                    success: function(content) {\n                        var contentElement = element.find(DOT + wizardClasses.wizardContent);\n\n                        try {\n                            kendo.destroy(contentElement);\n                            contentElement.html(content);\n\n                            if (wizard) {\n                                wizard._triggerContentLoad(that);\n                            }\n                        } catch (e) {\n                            this.error(this.xhr, \"error\");\n                        }\n                    }\n                };\n\n                if (typeof url === \"object\") {\n                    ajaxOptions = $.extend(true, {}, ajaxOptions, url);\n                }\n\n                $.ajax(ajaxOptions);\n            },\n\n            _ariaAttributes: function() {\n                var element = this.element,\n                    options = this.options,\n                    messages = options.messages,\n                    label = messages.step + \" \" + (options.index + 1) + \" \" + messages.of + \" \" + options.totalSteps;\n\n                element.attr(ROLE, \"tabpanel\")\n                    .attr(TABINDEX, 0)\n                    .attr(ID, options.wizardId + DASH + options.index)\n                    .attr(ARIA_LABEL, label);\n            },\n\n            _buttonFactory: function(buttonOptions) {\n                var button = $(\"<button type='button'><span></span></button>\").kendoButton({\n                        themeColor: buttonOptions.primary ? \"primary\" : \"base\"\n                    }).getKendoButton(),\n                    buttonElement = button.element;\n\n                buttonElement.attr(DATA_WIZARD_PREFIX + buttonOptions.name, \"\");\n                buttonElement.find(\"span\").text(buttonOptions.text);\n\n                if (buttonOptions.click) {\n                    button.bind(CLICK, buttonOptions.click);\n                }\n                if (buttonOptions.enabled === false) {\n                    button.enable(false);\n                }\n\n                if (buttonOptions.position === LEFT) {\n                    this._leftButtonsContainer.append(buttonElement);\n                } else {\n                    this._rightButtonsContainer.append(buttonElement);\n                }\n\n                if (buttonOptions.name === \"done\" && this.options.formTag !== \"form\") {\n                    button.element.attr(\"type\", SUBMIT);\n                }\n\n                this._buttons.push(button);\n            },\n\n            _buttonsContainer: function() {\n                var buttonsContainer = $(\"<div>\").addClass(wizardClasses.wizardButtons);\n\n                this._leftButtonsContainer = $(\"<span>\").addClass(wizardClasses.wizardLeftButtons);\n                this._rightButtonsContainer = $(\"<span>\").addClass(wizardClasses.wizardRightButtons);\n\n                buttonsContainer.append(this._leftButtonsContainer);\n                buttonsContainer.append(this._rightButtonsContainer);\n\n                this.element.append(buttonsContainer);\n\n                this._buttons = [];\n\n                this.options.buttons.map(this._buttonFactory.bind(this));\n\n                if (this.options.pager) {\n                    this._pager();\n                }\n            },\n\n            _content: function() {\n                var options = this.options,\n                    loadFromRemote = !!options.contentUrl,\n                    contentElement = $(\"<div>\").addClass(wizardClasses.wizardContent);\n\n                if (!loadFromRemote && options.contentId) {\n                    contentElement.html($(\"#\" + options.contentId).html());\n                } else if (!loadFromRemote && options.content) {\n                    contentElement.append(options.content);\n                }\n\n                if (options.markupContainer) {\n                    if (!loadFromRemote && !options.contentId && !options.content) {\n                        contentElement.append(options.markupContainer.html());\n                    }\n\n                    kendo.destroy(options.markupContainer);\n                    options.markupContainer.remove();\n                }\n\n                this.element.prepend(contentElement);\n            },\n\n            _form: function() {\n                var formTag = \"<\" + this.options.formTag + \">\",\n                    formElement = $(formTag).hide(),\n                    contentElement = $(\"<div>\").addClass(wizardClasses.wizardContent),\n                    formOptions = this.options.form;\n\n                $(\"body\").append(formElement);\n                this.element.prepend(contentElement);\n\n                formOptions.buttonsTemplate = formOptions.buttonsTemplate || (() =>\"\");\n                this.form = formElement.kendoForm(formOptions).getKendoForm();\n\n                contentElement.append(formElement.show());\n            },\n\n            _iterateButton: function(button) {\n                var messages = this.options.messages;\n\n                if (typeof button === \"string\") {\n                    button = {\n                        name: button\n                    };\n                }\n                if (!button.text) {\n                    button.text = messages[button.name] || button.name.charAt(0).toUpperCase() + button.name.slice(1);\n                }\n                if (button.primary !== false && (button.name === DONE || button.name === NEXT)) {\n                    button.primary = true;\n                }\n                if (!button.position && button.name === RESET) {\n                    button.position = LEFT;\n                } else if (!button.position) {\n                    button.position = RIGHT;\n                }\n\n                return button;\n            },\n\n            _pager: function() {\n                var options = this.options,\n                    messages = options.messages,\n                    pagerData = {\n                        step: messages.step,\n                        currentStep: options.index + 1,\n                        of: messages.of,\n                        totalSteps: options.totalSteps\n                    },\n                    pager = kendo.template(this._pagerTemplate)(pagerData);\n\n                this._leftButtonsContainer.append(pager);\n            },\n\n            _processButtons: function() {\n                var options = this.options,\n                    buttonsOptions = options.buttons,\n                    defaultButtons = this._defaultButtonsConfiguration;\n\n                if (!buttonsOptions || !buttonsOptions.length || buttonsOptions.length === 0) {\n                    this.options.defaultButtons = true;\n\n                    if (options.index === 0) {\n                        buttonsOptions = defaultButtons.first;\n                    } else if (options.index + 1 === options.totalSteps) {\n                        buttonsOptions = defaultButtons.last;\n                    } else {\n                        buttonsOptions = defaultButtons.middle;\n                    }\n                }\n\n                this.options.buttons = buttonsOptions.map(this._iterateButton.bind(this));\n            },\n\n            _render: function() {\n                this.element = $(\"<div>\").addClass(wizardClasses.wizardStep);\n\n                if (this.options.className) {\n                    this.element.addClass(this.options.className);\n                }\n\n                this._ariaAttributes();\n\n                if (!this.options.selected) {\n                    this.element.addClass(HIDDEN);\n                    this.element.attr(ARIA_HIDDEN, true);\n                }\n\n                if (this.options.actionBar) {\n                    this._buttonsContainer();\n                }\n\n                if (this.options.form) {\n                    this._form();\n                } else {\n                    this._content();\n                }\n            }\n        });\n\n        var Wizard = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                options = options || {};\n\n                Widget.fn.init.call(that, element, options);\n\n                that._wrapper();\n                that._createSteps();\n                that._stepper();\n                that._attachEvents();\n            },\n\n            options: {\n                name: \"Wizard\",\n                contentPosition: BOTTOM,\n                actionBar: true,\n                pager: true,\n                loadOnDemand: false,\n                reloadOnSelect: false,\n                validateForms: true,\n                stepper: {},\n                steps: [],\n                messages: {\n                    reset: \"Reset\",\n                    previous: \"Previous\",\n                    next: \"Next\",\n                    done: \"Done\",\n                    step: \"Step\",\n                    of: \"of\"\n                }\n            },\n\n            events: [\n                ACTIVATE,\n                SELECT,\n                RESET,\n                DONE,\n                ERROR,\n                CONTENTLOAD,\n                FORM_VALIDATE_FAILED\n            ],\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that.stepper);\n                Widget.fn.destroy.call(that);\n\n                that.wrapper.off(WIZARD);\n            },\n\n            activeStep: function() {\n                return this.currentStep;\n            },\n\n            enableStep: function(stepIndex, value) {\n                var that = this,\n                    targetStep;\n\n                if (stepIndex === undefined$1 || stepIndex === null || isNaN(stepIndex) || stepIndex >= that._steps.length || stepIndex < 0) {\n                    return;\n                }\n\n                stepIndex = Number(stepIndex);\n                targetStep = that._steps[stepIndex];\n\n                if (targetStep.options.enabled === value) {\n                    return;\n                } else {\n                    targetStep.options.enabled = value;\n                    that.stepper.steps()[stepIndex].enable(value);\n                }\n            },\n\n            insertAt: function(index, stepOptions) {\n                var steps = this._steps,\n                    numberOfSteps = steps.length,\n                    messages = this.options.messages,\n                    step, stepperStepOptions, alteredStepIndex, alteredStep,\n                    iterateStep = function(step, i) {\n                        var label;\n\n                        if (i >= index) {\n                            step.options.index += 1;\n                        }\n                        step.options.totalSteps += 1;\n                        step.element.find(DOT + wizardClasses.wizardPager).remove();\n                        step._pager();\n\n                        label = messages.step + \" \" + (step.options.index + 1) + \" \" + messages.of + \" \" + (numberOfSteps + 1);\n                        step.element.attr(ARIA_LABEL, label);\n                    };\n\n                if (index === null || index === undefined$1 || isNaN(index) || index < 0 || index > numberOfSteps) {\n                    return;\n                }\n                if (!stepOptions) {\n                    return;\n                }\n\n                stepperStepOptions = this._mapStepForStepper(stepOptions);\n                this.stepper.insertAt(index, stepperStepOptions);\n\n                stepOptions.totalSteps = numberOfSteps + 1;\n                stepOptions.messages = messages;\n                stepOptions.index = index;\n                stepOptions.formTag = this.wrapper.is(\"form\") ? \"div\" : \"form\";\n\n                if (this.options.pager === false && stepOptions.pager !== true) {\n                    stepOptions.pager = false;\n                }\n\n                step = new Step(stepOptions);\n                steps.forEach(iterateStep);\n                steps.splice(index, 0, step);\n\n                if (index === 0 || index === numberOfSteps) {\n                    alteredStepIndex = index === 0 ? 1 : numberOfSteps - 1;\n                    alteredStep = steps[alteredStepIndex];\n\n                    if (alteredStep.options.defaultButtons) {\n                        alteredStep.resetButtons();\n                    }\n                }\n\n                this._insertStepElementAtIndex(index, step.element);\n                this._stepperAriaAttributes();\n                this._steps.forEach(this._iterateAriaStep);\n            },\n\n            next: function() {\n                var that = this,\n                    stepsLength = that._steps.length,\n                    currentStepIndex = that.currentStep.options.index;\n\n                if (currentStepIndex + 1 === stepsLength) {\n                    return;\n                } else if (!that.steps()[currentStepIndex + 1].options.enabled) {\n                    return;\n                } else {\n                    that._select(currentStepIndex + 1);\n                    that._selectStepper(currentStepIndex + 1);\n                }\n\n            },\n\n            previous: function() {\n                var that = this,\n                    currentStepIndex = that.currentStep.options.index;\n\n                if (currentStepIndex === 0) {\n                    return;\n                } else if (!that.steps()[currentStepIndex - 1].options.enabled) {\n                    return;\n                } else {\n                    that._select(currentStepIndex - 1);\n                    that._selectStepper(currentStepIndex - 1);\n                }\n            },\n\n            removeAt: function(index) {\n                var steps = this._steps,\n                    numberOfSteps = steps.length,\n                    stepContentElement = $(this.element.find(DOT + wizardClasses.wizardStep).get(index)),\n                    removedStep, newSelectedStepIndex, alteredStepIndex, alteredStep, i, step, label,\n                    messages = this.options.messages;\n\n                if (index === null || index === undefined$1 || isNaN(index) || index < 0 || index > numberOfSteps || numberOfSteps === 1) {\n                    return;\n                }\n\n                this.stepper.removeAt(index);\n                removedStep = steps.splice(index, 1)[0];\n\n                if (!stepContentElement.hasClass(HIDDEN)) {\n                    newSelectedStepIndex = index === 0 ? 0 : index - 1;\n                    this.select(newSelectedStepIndex);\n                }\n\n                kendo.destroy(stepContentElement);\n                stepContentElement.remove();\n\n                for (i = 0; i < numberOfSteps - 1; i += 1) {\n                    step = steps[i];\n                    step.options.index = i;\n                    step.options.totalSteps = numberOfSteps - 1;\n                    step.element.find(DOT + wizardClasses.wizardPager).remove();\n                    step._pager();\n                    label = messages.step + \" \" + (i + 1) + \" \" + messages.of + \" \" + (numberOfSteps - 1);\n                    step.element.attr(ARIA_LABEL, label);\n                }\n\n                if (index === 0 || index === numberOfSteps - 1) {\n                    alteredStepIndex = index === 0 ? 0 : numberOfSteps - 2;\n                    alteredStep = steps[alteredStepIndex];\n\n                    if (alteredStep.options.defaultButtons) {\n                        alteredStep.resetButtons();\n                    }\n                }\n\n                this._stepperAriaAttributes();\n                this._steps.forEach(this._iterateAriaStep);\n            },\n\n            select: function(stepIndex) {\n                var that = this,\n                    targetStep;\n\n                if (stepIndex === undefined$1 || stepIndex === null || isNaN(stepIndex) || stepIndex >= that._steps.length || stepIndex < 0) {\n                    return;\n                }\n\n                stepIndex = Number(stepIndex);\n                targetStep = that._steps[stepIndex];\n\n                if (!targetStep.options.enabled) {\n                    return;\n                }\n\n                that._select(stepIndex);\n                that._selectStepper(stepIndex);\n            },\n\n            steps: function() {\n                return this._steps;\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    clickBeforeSubmit = function() {\n                        that._doneClicked = true;\n                    };\n\n                that.stepper.bind(SELECT, that._stepperSelectHandler.bind(that));\n\n                that.wrapper\n                    .on(CLICK + WIZARD, \"[\" + DATA_WIZARD_PREFIX + RESET + \"]\", that._resetClickHandler.bind(that))\n                    .on(CLICK + WIZARD, \"[\" + DATA_WIZARD_PREFIX + PREVIOUS + \"]\", that._previousClickHandler.bind(that))\n                    .on(CLICK + WIZARD, \"[\" + DATA_WIZARD_PREFIX + NEXT + \"]\", that._nextClickHandler.bind(that));\n\n                if (that.wrapper.is(\"form\")) {\n                    that.wrapper.on(CLICK + WIZARD, \"[\" + DATA_WIZARD_PREFIX + DONE + \"]\", clickBeforeSubmit);\n                    that.wrapper.on(SUBMIT + WIZARD, that._doneHandler.bind(that));\n                } else {\n                    that.wrapper.on(CLICK + WIZARD, \"[\" + DATA_WIZARD_PREFIX + DONE + \"]\", clickBeforeSubmit);\n                    that.wrapper.on(CLICK + WIZARD, \"[\" + DATA_WIZARD_PREFIX + DONE + \"]\", that._doneHandler.bind(that));\n                }\n            },\n\n            _changeStep: function(step) {\n                var steps = this.wrapper.find(DOT + wizardClasses.wizardStep);\n\n                this.currentStep = step;\n\n                steps.addClass(HIDDEN);\n                steps.attr(ARIA_HIDDEN, true);\n\n                step.element.removeClass(HIDDEN);\n                step.element.removeAttr(ARIA_HIDDEN);\n            },\n\n            _createStep: function(options, index, stepsFromMarkup, total) {\n                var wrapper = this.wrapper,\n                    stepsFromMarkupTitles = this.wrapper.children(\"ol, ul\").children(\"li\");\n\n                if (typeof options === \"string\") {\n                    options = {\n                        title: options\n                    };\n                }\n\n                options.totalSteps = total;\n                options.messages = this.options.messages;\n                options.index = index;\n                options.formTag = this.wrapper.is(\"form\") ? \"div\" : \"form\";\n\n                if (index === 0) {\n                    options.selected = true;\n                }\n                if (this.options.actionBar === false) {\n                    options.actionBar = false;\n                }\n                if (stepsFromMarkup.length > 0 && stepsFromMarkup[index]) {\n                    options.markupContainer = $(stepsFromMarkup[index]);\n\n                    if (!options.title) {\n                        options.title = stepsFromMarkupTitles[index] ? stepsFromMarkupTitles[index].textContent : (index + 1).toString();\n\n                        if (!this.options.steps) {\n                            this.options.steps = [];\n                        }\n\n                    }\n                }\n                if (wrapper.attr(ID)) {\n                    options.wizardId = wrapper.attr(ID);\n                }\n                if (this.options.pager === false && options.pager !== true) {\n                    options.pager = false;\n                }\n\n                this.options.steps[index] = extend(true, {}, options);\n\n                return new Step(options);\n            },\n\n            _createSteps: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    stepsOptions = that.options.steps,\n                    stepsFromMarkup = wrapper.children(\"div\"),\n                    stepsContainer, i, stepOptions, step;\n\n                stepsContainer = $(\"<div>\").addClass(wizardClasses.wizardStepsContainer);\n\n                that._steps = [];\n\n                if (!stepsOptions || stepsOptions.length === 0) {\n                    stepsOptions = [];\n                    for (i = 0; i < stepsFromMarkup.length; i += 1) {\n                        stepsOptions.push({});\n                    }\n                }\n\n                for (i = 0; i < stepsOptions.length; i += 1) {\n                    stepOptions = stepsOptions[i];\n\n                    step = that._createStep(stepOptions, i, stepsFromMarkup, stepsOptions.length);\n\n                    if (stepOptions.contentUrl && (i === 0 || !that.options.loadOnDemand )) {\n                        kendo.ui.progress(that.wrapper, true);\n                        step._ajaxRequest(that);\n                    }\n\n                    stepsContainer.append(step.element);\n\n                    that._steps.push(step);\n                }\n\n                wrapper.children(\"ol, ul\").remove();\n\n                wrapper.empty();\n                wrapper.append(stepsContainer);\n                that._refreshEditorWidgets();\n\n                that.currentStep = that._steps[0];\n            },\n\n            _doneHandler: function(e) {\n                var steps = this._steps,\n                    currentStep = this.currentStep,\n                    forms = [],\n                    form, i;\n\n                if (!this._doneClicked) {\n                    return;\n                }\n\n                this._doneClicked = false;\n\n                if (!!this.options.validateForms && !!currentStep.form && !currentStep.form.validator.validate()) {\n                    e.preventDefault();\n                    this.trigger(FORM_VALIDATE_FAILED, { sender: this, step: currentStep, form: currentStep.form });\n                    return;\n                }\n\n                for (i = 0; i < steps.length; i += 1) {\n                    form = steps[i].form;\n                    if (form) {\n                        forms.push(form);\n                    }\n                }\n\n                this.trigger(DONE, { sender: this, forms: forms, originalEvent: e, button: $(e.target).getKendoButton() });\n            },\n\n            _insertStepElementAtIndex: function(index, stepElement) {\n                var stepsContainer = this.wrapper.find(DOT + wizardClasses.wizardStepsContainer);\n\n                if (index === 0) {\n                    stepsContainer.prepend(stepElement);\n                } else {\n                    stepsContainer.find(DOT + wizardClasses.wizardStep + \":nth-child(\" + index + \")\").after(stepElement);\n                }\n            },\n\n            _isEmpty: function(element) {\n                return !kendo.trim(element.html());\n            },\n\n            _iterateAriaStep: function(step) {\n                step._ariaAttributes();\n            },\n\n            _mapStepForStepper: function(step) {\n                var stepperStep = extend(true, {}, step );\n\n                stepperStep.label = stepperStep.title;\n\n                delete stepperStep.buttons;\n                delete stepperStep.pager;\n                delete stepperStep.content;\n                delete stepperStep.contentUrl;\n                delete stepperStep.contentId;\n                delete stepperStep.formTag;\n                delete stepperStep.wizardId;\n                delete stepperStep.messages;\n\n                return stepperStep;\n            },\n\n            _select: function(index) {\n                var targetStep = this._steps[index],\n                    options = this.options;\n\n                if (targetStep.options.contentUrl &&\n                    (options.reloadOnSelect ||\n                        (options.loadOnDemand && this._isEmpty(targetStep.element.find(DOT + wizardClasses.wizardContent))))) {\n                    this.ajaxLoad = true;\n                    kendo.ui.progress(this.wrapper, true);\n                    targetStep._ajaxRequest(this, true);\n                } else {\n                    this._changeStep(targetStep);\n                }\n            },\n\n            _nextClickHandler: function(e) {\n                var that = this,\n                    steps = that._steps,\n                    numberOfSteps = that._steps.length,\n                    currentStep = that.currentStep,\n                    currentStepIndex = currentStep.options.index,\n                    button = $(e.target).getKendoButton(),\n                    targetStep = steps[currentStepIndex + 1];\n\n                if (numberOfSteps === currentStepIndex + 1 || !targetStep.options.enabled) {\n                    return;\n                }\n\n                if (!!that.options.validateForms && !!currentStep.form && !currentStep.form.validator.validate()) {\n                    that.trigger(FORM_VALIDATE_FAILED, { sender: that, step: currentStep, form: currentStep.form });\n                    return;\n                }\n\n                if (!that.trigger(SELECT, {\n                    sender: that,\n                    originalEvent: e.originalEvent,\n                    step: targetStep,\n                    button: button\n                })) {\n                    that._select(currentStepIndex + 1);\n                    that._selectStepper(currentStepIndex + 1);\n\n                    if (!that.ajaxLoad) {\n                        that.trigger(ACTIVATE, { sender: that, step: targetStep });\n                    }\n\n                    that.ajaxLoad = false;\n                }\n            },\n\n            _previousClickHandler: function(e) {\n                var that = this,\n                    validateForms = that.options.validateForms,\n                    steps = that._steps,\n                    currentStep = that.currentStep,\n                    currentStepIndex = currentStep.options.index,\n                    button = $(e.target).getKendoButton(),\n                    targetStep = steps[currentStepIndex - 1];\n\n                if (currentStepIndex === 0 || !targetStep.options.enabled) {\n                    return;\n                }\n\n                if (!!validateForms && validateForms.validateOnPrevious !== false && !!currentStep.form && !currentStep.form.validator.validate()) {\n                    that.trigger(FORM_VALIDATE_FAILED, { sender: that, step: currentStep, form: currentStep.form });\n                    return;\n                }\n\n                if (!that.trigger(SELECT, {\n                    sender: that,\n                    originalEvent: e.originalEvent,\n                    step: targetStep,\n                    button: button\n                })) {\n                    that._select(currentStepIndex - 1);\n                    that._selectStepper(currentStepIndex - 1);\n\n                    if (!that.ajaxLoad) {\n                        that.trigger(ACTIVATE, { sender: that, step: targetStep });\n                    }\n\n                    that.ajaxLoad = false;\n                }\n            },\n\n            _refreshEditorWidgets: function() {\n                var editorElements = this.wrapper.find(\"[data-role='editor']\"),\n                    i, element;\n\n                for (i = 0; i < editorElements.length; i += 1) {\n                    element = $(editorElements[i]);\n                    element.getKendoEditor().refresh();\n                }\n            },\n\n            _resetClickHandler: function(e) {\n                this.trigger(RESET, { sender: this, originalEvent: e, button: $(e.target).getKendoButton() });\n            },\n\n            _selectStepper: function(index) {\n                var stepper = this.stepper,\n                    targetStep = stepper.steps()[index],\n                    targetLink = targetStep.element.find(DOT + STEPPER_STEP_LINK);\n\n                stepper.select(index);\n\n                stepper.wrapper.find(DOT + STEPPER_STEP_LINK).attr(ARIA_SELECTED, false);\n                targetLink.attr(ARIA_SELECTED, true).trigger(\"focus\");\n            },\n\n            _stepper: function() {\n                var wrapper = this.wrapper,\n                    stepperElement = $(\"<div>\").prependTo(wrapper),\n                    options = this.options,\n                    stepperOptions = options.stepper,\n                    stepsOptions = options.steps.map(this._mapStepForStepper);\n\n                stepperOptions.steps = stepsOptions;\n                stepperOptions.orientation = options.contentPosition === BOTTOM ? HORIZONTAL : VERTICAL;\n                stepperOptions.selectOnFocus = true;\n                stepperOptions.kendoKeydown = function(e) {\n                    if (e.keyCode === kendo.keys.TAB) {\n                        e.preventKendoKeydown = true;\n                    }\n                };\n\n                this.stepper = stepperElement.kendoStepper(stepperOptions).getKendoStepper();\n\n                this._stepperAriaAttributes();\n            },\n\n            _stepperAriaAttributes: function() {\n                var stepper = this.stepper,\n                    wrapperId = this.wrapper.attr(ID) || \"wizard\",\n                    stepperSteps = stepper.steps(),\n                    selected, step, i;\n\n                if (!stepperSteps) {\n                    return;\n                }\n\n                stepper.element.find(DOT + STEPPER_LIST).attr(ROLE, \"tablist\");\n\n                for (i = 0; i < stepperSteps.length; i += 1) {\n                    selected = false;\n\n                    if (i === 0) {\n                        selected = true;\n                    }\n\n                    step = stepperSteps[i];\n                    step.element.attr(ROLE, \"none\")\n                        .find(\"a\").attr(ROLE, \"tab\")\n                        .attr(ARIA_CONTROLS, wrapperId + DASH + i)\n                        .attr(ARIA_SELECTED, selected);\n                }\n            },\n\n            _stepperSelectHandler: function(e) {\n                var that = this,\n                    validateForms = that.options.validateForms,\n                    stepper = e.sender,\n                    stepperStep = e.step,\n                    currentStepIndex = that.currentStep.options.index,\n                    stepIndex = stepperStep.getIndex(),\n                    wizardSteps = that._steps,\n                    step = wizardSteps[stepIndex],\n                    currentStep = that.currentStep;\n\n                if (stepIndex > currentStepIndex && !!validateForms && !!currentStep.form && !currentStep.form.validator.validate()) {\n                    e.preventDefault();\n                    that.trigger(FORM_VALIDATE_FAILED, { sender: that, step: currentStep, form: currentStep.form });\n                    return;\n                }\n\n                if (stepIndex < currentStepIndex && !!validateForms && validateForms.validateOnPrevious !== false && !!currentStep.form && !currentStep.form.validator.validate()) {\n                    e.preventDefault();\n                    that.trigger(FORM_VALIDATE_FAILED, { sender: that, step: currentStep, form: currentStep.form });\n                    return;\n                }\n\n                if (!that.trigger(SELECT, { sender: that, originalEvent: e.originalEvent, step: step, stepper: stepper })) {\n                    that._select(stepIndex);\n\n                    stepper.wrapper.find(DOT + STEPPER_STEP_LINK).attr(ARIA_SELECTED, false);\n                    stepperStep.element.find(DOT + STEPPER_STEP_LINK).attr(ARIA_SELECTED, true);\n\n                    if (!that.ajaxLoad) {\n                        that.trigger(ACTIVATE, { sender: that, step: step });\n                    }\n\n                    that.ajaxLoad = false;\n                } else {\n                    e.preventDefault();\n                }\n            },\n\n            _triggerActivate: function(step) {\n                this._changeStep(step);\n                this.trigger(ACTIVATE, { sender: this, step: step });\n            },\n\n            _triggerError: function(xhr, status, step) {\n                kendo.ui.progress(this.wrapper, false);\n                this.trigger(ERROR, { sender: this, xhr: xhr, status: status, step: step });\n            },\n\n            _triggerContentLoad: function(step) {\n                kendo.ui.progress(this.wrapper, false);\n                this.trigger(CONTENTLOAD, { sender: this, step: step });\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    contentPosition = that.options.contentPosition;\n\n                that.wrapper = element;\n                that.wrapper.addClass(wizardClasses.wizard);\n\n                if (contentPosition === RIGHT) {\n                    that.wrapper.addClass(wizardClasses.verticalWizard + SPACE + wizardClasses.rightWizard);\n                } else if (contentPosition === LEFT) {\n                    that.wrapper.addClass(wizardClasses.verticalWizard + SPACE + wizardClasses.leftWizard);\n                } else {\n                    that.wrapper.addClass(wizardClasses.horizontalWizard);\n                }\n            }\n        });\n\n        kendo.wizard = {\n            Step: Step\n        };\n\n        kendo.ui.plugin(Wizard);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}