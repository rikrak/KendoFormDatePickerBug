{"version":3,"sources":["raw-js/kendo.spreadsheet.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Spreadsheet","this","clone","hash","target","Object","assign","keys","reduce","copy","key","$","jQuery","ObservableObject","data","MESSAGES","spreadsheet","messages","dialogs","apply","save","cancel","remove","retry","revert","okText","formatCellsDialog","title","categories","number","currency","date","fontFamilyDialog","fontSizeDialog","bordersDialog","alignmentDialog","buttons","justifyLeft","justifyCenter","justifyRight","justifyFull","alignTop","alignMiddle","alignBottom","mergeDialog","mergeCells","mergeHorizontally","mergeVertically","unmerge","freezeDialog","freezePanes","freezeRows","freezeColumns","unfreeze","confirmationDialog","text","validationDialog","hintMessage","hintTitle","criteria","any","custom","list","comparers","greaterThan","lessThan","between","notBetween","equalTo","notEqualTo","greaterThanOrEqualTo","lessThanOrEqualTo","comparerMessages","labels","comparer","min","max","value","start","end","onInvalidData","rejectInput","showWarning","showHint","ignoreBlank","showListButton","showCalendarButton","placeholders","typeTitle","typeMessage","exportAsDialog","defaultFileName","xlsx","description","pdf","area","workbook","sheet","selection","paper","a2","a3","a4","a5","b3","b4","b5","folio","legal","letter","tabloid","executive","margin","normal","narrow","wide","scale","fit","fileName","saveAsType","exportArea","paperSize","margins","orientation","print","guidelines","center","horizontally","vertically","modifyMergedDialog","errorMessage","rangeDisabledDialog","intersectsArrayDialog","incompatibleRangesDialog","noFillDirectionDialog","duplicateSheetNameDialog","overflowDialog","useKeyboardDialog","forCopy","forCut","forPaste","unsupportedSelectionDialog","linkDialog","url","removeLink","sheetRenameDialog","rename","insertCommentDialog","comment","removeComment","insertImageDialog","info","typeError","registry","register","name","dialogClass","registered","create","options","SpreadsheetDialog","Observable","extend","init","fn","call","translate","bind","events","autoFocus","dialog","_dialog","scrollable","resizable","modal","visible","width","open","close","_onDialogClose","activate","_onDialogActivate","deactivate","_onDialogDeactivate","addClass","className","append","template","ns","errors","kendoWindow","trigger","action","_action","destroy","element","find","formattedValue","format","formatting","FormatCellsViewModel","useCategory","category","type","formatCurrency","set","currencies","length","allFormats","useFirstFormat","formats","undefined","_currency","decimals","iso","map","convert","categoryFilter","preview","get","uniqueBy","field","array","result","values","i","inArray","push","token","n","pattern","replace","Array","join","abbr","JSON","stringify","symbol","test","toLowerCase","FormatCellsDialog","defaultOptions","_generateFormats","$kendoOutput","htmlEncode","currenciesFrom","cultures","numberFormats","dateFormats","calendarPatterns","current","calendars","standard","patterns","range","slice","viewModel","Date","formatItemTemplate","currencyFilter","setOptions","filter","roleSelector","parent","attr","command","property","culture","numberFormat","MessageDialog","messageId","getter","ConfirmationDialog","confirm","isConfirmed","_confirmed","ValidationErrorDialog","_retry","FontFamilyDialog","_list","ul","fonts","defaultFont","default","ui","StaticList","dataSource","DataSource","change","fetch","e","sender","FontSizeDialog","sizes","defaultSize","parseInt","BordersDialog","_borderPalette","observable","state","borderPalette","color","border","style","size","first","BorderPalette","_state","ColorChooser","_value","ColorPickerDialog","_colorPalette","colorPalette","kendoColorPalette","palette","CustomColorDialog","animation","one","_colorPicker","colorPicker","kendoFlatColorPicker","AlignmentDialog","iconClass","icon","dataItem","MergeDialog","FreezeDialog","ValidationViewModel","ValidationCellsViewModel","reset","criterion","setHintMessageTemplate","_mute","shouldBuild","buildMessages","hintTitleTemplate","hintMessageTemplate","from","to","setComparers","defaultHintTitle","all","defaultComparers","text_comparers","idx","shift","defaultHintMessage","isAny","isNumber","showToForNumber","showTo","showToForDate","isDate","isText","isList","isCustom","showRemove","update","validation","fromValidationObject","dataType","comparerType","allowNulls","showButton","messageTemplate","titleTemplate","useCustomMessages","toValidationObject","ValidationDialog","errorTemplate","message","validatable","Validator","validateOnBlur","validate","ExportAsDialog","extension","fileFormats","excel","excelExport","proxyURL","pdfExport","forceProxy","author","autoPrint","subject","keywords","creator","fitWidth","areas","paperSizes","landscape","hCenter","vCenter","TEXT","bottom","left","right","top","basicErrorDialog","id","msg","ImportErrorDialog","err","context","error","UseKeyboardDialog","HyperlinkDialog","arguments","model","link","on","ev","keyCode","val","stopPropagation","preventDefault","SheetRenameDialog","args","sheetName","_oldSheetName","_newSheetName","InsertCommentDialog","InsertImageDialog","okEnabled","imageUrl","hasImage","isHovered","_url","_image","window","URL","revokeObjectURL","blob","_width","height","_height","stopEvent","drop","selectFile","originalEvent","dataTransfer","files","dragEnter","dragLeave","image","createObjectURL","img","Image","src","onload","Localizable","path","def","split","thing","trans","isArray","ret","prototype","BORDER_TYPES","BORDER_TYPES_ICONS","allBorders","insideBorders","insideHorizontalBorders","insideVerticalBorders","outsideBorders","leftBorder","topBorder","rightBorder","bottomBorder","noBorders","BORDER_PALETTE_MESSAGES","colorPickerPalette","Widget","_borderTypePalette","_borderColorPalette","colorChooser","that","class","appendTo","kendoToggleButton","toHyphens","toggle","_toggle","FlatColorPicker","view","input","_change","wrapper","_apply","_cancel","previous","siblings","checked","getDefaultToolElement","firstIconName","ToolBar","toolbar","addColumnLeft","addColumnRight","addRowAbove","addRowBelow","alignment","alignmentButtons","backgroundColor","increaseFontSize","decreaseFontSize","bold","borders","cut","deleteColumn","deleteRow","fontFamily","fontSize","formatTypes","automatic","percent","financial","time","dateTime","duration","moreFormats","formatDecreaseDecimal","formatIncreaseDecimal","freeze","freezeButtons","insertComment","insertImage","italic","merge","mergeButtons","paste","redo","undo","exportAs","toggleGridlines","sort","sortButtons","sortRangeAsc","sortRangeDesc","textColor","textWrap","underline","hyperlink","defaultFormats","COLOR_PICKER_MESSAGES","customColor","toolDefaults","separator","extensions","overflow","togglable","component","overflowComponent","componentOptions","fillMode","items","attributes","commandOn","toolIcon","clearButton","sample","itemTemplate","enable","popupComponent","formatCells","selected","SpreadsheetToolBar","forEach","t","showText","tools","toolbarName","parentMessages","defaultTools","handleClick","_click","click","commandType","file","home","insert","refresh","activeCell","_tools","tool","isFunction","showGridLines","_updateTool","resize","toArray","_getItem","vertical","menu","enabled","label","toolbarEl","widget","widgetInstance","menuItem","_ref","verticalAlign","textAlign","removeClass","is","trim","cssProperties","propertyDictionary","Menu","CACHE_CHAR_WIDTH","charWidthFunction","func","span","div","document","createElement","position","whiteSpace","appendChild","createTextNode","String","fromCharCode","body","widths","firstChild","nextSibling","offsetWidth","removeChild","ch","code","charCodeAt","drawTabularData","progress","Deferred","promise","guideColor","columns","headerBackground","headerColor","oddBackground","evenBackground","rowHeight","maxEmpty","useGridFormat","drawing","defineFont","drawDOM","getFontFaces","charWidth","textWidth","charAt","mkCell","borderLeft","borderTop","borderRight","borderBottom","reject","col","columnTitles","columnWidths","rows","row","rowIndex","cells","colIndex","Math","background","unshift","Sheet","fromJSON","w","index","draw","headerRows","resolve","registerEditor","calendar","popup","kendoCalendar","kendoPopup","getKendoCalendar","getKendoPopup","callback","dateToNumber","anchor","querySelector","origin","alignLeft","numberToDate","Calendar","fromValidation","toValidation","formula","calc","runtime","Formula","_rowAndColPresent","disableDates","validationComparers","edit","kendoStaticList","selectable","autoBind","getKendoStaticList","item","add","el","Matrix","each","setDataSource","read","outerWidth","_outerWidth","DOT","EMPTYCHAR","SheetsBar","classNames","sheetsBarWrapper","_openDialog","openDialog","_addButton","_menuButton","_tree","dom","Tree","render","_createSheetsWrapper","_initSheetDropDownButtons","_toggleScrollEvents","_createSortable","_sortable","_onSheetReorderStart","_onSheetReorderEnd","_onSheetContextMenu","_onSheetSelect","sheetsBarKItem","_createEditor","distance","_editor","_renderSheets","_sheets","_selectedIndex","sheetsBarEditor","_onEditorKeydown","_onEditorBlur","_destroyEditor","canceled","newSheetName","off","_onSheetRename","renderSheets","sheets","selectedIndex","isInEditMode","_isRtl","support","isRtl","_renderHtml","_scrollableAllowed","_sheetsWrapper","sheetsBarScrollable","sheetsBarSheetsWrapper","_toggleScrollButtons","_sheetsGroup","scrollLeft","prev","sheetsBarPrev","next","sheetsBarNext","toggleClass","scrollWidth","scrollPrevButton","scrollNextButton","sheetsWrapper","event","_nowScrollingSheets","_scrollSheetsByDelta","renderScrollButtons","sheetElements","isSelectedSheet","role","elementContent","sheetsBarKActive","sheetsBarKTextbox","maxlength","sheetsBarKLink","sheetsBarKLinkText","contextMenuButton","html","renderButton","sheetsBarMoreIcon","ind","btnEl","allSheets","visibleSheets","isSingleVisibleSheet","shouldAllowMoveRight","shouldAllowMoveLeft","kendoDropDownButton","itemsWrapper","childrenElements","sheetsBarKReset","baseButtonClass","sheetsBarKButton","sheetsBarKButtonBare","ariaHidden","tabIndex","sheetsBarArrowWIcon","sheetsBarArrowEIcon","children","sheetsBarItems","Sortable","container","axis","ignore","draggable","hint","wrap","sheetsBarHintWrapper","sheetsBarKResetItems","closest","which","oldIndex","newIndex","_onSheetRemove","_onSheetDuplicate","_renamePrompt","_hideSheet","_moveSheet","renameSheetIndex","findIndex","sh","closeCallback","dlg","sheetIndex","direction","newSheetIndex","removedSheetName","confirmation","selectedSheetText","_scrollSheetsToItem","isAddButton","_onAddSelect","_onMenuSelect","addButton","sheetsBarAdd","kendoButton","sheetsBarPlusIcon","menuButton","sheetsBarSheetsMenu","sheetsBarMenuIcon","cssClass","isNaN","itemPosition","sheetsGroup","currentScrollOffset","itemWidth","itemOffset","sheetsGroupWidth","finish","animate","delta","scrLeft","sheetsBarRemove","sheetsBarKIcon","sheetsBarKFontIcon","sheetsBarKButtonDefaults","sheetsBarXIcon","sheetsBarKSprite","details","button","detailsSummary","detailsContent","iconCollapseName","iconExpandName","iconSearchName","textbox","filterByCondition","filterByValue","valuesTreeViewWrapper","actionButtons","filterMenu","sortAscending","sortDescending","search","addToCurrent","clear","blanks","operatorNone","and","or","operators","string","contains","doesnotcontain","startswith","endswith","matches","doesnotmatch","eq","neq","lt","gt","gte","lte","Details","FilterMenu","_summary","iconName","expanded","_icon","prependTo","_container","hide","show","fx","expand","stop","binders","spreadsheetFilterValue","Binder","bindings","templates","guid","dir","query","hasVisibleChildren","HierarchicalDataSource","toString","toLocaleLowerCase","itemVisible","indexOf","anyVisibleChildren","filterSpread","hidden","operator","uncheckAll","hasChildren","FilterMenuViewModel","valuesChange","valuesDataSource","toJSON","appendToSearch","valueFilter","concat","lastIndexOf","valueSelect","node","hasActiveSearch","filterValues","logic","operatorChange","isNone","isString","flattenOperators","hasOwnProperty","unique","FilterMenuController","valuesTree","column","columnRange","forEachCell","cell","isHiddenRow","distinctValues","a","b","filterType","filterForColumn","topValue","filters","allFilters","columnFilters","active","checkboxesConfig","checkChildren","_filterInit","_popup","_sort","_filterByCondition","_filterByValue","_actionButtons","valuesTreeView","openFor","hasClass","pageX","pageY","_active","customFilter","operatingRange","activeFilter","copyAnchorStyles","kendoMenu","select","_appendTemplate","compiledTemplate","_detailToggle","not","isExpanded","accentFoldingFiltering","activeContainer","defaultSheetName","nameBox","formulaInput","openUnsupported","shiftingNonblankCells","insertColumnWhenRowIsSelected","insertRowWhenColumnIsSelected","filterRangeContainingMerges","sortRangeContainingMerges","cantSortMultipleSelection","cantSortNullRef","cantSortMixedCells","validationError","cannotModifyDisabled","insertRowBelowLastRow","insertColAfterLastCol","tabs","menus","delete","unhide","bringToFront","sendToBack","PDFMixin","override_drawPDF","group","activeSheet","overrideSaveAsPDF","saveAsPDF","_drawPDF","then","root","pdfResultPromise","exportPDF","exportPDFToBlob","convertPromiseToDeferred","done","dataURI","saveAs","proxyTarget","fail","Workbook","undefined$1","browser","msie","version","K_ACTIVE","NS","commonEngine","FormulaInput","toActionSelector","selectors","COMPOSITE_UNAVAILABLE_ACTION_SELECTORS","UNHIDE_ACTION_SELECTORS","viewClassNames","View","ContextMenu","FormulaInputStaticList","d","itemClick","handler","FormulaInputRefArgs","constructor","NameBoxRefArgs","nameEditor","combo","initializeComboBox","transport","readData","success","cache","kendoComboBox","dataTextField","dataValueField","ignoreCase","onChange","noDataTemplate","onKeyDown","onDelete","editor","_renderInnerContent","SPREADSHEET_CONTENT_HTML_TEMPLATE","_createFormulaInputs","spreadsheetRef","_initSpreadsheetWidget","_bindWorkbookEvents","_onUpdateTools","_resizeHandler","_showWatermarkOverlay","widgetOptions","sheetsbar","formulaBarInputRef","_formulaBarInputRefList","_formulaBarInputRefPopup","formulaCellInputRef","_formulaCellInputRefList","_formulaCellInputRefPopup","nameBoxRef","createFilterMenu","createTabStrip","_initHeader","focus","createSheetEditor","sheetsBar","createSheetBar","openDialogCallback","_sheetsBar","createContextMenus","_dialogs","_initContextMenus","createSheetDataSource","getWorkbookCommand","commandName","commandOptions","getIconHTMLString","reason","sheetSelection","ref","dialogOptions","opts","saveAsCallback","exportOptions","commandArgs","saveAsExcel","ooxml","executeCommand","pop","contextmenu","objectRef","targetType","showUnhide","showUnmerge","isComposite","topLeft","bottomRight","cellContextMenu","colHeaderContextMenu","rowHeaderContextMenu","drawingContextMenu","setTimeout","locale","intl","kendoCultureToIntl","SpreadsheetWidget","formulaBarInputRefElement","formulaBarInputRefListId","listWrapper","insertAfter","aria","itemRole","Popup","formulaCellInputRefElement","formulaCellInputRefListId","cellEditor","contextMenuConfig","showOn","CELL_CONTEXT_MENU","COL_HEADER_CONTEXT_MENU","ROW_HEADER_CONTEXT_MENU","DRAWING_CONTEXT_MENU","onContextMenuSelect","_controller","navigator","_sheet","_activeDrawing","overElement","_getCopyRegex","newName","replaceAll","RegExp","sheetsbarOptions","onAddSelect","onSheetSelect","onSheetReorderEnd","onSheetRename","sheetToCopy","sheetByName","copies","regex","insertSheet","onSheetRemove","sheetToHide","x","visibleSheetIndex","nextVisibleSheet","_sheetsSearchCache","_createToolBar","toolbarId","empty","activeTabIndex","activeToolbar","_activeToolBar","isPlainObject","undoRedoStack","content","toolbarOptions","defaultTab","_resize","layout","_workbookChanging","_workbookChange","_autoRefresh","recalc","Range","_workbookCut","_workbookCopy","_workbookPaste","moveSheetToIndex","removeSheet","sheetByIndex","renameSheet","autoRefresh","json","saveJSON","fromFile","_workbook","exportOps","_workbookExcelExport","_workbookExcelImport","_initProgress","deferred","loading","pb","kendoProgressBar","chunkCount","finally","_workbookPdfExport","_workbookInsertSheet","_workbookRemoveSheet","_workbookSelectSheet","_workbookRenameSheet","_workbookInsertRow","_workbookInsertColumn","_workbookDeleteRow","_workbookDeleteColumn","_workbookHideRow","_workbookHideColumn","_workbookUnhideRow","_workbookUnhideColumn","_workbookSelect","_workbookChangeFormat","_workbookDataBinding","_workbookDataBound","_workbookProgress","columnWidth","headerHeight","headerWidth","defaultCellStyle","useCultureDecimals","defineName","undefineName","nameValue","forEachName","addImage","cleanupImages","plugin","kendo$1","__meta__","depends","defineProperty"],"mappings":"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","file":"kendo.spreadsheet.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.excel.js'), require('kendo.progressbar.js'), require('kendo.pdf.js'), require('kendo.toolbar.js'), require('kendo.list.js'), require('kendo.spreadsheet.common.js'), require('kendo.core.js'), require('kendo.binder.js'), require('kendo.validator.js'), require('kendo.icons.js'), require('kendo.window.js'), require('kendo.colorpicker.js'), require('kendo.combobox.js'), require('kendo.dropdownlist.js'), require('kendo.dropdownbutton.js'), require('kendo.popup.js'), require('kendo.togglebutton.js'), require('kendo.calendar.js'), require('kendo.listview.js'), require('kendo.dom.js'), require('kendo.sortable.js'), require('kendo.treeview.js'), require('kendo.numerictextbox.js'), require('kendo.datepicker.js'), require('kendo.datetimepicker.js'), require('kendo.ooxml.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.excel', 'kendo.progressbar', 'kendo.pdf', 'kendo.toolbar', 'kendo.list', 'kendo.spreadsheet.common', 'kendo.core', 'kendo.binder', 'kendo.validator', 'kendo.icons', 'kendo.window', 'kendo.colorpicker', 'kendo.combobox', 'kendo.dropdownlist', 'kendo.dropdownbutton', 'kendo.popup', 'kendo.togglebutton', 'kendo.calendar', 'kendo.listview', 'kendo.dom', 'kendo.sortable', 'kendo.treeview', 'kendo.numerictextbox', 'kendo.datepicker', 'kendo.datetimepicker', 'kendo.ooxml'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Spreadsheet = {})));\n})(this, (function (exports) {\n    (function(kendo) {\n        var $ = kendo.jQuery;\n        var ObservableObject = kendo.data.ObservableObject;\n\n        var MESSAGES = kendo.spreadsheet.messages.dialogs = {\n            apply: \"Apply\",\n            save: \"Save\",\n            cancel: \"Cancel\",\n            remove: \"Remove\",\n            retry: \"Retry\",\n            revert: \"Revert\",\n            okText: \"OK\",\n            formatCellsDialog: {\n                title: \"Format\",\n                categories: {\n                    number: \"Number\",\n                    currency: \"Currency\",\n                    date: \"Date\"\n                }\n            },\n            fontFamilyDialog: {\n                title: \"Font\"\n            },\n            fontSizeDialog: {\n                title: \"Font size\"\n            },\n            bordersDialog: {\n                title: \"Borders\"\n            },\n            alignmentDialog: {\n                title: \"Alignment\",\n                buttons: {\n                    justifyLeft: \"Align left\",\n                    justifyCenter: \"Center\",\n                    justifyRight: \"Align right\",\n                    justifyFull: \"Justify\",\n                    alignTop: \"Align top\",\n                    alignMiddle: \"Align middle\",\n                    alignBottom: \"Align bottom\"\n                }\n            },\n            mergeDialog: {\n                title: \"Merge cells\",\n                buttons: {\n                    mergeCells: \"Merge all\",\n                    mergeHorizontally: \"Merge horizontally\",\n                    mergeVertically: \"Merge vertically\",\n                    unmerge: \"Unmerge\"\n                }\n            },\n            freezeDialog: {\n                title: \"Freeze panes\",\n                buttons: {\n                    freezePanes: \"Freeze panes\",\n                    freezeRows: \"Freeze rows\",\n                    freezeColumns: \"Freeze columns\",\n                    unfreeze: \"Unfreeze panes\"\n                }\n            },\n            confirmationDialog: {\n                text: \"Are you sure you want to remove this sheet?\",\n                title: \"Sheet remove\"\n            },\n            validationDialog: {\n                title: \"Data Validation\",\n                hintMessage: \"Please enter a valid {0} value {1}.\",\n                hintTitle: \"Validation {0}\",\n                criteria: {\n                    any: \"Any value\",\n                    number: \"Number\",\n                    text: \"Text\",\n                    date: \"Date\",\n                    custom: \"Custom Formula\",\n                    list: \"List\"\n                },\n                comparers: {\n                    greaterThan: \"greater than\",\n                    lessThan: \"less than\",\n                    between: \"between\",\n                    notBetween: \"not between\",\n                    equalTo: \"equal to\",\n                    notEqualTo: \"not equal to\",\n                    greaterThanOrEqualTo: \"greater than or equal to\",\n                    lessThanOrEqualTo: \"less than or equal to\"\n                },\n                comparerMessages: {\n                    greaterThan: \"greater than {0}\",\n                    lessThan: \"less than {0}\",\n                    between: \"between {0} and {1}\",\n                    notBetween: \"not between {0} and {1}\",\n                    equalTo: \"equal to {0}\",\n                    notEqualTo: \"not equal to {0}\",\n                    greaterThanOrEqualTo: \"greater than or equal to {0}\",\n                    lessThanOrEqualTo: \"less than or equal to {0}\",\n                    custom: \"that satisfies the formula: {0}\"\n                },\n                labels: {\n                    criteria: \"Criteria\",\n                    comparer: \"Comparer\",\n                    min: \"Min\",\n                    max: \"Max\",\n                    value: \"Value\",\n                    start: \"Start\",\n                    end: \"End\",\n                    onInvalidData: \"On invalid data\",\n                    rejectInput: \"Reject input\",\n                    showWarning: \"Show warning\",\n                    showHint: \"Show hint\",\n                    hintTitle: \"Hint title\",\n                    hintMessage: \"Hint message\",\n                    ignoreBlank: \"Ignore blank\",\n                    showListButton: \"Display button to show list\",\n                    showCalendarButton: \"Display button to show calendar\"\n                },\n                placeholders: {\n                    typeTitle: \"Type title\",\n                    typeMessage: \"Type message\"\n                }\n            },\n            exportAsDialog: {\n                title: \"Export...\",\n                defaultFileName: \"Workbook\",\n                xlsx: {\n                    description: \"Excel Workbook (.xlsx)\"\n                },\n                pdf: {\n                    description: \"Portable Document Format (.pdf)\",\n                    area: {\n                        workbook: \"Entire Workbook\",\n                        sheet: \"Active Sheet\",\n                        selection: \"Selection\"\n                    },\n                    paper: {\n                        a2        : \"A2 (420 mm × 594 mm)\",\n                        a3        : \"A3 (297 mm x 420 mm)\",\n                        a4        : \"A4 (210 mm x 297 mm)\",\n                        a5        : \"A5 (148 mm x 210 mm)\",\n                        b3        : \"B3 (353 mm × 500 mm)\",\n                        b4        : \"B4 (250 mm x 353 mm)\",\n                        b5        : \"B5 (176 mm x 250 mm)\",\n                        folio     : 'Folio (8.5\" x 13\")',\n                        legal     : 'Legal (8.5\" x 14\")',\n                        letter    : 'Letter (8.5\" x 11\")',\n                        tabloid   : 'Tabloid (11\" x 17\")',\n                        executive : 'Executive (7.25\" x 10.5\")'\n                    },\n                    margin: {\n                        normal: \"Normal\",\n                        narrow: \"Narrow\",\n                        wide: \"Wide\"\n                    }\n                },\n                labels: {\n                    scale: \"Scale\",\n                    fit: \"Fit to page\",\n                    fileName: \"File name\",\n                    saveAsType: \"Save as type\",\n                    exportArea: \"Export\",\n                    paperSize: \"Paper size\",\n                    margins: \"Margins\",\n                    orientation: \"Orientation\",\n                    print: \"Print\",\n                    guidelines: \"Guidelines\",\n                    center: \"Center\",\n                    horizontally: \"Horizontally\",\n                    vertically: \"Vertically\"\n                }\n            },\n            modifyMergedDialog: {\n                errorMessage: \"Cannot change part of a merged cell.\"\n            },\n            rangeDisabledDialog: {\n                errorMessage: \"Destination range contains disabled cells.\"\n            },\n            intersectsArrayDialog: {\n                errorMessage: \"You cannot alter part of an array\"\n            },\n            incompatibleRangesDialog: {\n                errorMessage: \"Incompatible ranges\"\n            },\n            noFillDirectionDialog: {\n                errorMessage: \"Cannot determine fill direction\"\n            },\n            duplicateSheetNameDialog: {\n                errorMessage: \"Duplicate sheet name\"\n            },\n            overflowDialog: {\n                errorMessage: \"Cannot paste, because the copy area and the paste area are not the same size and shape.\"\n            },\n            useKeyboardDialog: {\n                title: \"Copying and pasting\",\n                errorMessage: \"These actions cannot be invoked through the menu. Please use the keyboard shortcuts instead:\",\n                labels: {\n                    forCopy: \"for copy\",\n                    forCut: \"for cut\",\n                    forPaste: \"for paste\"\n                }\n            },\n            unsupportedSelectionDialog: {\n                errorMessage: \"That action cannot be performed on multiple selection.\"\n            },\n            linkDialog: {\n                title: \"Hyperlink\",\n                labels: {\n                    text: \"Text\",\n                    url: \"Address\",\n                    removeLink: \"Remove link\"\n                }\n            },\n            sheetRenameDialog: {\n                title: \"Rename Sheet\",\n                labels: {\n                    text: \"Rename Sheet\",\n                    rename: \"Rename\"\n                }\n            },\n            insertCommentDialog: {\n                title: \"Insert comment\",\n                labels: {\n                    comment: \"Comment\",\n                    removeComment: \"Remove comment\"\n                }\n            },\n            insertImageDialog: {\n                title: \"Insert image\",\n                info: \"Drag an image here, or click to select\",\n                typeError: \"Please select a JPEG, PNG or GIF image\"\n            }\n        };\n\n        var registry = {};\n        kendo.spreadsheet.dialogs = {\n            register: function(name, dialogClass) {\n                registry[name] = dialogClass;\n            },\n            registered: function(name) {\n                return !!registry[name];\n            },\n            create: function(name, options) {\n                var dialogClass = registry[name];\n\n                if (dialogClass) {\n                    return new dialogClass(options);\n                }\n            }\n        };\n\n        var SpreadsheetDialog = kendo.spreadsheet.SpreadsheetDialog = kendo.Observable.extend({\n            init: function(options) {\n                kendo.Observable.fn.init.call(this, options);\n\n                this.options = translate($.extend(true, {}, this.options, options));\n\n                this.bind(this.events, options);\n            },\n            events: [\n                \"close\",\n                \"activate\"\n            ],\n            options: {\n                autoFocus: true\n            },\n            dialog: function() {\n                if (!this._dialog) {\n                    var options = {\n                        autoFocus: false,\n                        scrollable: false,\n                        resizable: false,\n                        modal: true,\n                        visible: false,\n                        width: this.options.width || 320,\n                        title: this.options.title,\n                        open: function() {\n                            this.center();\n                        },\n                        close: this._onDialogClose.bind(this),\n                        activate: this._onDialogActivate.bind(this),\n                        deactivate: this._onDialogDeactivate.bind(this)\n                    };\n                    this._dialog = $(\"<div class='k-spreadsheet-window k-action-window k-popup-edit-form' />\")\n                        .addClass(this.options.className || \"\")\n                        .append(kendo.template(this.options.template)({\n                            messages: kendo.spreadsheet.messages.dialogs || MESSAGES,\n                            ns: kendo.ns,\n\n                            // this is for ImportErrorDialog.  ugly that\n                            // we need this line here, but I couldn't\n                            // figure out a better way\n                            errors: this.options.errors\n                        }))\n                        .kendoWindow(options)\n                        .data(\"kendoWindow\");\n                }\n\n                return this._dialog;\n            },\n            _onDialogClose: function() {\n                this.trigger(\"close\", {\n                    action: this._action\n                });\n            },\n            _onDialogActivate: function() {\n                this.trigger(\"activate\");\n            },\n            _onDialogDeactivate: function() {\n                this.trigger(\"deactivate\");\n                this.destroy();\n            },\n            destroy: function() {\n                if (this._dialog) {\n                    this._dialog.destroy();\n                    this._dialog = null;\n                }\n            },\n            open: function() {\n                this.dialog().open();\n                this.dialog().element.find(\".k-button-solid-primary\").trigger(\"focus\");\n            },\n            apply: function() {\n                this.close();\n            },\n            close: function() {\n                this._action = \"close\";\n\n                this.dialog().close();\n            }\n        });\n\n        function formattedValue(value, format) {\n            return kendo.spreadsheet.formatting.text(value, format);\n        }\n\n        var FormatCellsViewModel = kendo.spreadsheet.FormatCellsViewModel = ObservableObject.extend({\n            init: function(options) {\n                ObservableObject.fn.init.call(this, options);\n\n                this.useCategory(this.category);\n            },\n            useCategory: function(category) {\n                var type = category && category.type || \"number\";\n                var formatCurrency = type == \"currency\";\n\n                this.category = category;\n\n                this.set(\"showCurrencyFilter\", formatCurrency && this.currencies.length > 1);\n\n                if (!formatCurrency) {\n                    this.set(\"formats\", this.allFormats[type + \"Formats\"]);\n                } else {\n                    this.currency(this.currencies[0]);\n                }\n\n                this.useFirstFormat();\n            },\n            useFirstFormat: function() {\n                if (this.formats.length) {\n                    this.set(\"format\", this.formats[0].value);\n                }\n            },\n            currency: function(currency) {\n                if (currency !== undefined) {\n                    this._currency = currency;\n\n                    var info = currency.value;\n                    var formats = [\n                        { currency: info, decimals: true },\n                        { currency: info, decimals: true, iso: true },\n                        { currency: info, decimals: false }\n                    ];\n\n                    formats = formats.map(function(format) {\n                        format = FormatCellsViewModel.convert.currency(format);\n\n                        return { value: format, name: formattedValue(1000, format) };\n                    });\n\n                    this.set(\"formats\", formats);\n\n                    this.useFirstFormat();\n                }\n\n                return this._currency || this.currencies[0];\n            },\n            categoryFilter: function(category) {\n                if (category !== undefined) {\n                    this.useCategory(category);\n                }\n\n                return this.category;\n            },\n            preview: function() {\n                var format = this.get(\"format\");\n                var value = this.value || 0;\n\n                if (format && format.length) {\n                    return formattedValue(value, format);\n                } else {\n                    return value;\n                }\n            }\n        });\n\n        FormatCellsViewModel.convert = {\n            currency: function(options) {\n                function repeat(token, n) {\n                    return new Array(n+1).join(token);\n                }\n\n                // convert culture info to spreadsheet format\n                var info = options.currency;\n                var format = info.pattern[1];\n\n                if (options.decimals) {\n                    format = format.replace(/n/g, \"n\" + info[\".\"] + repeat(\"0\", info.decimals));\n                }\n\n                if (options.iso) {\n                    format = '\"' + info.abbr + '\" ' + format.replace(/\\s*\\$\\s*/g, \"\");\n                } else {\n                    format = format.replace(/\\$/g, JSON.stringify(info.symbol));\n                }\n\n                format = format.replace(/n/g, \"?\");\n\n                return format;\n            },\n            date: function(format) {\n                if ((/T|Z/).test(format)) {\n                    return \"\";\n                }\n\n                return format.toLowerCase().replace(/tt/g, \"AM/PM\").replace(/'/g, '\"');\n            }\n        };\n\n        function uniqueBy(field, array) {\n            var result = [];\n            var values = [];\n\n            for (var i = 0; i < array.length; i++) {\n                if ($.inArray(array[i][field], values) == -1) {\n                    result.push(array[i]);\n                    values.push(array[i][field]);\n                }\n            }\n\n            return result;\n        }\n\n        var FormatCellsDialog = SpreadsheetDialog.extend({\n            init: function(options) {\n                var messages = kendo.spreadsheet.messages.dialogs.formatCellsDialog || MESSAGES;\n                var defaultOptions = {\n                    title: messages.title,\n                    categories: [\n                        { type: \"number\", name: messages.categories.number },\n                        { type: \"currency\", name: messages.categories.currency },\n                        { type: \"date\", name: messages.categories.date }\n                    ]\n                };\n\n                SpreadsheetDialog.fn.init.call(this, $.extend(defaultOptions, options));\n\n                this._generateFormats();\n            },\n            options: {\n                className: \"k-spreadsheet-format-cells\",\n                template: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `<div class='k-edit-form-container'><div class='k-root-tabs' data-${kendo.htmlEncode(data.ns)}role='tabstrip' data-${kendo.htmlEncode(data.ns)}text-field='name' data-${kendo.htmlEncode(data.ns)}bind='source: categories, value: categoryFilter' data-${kendo.htmlEncode(data.ns)}animation='false'></div>\n    <div class='k-spreadsheet-preview' data-${kendo.htmlEncode(data.ns)}bind='text: preview'></div><select data-${kendo.htmlEncode(data.ns)}role='dropdownlist' class='k-format-filter' data-${kendo.htmlEncode(data.ns)}text-field='description' data-${kendo.htmlEncode(data.ns)}value-field='value.name' data-${kendo.htmlEncode(data.ns)}bind='visible: showCurrencyFilter, value: currency, source: currencies'></select><ul data-${kendo.htmlEncode(data.ns)}role='staticlist' tabindex='0' id='formats-list' aria-label='formats list' class='k-list k-reset' bind:data-${kendo.htmlEncode(data.ns)}template='formatItemTemplate' data-${kendo.htmlEncode(data.ns)}value-primitive='true' data-${kendo.htmlEncode(data.ns)}value-field='value' data-${kendo.htmlEncode(data.ns)}bind='source: formats, value: format'></ul>\n    <div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary' data-${kendo.htmlEncode(data.ns)}bind='click: apply'><span class='k-button-text'>${kendo.htmlEncode(data.messages.apply)}</span></button><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base' data-${kendo.htmlEncode(data.ns)}bind='click: close'><span class='k-button-text'>${kendo.htmlEncode(data.messages.cancel)}</span></button></div>\n</div>`;\n                    return $kendoOutput;\n                }\n            },\n            _generateFormats: function() {\n                var options = this.options;\n\n                if (!options.currencies) {\n                    options.currencies = FormatCellsDialog.currenciesFrom(kendo.cultures);\n                }\n\n                if (!options.numberFormats) {\n                    options.numberFormats = [\n                        { value: \"#.00%\", name: \"100.00%\" },\n                        { value: \"#%\", name: \"100%\" },\n                        { value: \"#.00\", name: \"1024.00\" },\n                        { value: \"#,###.00\", name: \"1,024.00\" }\n                    ];\n                }\n\n                if (!options.dateFormats) {\n                    var calendarPatterns = kendo.cultures.current.calendars.standard.patterns;\n\n                    options.dateFormats = uniqueBy(\"value\", $.map(calendarPatterns, function(format) {\n                        format = FormatCellsViewModel.convert.date(format);\n\n                        if (!format) {\n                            return;\n                        }\n\n                        return { value: format, name: formattedValue(34567.7678, format) };\n                    }));\n                }\n            },\n            open: function(range) {\n                var options = this.options;\n                var value = range.value();\n                var categories = options.categories.slice(0);\n                var element;\n\n                this.viewModel = new FormatCellsViewModel({\n                    currencies: options.currencies.slice(0),\n                    allFormats: {\n                        numberFormats: options.numberFormats.slice(0),\n                        dateFormats: options.dateFormats.slice(0)\n                    },\n                    categories: categories,\n                    format: range.format(),\n                    category: value instanceof Date ? categories[2] : categories[0],\n                    apply: this.apply.bind(this),\n                    close: this.close.bind(this),\n                    value: value,\n                    formatItemTemplate: (data) => kendo.htmlEncode(data.name)\n                });\n\n                SpreadsheetDialog.fn.open.call(this);\n\n                element = this.dialog().element;\n\n                kendo.bind(element, this.viewModel);\n\n                var currencyFilter = element.find(\"select.k-format-filter\").data(\"kendoDropDownList\");\n\n                if (options.currencies.length > 10) {\n                    currencyFilter.setOptions({ filter: \"contains\" });\n                }\n\n                element.find(kendo.roleSelector(\"staticlist\")).parent().addClass(\"k-list-wrapper\");\n\n                element.find(\".k-tabstrip-item\").attr(\"aria-controls\", \"formats-list\");\n            },\n            apply: function() {\n                var format = this.viewModel.format;\n\n                SpreadsheetDialog.fn.apply.call(this);\n\n                this.trigger(\"action\", {\n                    command: \"PropertyChangeCommand\",\n                    options: {\n                        property: \"format\",\n                        value: format\n                    }\n                });\n            }\n        });\n\n        FormatCellsDialog.currenciesFrom = function (cultures) {\n            return uniqueBy(\"description\", $.map(cultures, function(culture, name) {\n                if (!(/-/).test(name)) {\n                    return;\n                }\n\n                var currency = culture.numberFormat.currency;\n                var description = kendo.format(\n                    \"{0} ({1}, {2})\",\n                    currency.name,\n                    currency.abbr,\n                    currency.symbol\n                );\n\n                return { description: description, value: currency };\n            }));\n        };\n\n        kendo.spreadsheet.dialogs.register(\"formatCells\", FormatCellsDialog);\n\n        kendo.spreadsheet.dialogs.FormatCellsDialog = FormatCellsDialog;\n\n        var MessageDialog = SpreadsheetDialog.extend({\n            options: {\n                className: \"k-spreadsheet-message\",\n                title: \"\",\n                messageId: \"\",\n                text: \"\",\n                template: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `<div class='k-spreadsheet-message-content' data-${kendo.htmlEncode(data.ns)}bind='text: text'></div>\n<div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n        data-${kendo.htmlEncode(data.ns)}bind='click: close'><span\n            class='k-button-text'>${data.messages.okText}</span></button></div>`;\n                    return $kendoOutput;\n                }\n            },\n            open: function() {\n                SpreadsheetDialog.fn.open.call(this);\n\n                var options = this.options;\n                var text = options.text;\n\n                if (options.messageId) {\n                    text = kendo.getter(options.messageId, true)(kendo.spreadsheet.messages.dialogs);\n                }\n\n                kendo.bind(this.dialog().element, {\n                    text: text,\n                    close: this.close.bind(this)\n                });\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"message\", MessageDialog);\n\n        var ConfirmationDialog = SpreadsheetDialog.extend({\n            init: function(options) {\n                var messages = kendo.spreadsheet.messages.dialogs.confirmationDialog || MESSAGES;\n                var defaultOptions = {\n                    title: messages.title,\n                    text: messages.text\n                };\n\n                SpreadsheetDialog.fn.init.call(this, $.extend(defaultOptions, options));\n            },\n            options: {\n                className: \"k-spreadsheet-message\",\n                messageId: \"\",\n                template: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `<div class='k-spreadsheet-message-content' data-${kendo.htmlEncode(data.ns)}bind='text: text'></div>\n<div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n        data-${kendo.htmlEncode(data.ns)}bind='click: confirm'><span\n            class='k-button-text'>${data.messages.okText}</span></button><button\n        class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'\n        data-${kendo.htmlEncode(data.ns)}bind='click: cancel'><span\n            class='k-button-text'>${data.messages.cancel}</span></button></div>`;\n                    return $kendoOutput;\n                }\n            },\n            open: function() {\n                SpreadsheetDialog.fn.open.call(this);\n\n                var options = this.options;\n                var text = options.text;\n\n                if (options.messageId) {\n                    text = kendo.getter(options.messageId, true)(kendo.spreadsheet.messages.dialogs);\n                }\n\n                kendo.bind(this.dialog().element, {\n                    text: text,\n                    confirm: this.confirm.bind(this),\n                    cancel: this.close.bind(this)\n                });\n            },\n            isConfirmed: function() {\n                return this._confirmed;\n            },\n            confirm: function() {\n                this._confirmed = true;\n                this.close();\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"confirmation\", ConfirmationDialog);\n\n        var ValidationErrorDialog = SpreadsheetDialog.extend({\n            options: {\n                className: \"k-spreadsheet-message\",\n                title: \"\",\n                messageId: \"\",\n                text: \"\",\n                template: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `<div class='k-spreadsheet-message-content' data-${kendo.htmlEncode(data.ns)}bind='text: text'></div><div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary' data-${kendo.htmlEncode(data.ns)}bind='click: retry'><span class='k-button-text'>${data.messages.retry}</span></button><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base' data-${kendo.htmlEncode(data.ns)}bind='click: cancel'><span class='k-button-text'>${data.messages.cancel}</span></button></div>`;\n                    return $kendoOutput;\n                }\n            },\n            open: function() {\n                SpreadsheetDialog.fn.open.call(this);\n\n                var options = this.options;\n                var text = options.text;\n\n                if (options.messageId) {\n                    text = kendo.getter(options.messageId, true)(kendo.spreadsheet.messages.dialogs);\n                }\n\n                kendo.bind(this.dialog().element, {\n                    text: text,\n                    retry: this.retry.bind(this),\n                    cancel: this.close.bind(this)\n                });\n            },\n            retry: function() {\n                this._retry = true;\n                this.close();\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"validationError\", ValidationErrorDialog);\n\n        var FontFamilyDialog = SpreadsheetDialog.extend({\n            init: function(options) {\n                var messages = kendo.spreadsheet.messages.dialogs.fontFamilyDialog || MESSAGES;\n\n                SpreadsheetDialog.fn.init.call(this, $.extend({ title: messages.title }, options));\n\n                this._list();\n            },\n            options: {\n                template: () => \"<ul class='k-list k-reset'></ul>\"\n            },\n            _list: function() {\n                var ul = this.dialog().element.find(\"ul\");\n                var fonts = this.options.options;\n                var defaultFont = this.options.default;\n\n                this.list = new kendo.ui.StaticList(ul, {\n                    dataSource: new kendo.data.DataSource({ data: fonts }),\n                    template: (data) => kendo.htmlEncode(data),\n                    value: defaultFont,\n                    change: this.apply.bind(this)\n                });\n\n                this.list.dataSource.fetch();\n            },\n            apply: function(e) {\n                SpreadsheetDialog.fn.apply.call(this);\n\n                this.trigger(\"action\", {\n                    command: \"PropertyChangeCommand\",\n                    options: {\n                        property: \"fontFamily\",\n                        value: e.sender.value()[0]\n                    }\n                });\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"fontFamily\", FontFamilyDialog);\n\n        var FontSizeDialog = SpreadsheetDialog.extend({\n            init: function(options) {\n                var messages = kendo.spreadsheet.messages.dialogs.fontSizeDialog || MESSAGES;\n\n                SpreadsheetDialog.fn.init.call(this, $.extend({ title: messages.title }, options));\n\n                this._list();\n            },\n            options: {\n                template: () => \"<ul class='k-list k-reset'></ul>\"\n            },\n            _list: function() {\n                var ul = this.dialog().element.find(\"ul\");\n                var sizes = this.options.options;\n                var defaultSize = this.options.default;\n\n                this.list = new kendo.ui.StaticList(ul, {\n                    dataSource: new kendo.data.DataSource({ data: sizes }),\n                    template: (data) => kendo.htmlEncode(data),\n                    value: defaultSize,\n                    change: this.apply.bind(this)\n                });\n\n                this.list.dataSource.fetch();\n            },\n            apply: function(e) {\n                SpreadsheetDialog.fn.apply.call(this);\n\n                this.trigger(\"action\", {\n                    command: \"PropertyChangeCommand\",\n                    options: {\n                        property: \"fontSize\",\n                        value: kendo.parseInt(e.sender.value()[0])\n                    }\n                });\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"fontSize\", FontSizeDialog);\n\n        var BordersDialog = SpreadsheetDialog.extend({\n            init: function(options) {\n                var messages = kendo.spreadsheet.messages.dialogs.bordersDialog || MESSAGES;\n\n                SpreadsheetDialog.fn.init.call(this, $.extend({ title: messages.title }, options));\n\n                this.element = this.dialog().element;\n                this._borderPalette();\n\n                this.viewModel = kendo.observable({\n                    apply: this.apply.bind(this),\n                    close: this.close.bind(this)\n                });\n\n                kendo.bind(this.element.find(\".k-actions\"), this.viewModel);\n            },\n            options: {\n                template: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `<div></div>\n<div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n        data-${kendo.htmlEncode(data.ns)}bind='click: apply'><span\n            class='k-button-text'>${kendo.htmlEncode(data.messages.apply)}</span></button><button\n        class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'\n        data-${kendo.htmlEncode(data.ns)}bind='click: close'><span\n            class='k-button-text'>${kendo.htmlEncode(data.messages.cancel)}</span></button></div>`;\n                    return $kendoOutput;\n                }\n            },\n            apply: function() {\n                SpreadsheetDialog.fn.apply.call(this);\n\n                var state = this.borderPalette.value();\n\n                if (state.color && state.type) {\n                    this.trigger(\"action\", {\n                        command: \"BorderChangeCommand\",\n                        options: {\n                            border: state.type,\n                            style: { size: 1, color: state.color }\n                        }\n                    });\n                }\n            },\n            _borderPalette: function() {\n                var element = this.dialog().element.find(\"div\").first();\n\n                this.borderPalette = new kendo.spreadsheet.BorderPalette(element, {\n                    change: this.value.bind(this)\n                });\n            },\n            value: function(state) {\n                if (state === undefined) {\n                    return this._state;\n                } else {\n                    this._state = state;\n                }\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"borders\", BordersDialog);\n\n        var ColorChooser = SpreadsheetDialog.extend({\n            init: function(options) {\n                SpreadsheetDialog.fn.init.call(this, options);\n\n                this.element = this.dialog().element;\n                this.property = options.property;\n                this.options.title = options.title;\n\n                this.viewModel = kendo.observable({\n                    apply: this.apply.bind(this),\n                    close: this.close.bind(this)\n                });\n\n                kendo.bind(this.element.find(\".k-actions\"), this.viewModel);\n            },\n            options: {\n                template: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `<div></div>\n<div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n        data-${kendo.htmlEncode(data.ns)}bind='click: apply'><span\n            class='k-button-text'>${kendo.htmlEncode(data.messages.apply)}</span></button><button\n        class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'\n        data-${kendo.htmlEncode(data.ns)}bind='click: close'><span\n            class='k-button-text'>${kendo.htmlEncode(data.messages.cancel)}</span></button></div>`;\n                    return $kendoOutput;\n                }\n            },\n            apply: function() {\n                SpreadsheetDialog.fn.apply.call(this);\n\n                this.trigger(\"action\", {\n                    command: \"PropertyChangeCommand\",\n                    options: {\n                        property: this.property,\n                        value: this.value()\n                    }\n                });\n            },\n            value: function(e) {\n                if (e === undefined) {\n                    return this._value;\n                } else {\n                    this._value = e.value;\n                }\n            }\n        });\n\n        var ColorPickerDialog = ColorChooser.extend({\n            init: function(options) {\n                options.width = 177;\n                ColorChooser.fn.init.call(this, options);\n                this._colorPalette();\n            },\n            _colorPalette: function() {\n                var element = this.dialog().element.find(\"div\").first();\n                this.colorPalette = element.kendoColorPalette({\n                    palette: [ //metro palette\n                        \"#ffffff\", \"#000000\", \"#d6ecff\", \"#4e5b6f\", \"#7fd13b\", \"#ea157a\", \"#feb80a\", \"#00addc\", \"#738ac8\", \"#1ab39f\",\n                        \"#f2f2f2\", \"#7f7f7f\", \"#a7d6ff\", \"#d9dde4\", \"#e5f5d7\", \"#fad0e4\", \"#fef0cd\", \"#c5f2ff\", \"#e2e7f4\", \"#c9f7f1\",\n                        \"#d8d8d8\", \"#595959\", \"#60b5ff\", \"#b3bcca\", \"#cbecb0\", \"#f6a1c9\", \"#fee29c\", \"#8be6ff\", \"#c7d0e9\", \"#94efe3\",\n                        \"#bfbfbf\", \"#3f3f3f\", \"#007dea\", \"#8d9baf\", \"#b2e389\", \"#f272af\", \"#fed46b\", \"#51d9ff\", \"#aab8de\", \"#5fe7d5\",\n                        \"#a5a5a5\", \"#262626\", \"#003e75\", \"#3a4453\", \"#5ea226\", \"#af0f5b\", \"#c58c00\", \"#0081a5\", \"#425ea9\", \"#138677\",\n                        \"#7f7f7f\", \"#0c0c0c\", \"#00192e\", \"#272d37\", \"#3f6c19\", \"#750a3d\", \"#835d00\", \"#00566e\", \"#2c3f71\", \"#0c594f\"\n                    ],\n                    change: this.value.bind(this)\n                }).data(\"kendoColorPalette\");\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"colorPicker\", ColorPickerDialog);\n\n        var CustomColorDialog = ColorChooser.extend({\n            init: function(options) {\n                options.width = 268;\n                ColorChooser.fn.init.call(this, options);\n                this.dialog().setOptions({ animation: false });\n                this.dialog().one(\"activate\", this._colorPicker.bind(this));\n            },\n            _colorPicker: function() {\n                var element = this.dialog().element.find(\"div\").first();\n                this.colorPicker = element.kendoFlatColorPicker({\n                    change: this.value.bind(this)\n                }).data(\"kendoFlatColorPicker\");\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"customColor\", CustomColorDialog);\n\n        var AlignmentDialog = SpreadsheetDialog.extend({\n            init: function(options) {\n                var messages = kendo.spreadsheet.messages.dialogs.alignmentDialog || MESSAGES;\n                var defaultOptions = {\n                    title: messages.title,\n                    buttons: [\n                        { property: \"textAlign\",     value: \"left\",    iconClass: \"align-left\",   text: messages.buttons.justifyLeft },\n                        { property: \"textAlign\",     value: \"center\",  iconClass: \"align-center\", text: messages.buttons.justifyCenter },\n                        { property: \"textAlign\",     value: \"right\",   iconClass: \"align-right\",  text: messages.buttons.justifyRight },\n                        { property: \"textAlign\",     value: \"justify\", iconClass: \"align-justify\",   text: messages.buttons.justifyFull },\n                        { property: \"verticalAlign\", value: \"top\",     iconClass: \"align-top\",      text: messages.buttons.alignTop },\n                        { property: \"verticalAlign\", value: \"center\",  iconClass: \"align-middle\",   text: messages.buttons.alignMiddle },\n                        { property: \"verticalAlign\", value: \"bottom\",  iconClass: \"align-bottom\",   text: messages.buttons.alignBottom }\n                    ]\n                };\n\n                SpreadsheetDialog.fn.init.call(this, $.extend(defaultOptions, options));\n\n                this._list();\n            },\n            options: {\n                template: () => \"<ul class='k-list k-reset'></ul>\"\n            },\n            _list: function() {\n                var ul = this.dialog().element.find(\"ul\");\n\n                this.list = new kendo.ui.StaticList(ul, {\n                    dataSource: new kendo.data.DataSource({ data: this.options.buttons }),\n                    template: (data) => `<a role='button' title='${data.text}' data-property='${data.property}' data-value='${data.value}'>\n                                ${kendo.ui.icon(data.iconClass)} ${data.text}\n                           </a>`,\n                    change: this.apply.bind(this)\n                });\n\n                this.list.dataSource.fetch();\n            },\n            apply: function(e) {\n                var dataItem = e.sender.value()[0];\n                SpreadsheetDialog.fn.apply.call(this);\n\n                this.trigger(\"action\", {\n                    command: \"PropertyChangeCommand\",\n                    options: {\n                        property: dataItem.property,\n                        value: dataItem.value\n                    }\n                });\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"alignment\", AlignmentDialog);\n\n        var MergeDialog = SpreadsheetDialog.extend({\n            init: function(options) {\n                var messages = kendo.spreadsheet.messages.dialogs.mergeDialog || MESSAGES;\n                var defaultOptions = {\n                    title: messages.title,\n                    buttons: [\n                        { value: \"cells\",        iconClass: \"cells-merge\",        text: messages.buttons.mergeCells },\n                        { value: \"horizontally\", iconClass: \"cells-merge-horizontally\", text: messages.buttons.mergeHorizontally },\n                        { value: \"vertically\",   iconClass: \"cells-merge-vertically\",   text: messages.buttons.mergeVertically },\n                        { value: \"unmerge\",      iconClass: \"table-unmerge\",      text: messages.buttons.unmerge }\n                    ]\n                };\n\n                SpreadsheetDialog.fn.init.call(this, $.extend(defaultOptions, options));\n\n                this._list();\n            },\n            options: {\n                template: () => \"<ul class='k-list k-reset'></ul>\"\n            },\n            _list: function() {\n                var ul = this.dialog().element.find(\"ul\");\n\n                this.list = new kendo.ui.StaticList(ul, {\n                    dataSource: new kendo.data.DataSource({ data: this.options.buttons }),\n                    template: (data) => `<a role='button' title='${data.text}' data-value='${data.value}'>` +\n                                `${kendo.ui.icon(data.iconClass)}${data.text}` +\n                              \"</a>\",\n                    change: this.apply.bind(this)\n                });\n\n                this.list.dataSource.fetch();\n            },\n            apply: function(e) {\n                var dataItem = e.sender.value()[0];\n                SpreadsheetDialog.fn.apply.call(this);\n\n                this.trigger(\"action\", {\n                    command: \"MergeCellCommand\",\n                    options: {\n                        value: dataItem.value\n                    }\n                });\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"merge\", MergeDialog);\n\n        var FreezeDialog = SpreadsheetDialog.extend({\n            init: function(options) {\n                var messages = kendo.spreadsheet.messages.dialogs.freezeDialog || MESSAGES;\n                var defaultOptions = {\n                    title: messages.title,\n                    buttons: [\n                        { value: \"panes\",    iconClass: \"pane-freeze\",  text: messages.buttons.freezePanes },\n                        { value: \"rows\",     iconClass: \"row-freeze\",    text: messages.buttons.freezeRows },\n                        { value: \"columns\",  iconClass: \"column-freeze\",    text: messages.buttons.freezeColumns },\n                        { value: \"unfreeze\", iconClass: \"table-unmerge\", text: messages.buttons.unfreeze }\n                    ]\n                };\n\n                SpreadsheetDialog.fn.init.call(this, $.extend(defaultOptions, options));\n\n                this._list();\n            },\n            options: {\n                template: () => \"<ul class='k-list k-reset'></ul>\"\n            },\n            _list: function() {\n                var ul = this.dialog().element.find(\"ul\");\n\n                this.list = new kendo.ui.StaticList(ul, {\n                    dataSource: new kendo.data.DataSource({ data: this.options.buttons }),\n                    template: (data) => `<a role='button' title='${data.text}' data-value='${data.value}'>` +\n                                `${kendo.ui.icon(data.iconClass)}${data.text}` +\n                              \"</a>\",\n                    change: this.apply.bind(this)\n                });\n\n                this.list.dataSource.fetch();\n            },\n            apply: function(e) {\n                var dataItem = e.sender.value()[0];\n                SpreadsheetDialog.fn.apply.call(this);\n\n                this.trigger(\"action\", {\n                    command: \"FreezePanesCommand\",\n                    options: {\n                        value: dataItem.value\n                    }\n                });\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"freeze\", FreezeDialog);\n\n        var ValidationViewModel = kendo.spreadsheet.ValidationCellsViewModel = ObservableObject.extend({\n            init: function(options) {\n                ObservableObject.fn.init.call(this, options);\n\n                this.bind(\"change\", (function(e) {\n\n                    if (e.field === \"criterion\") {\n                        this.reset();\n\n                        if (this.criterion === \"custom\" || this.criterion === \"list\") {\n                            this.setHintMessageTemplate();\n                        }\n                    }\n\n                    if (e.field === \"comparer\") {\n                        this.setHintMessageTemplate();\n                    }\n\n                    if ((e.field == \"hintMessage\" || e.field == \"hintTitle\") && !this._mute) {\n                        this.shouldBuild = false;\n                    }\n\n                    if ((e.field == \"from\" || e.field == \"to\" || e.field == \"hintMessageTemplate\" || e.field == \"type\") && this.shouldBuild) {\n                        this.buildMessages();\n                    }\n                }).bind(this));\n\n                this.reset();\n            },\n            buildMessages: function() {\n                this._mute = true;\n                this.set(\"hintTitle\", this.hintTitleTemplate ? kendo.format(this.hintTitleTemplate, this.type) : \"\");\n                this.set(\"hintMessage\", this.hintMessageTemplate ? kendo.format(this.hintMessageTemplate, this.from, this.to) : \"\");\n                this._mute = false;\n            },\n            reset: function() {\n                this.setComparers();\n                this.set(\"comparer\", this.comparers[0].type);\n                this.set(\"from\", null);\n                this.set(\"to\", null);\n\n                this.set(\"useCustomMessages\", false);\n\n                this.shouldBuild = true;\n\n                this.hintTitleTemplate = this.defaultHintTitle;\n                this.buildMessages();\n            },\n            //TODO: refactor\n            setComparers: function() {\n                var all = this.defaultComparers;\n                var comparers = [];\n\n                if (this.criterion === \"text\") {\n                    var text_comparers = [\"equalTo\", \"notEqualTo\"];\n                    for (var idx = 0; idx < all.length; idx++) {\n                        if (text_comparers[0] == all[idx].type) {\n                            comparers.push(all[idx]);\n                            text_comparers.shift();\n                        }\n                    }\n                } else {\n                    comparers = all.slice();\n                }\n\n                this.set(\"comparers\", comparers);\n            },\n            setHintMessageTemplate: function() {\n               if (this.criterion !== \"custom\" && this.criterion !== \"list\") {\n                   this.set(\"hintMessageTemplate\", kendo.format(this.defaultHintMessage, this.criterion, this.comparerMessages[this.comparer]));\n               } else {\n                   this.set(\"hintMessageTemplate\", \"\");\n                   this.set(\"hintMessage\", \"\");\n               }\n            },\n            isAny: function() {\n                return this.get(\"criterion\") === \"any\";\n            },\n            isNumber: function() {\n                return this.get(\"criterion\") === \"number\";\n            },\n            showToForNumber: function() {\n                return this.showTo() && this.isNumber();\n            },\n            showToForDate: function() {\n                return this.showTo() && this.isDate();\n            },\n            isText: function() {\n                return this.get(\"criterion\") === \"text\";\n            },\n            isDate: function() {\n                return this.get(\"criterion\") === \"date\";\n            },\n            isList: function() {\n                return this.get(\"criterion\") === \"list\";\n            },\n            isCustom: function() {\n                return this.get(\"criterion\") === \"custom\";\n            },\n            showRemove: function() {\n                return this.get(\"hasValidation\");\n            },\n            showTo: function() {\n                return this.get(\"comparer\") == \"between\" || this.get(\"comparer\") == \"notBetween\";\n            },\n            update: function(validation) {\n                this.set(\"hasValidation\", !!validation);\n\n                if (validation) {\n                    this.fromValidationObject(validation);\n                }\n            },\n            fromValidationObject: function(validation) {\n                this.set(\"criterion\", validation.dataType);\n                this.set(\"comparer\", validation.comparerType);\n                this.set(\"from\", validation.from);\n                this.set(\"to\", validation.to);\n                this.set(\"type\", validation.type);\n                this.set(\"ignoreBlank\", validation.allowNulls);\n                this.set(\"showButton\", validation.showButton);\n\n                if (validation.messageTemplate || validation.titleTemplate) {\n                    this.hintMessageTemplate = validation.messageTemplate;\n                    this.hintMessage = validation.messageTemplate;\n                    this.hintTitleTemplate = validation.titleTemplate;\n                    this.hintTitle = validation.titleTemplate;\n                    this.useCustomMessages = true;\n                    this.buildMessages();\n                } else {\n                    this.useCustomMessages = false;\n                }\n            },\n            toValidationObject: function() {\n                if (this.criterion === \"any\") {\n                    return null;\n                }\n\n                var options = {\n                    type: this.type,\n                    dataType: this.criterion,\n                    comparerType: this.comparer,\n                    from: this.from,\n                    to: this.to,\n                    allowNulls: this.ignoreBlank,\n                    showButton: this.showButton\n                };\n\n                if (this.useCustomMessages) {\n                    options.messageTemplate = this.shouldBuild ? this.hintMessageTemplate : this.hintMessage;\n                    options.titleTemplate = this.hintTitle;\n                }\n\n                return options;\n            }\n        });\n\n        var ValidationDialog = SpreadsheetDialog.extend({\n            init: function(options) {\n                var messages = kendo.spreadsheet.messages.dialogs.validationDialog || MESSAGES;\n                var defaultOptions = {\n                    title: messages.title,\n                    hintMessage: messages.hintMessage,\n                    hintTitle: messages.hintTitle,\n                    criteria: [\n                        { type: \"any\", name: messages.criteria.any },\n                        { type: \"number\", name: messages.criteria.number },\n                        { type: \"text\", name: messages.criteria.text },\n                        { type: \"date\", name: messages.criteria.date },\n                        { type: \"custom\", name: messages.criteria.custom },\n                        { type: \"list\", name: messages.criteria.list }\n                    ],\n                    comparers: [\n                        { type: \"greaterThan\", name: messages.comparers.greaterThan },\n                        { type: \"lessThan\",    name: messages.comparers.lessThan },\n                        { type: \"between\",     name: messages.comparers.between },\n                        { type: \"notBetween\",  name: messages.comparers.notBetween },\n                        { type: \"equalTo\",     name: messages.comparers.equalTo },\n                        { type: \"notEqualTo\",  name: messages.comparers.notEqualTo },\n                        { type: \"greaterThanOrEqualTo\", name: messages.comparers.greaterThanOrEqualTo },\n                        { type: \"lessThanOrEqualTo\",    name: messages.comparers.lessThanOrEqualTo }\n                    ],\n                    comparerMessages: messages.comparerMessages\n                };\n\n                SpreadsheetDialog.fn.init.call(this, $.extend(defaultOptions, options));\n            },\n            options: {\n                width: 450,\n                criterion: \"any\",\n                type: \"reject\",\n                ignoreBlank: true,\n                showButton: true,\n                useCustomMessages: false,\n                errorTemplate: (data) =>\n                    `<div class=\"k-tooltip k-tooltip-error k-validator-tooltip\">\n                    ${kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-tooltip-icon\" })}\n                    <span class=\"k-tooltip-content\">${data.message}</span>\n                    <span class=\"k-callout k-callout-n\"></span>\n                </div>`,\n                template: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `<div class=\"k-edit-form-container\">\n                    <div class=\"k-edit-label\"><label for=\"criteria\">${kendo.htmlEncode(data.messages.validationDialog.labels.criteria)}:</label></div>\n                    <div class=\"k-edit-field\"><select id=\"criteria\" data-${kendo.htmlEncode(data.ns)}role=\"dropdownlist\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.criteria)}\" data-${kendo.htmlEncode(data.ns)}text-field=\"name\" data-${kendo.htmlEncode(data.ns)}value-field=\"type\" data-${kendo.htmlEncode(data.ns)}bind=\"value: criterion, source: criteria\"></select></div>\n                    <div data-${kendo.htmlEncode(data.ns)}bind=\"visible: isNumber\">\n                    <div class=\"k-edit-label\"><label for=\"number-comparer\">${kendo.htmlEncode(data.messages.validationDialog.labels.comparer)}:</label></div>\n                    <div class=\"k-edit-field\"><select id=\"number-comparer\" data-${kendo.htmlEncode(data.ns)}role=\"dropdownlist\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.comparer)}\" data-${kendo.htmlEncode(data.ns)}text-field=\"name\" data-${kendo.htmlEncode(data.ns)}value-field=\"type\" data-${kendo.htmlEncode(data.ns)}bind=\"value: comparer, source: comparers\"></select></div>\n                    <div class=\"k-edit-label\"><label for=\"comparer-min\">${kendo.htmlEncode(data.messages.validationDialog.labels.min)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"comparer-min\" name=\"${kendo.htmlEncode(data.messages.validationDialog.labels.min)}\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.min)}\" placeholder=\"e.g. 10\" class=\"k-input-inner\" data-${kendo.htmlEncode(data.ns)}bind=\"value: from, enabled: isNumber\" required=\"required\" /></span></div>\n                    <div data-${kendo.htmlEncode(data.ns)}bind=\"visible: showTo\">\n                    <div class=\"k-edit-label\"><label for=\"comparer-max\">${kendo.htmlEncode(data.messages.validationDialog.labels.max)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"comparer-max\" name=\"${kendo.htmlEncode(data.messages.validationDialog.labels.max)}\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.max)}\" placeholder=\"e.g. 100\" class=\"k-input-inner\" data-${kendo.htmlEncode(data.ns)}bind=\"value: to, enabled: showToForNumber\" required=\"required\" /></span></div>\n                    </div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"visible: isText\">\n                    <div class=\"k-edit-label\"><label for=\"text-comparer\">${kendo.htmlEncode(data.messages.validationDialog.labels.comparer)}:</label></div>\n                    <div class=\"k-edit-field\"><select id=\"text-comparer\" data-${kendo.htmlEncode(data.ns)}role=\"dropdownlist\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.comparer)}\" data-${kendo.htmlEncode(data.ns)}text-field=\"name\" data-${kendo.htmlEncode(data.ns)}value-field=\"type\" data-${kendo.htmlEncode(data.ns)}bind=\"value: comparer, source: comparers\"></select></div>\n                    <div class=\"k-edit-label\"><label for=\"text-comparer-value\">${kendo.htmlEncode(data.messages.validationDialog.labels.value)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"text-comparer-value\" name=\"${kendo.htmlEncode(data.messages.validationDialog.labels.value)}\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.value)}\" class=\"k-input-inner\" data-${kendo.htmlEncode(data.ns)}bind=\"value: from, enabled: isText\" required=\"required\" /></span></div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"visible: isDate\">\n                    <div class=\"k-edit-label\"><label for=\"date-comparer\">${kendo.htmlEncode(data.messages.validationDialog.labels.comparer)}:</label></div>\n                    <div class=\"k-edit-field\"><select id=\"date-comparer\" data-${kendo.htmlEncode(data.ns)}role=\"dropdownlist\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.comparer)}\" data-${kendo.htmlEncode(data.ns)}text-field=\"name\" data-${kendo.htmlEncode(data.ns)}value-field=\"type\" data-${kendo.htmlEncode(data.ns)}bind=\"value: comparer, source: comparers\"></select></div>\n                    <div class=\"k-edit-label\"><label for=\"date-comparer-start\">${kendo.htmlEncode(data.messages.validationDialog.labels.start)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"date-comparer-start\" name=\"${kendo.htmlEncode(data.messages.validationDialog.labels.start)}\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.start)}\" class=\"k-input-inner\" data-${kendo.htmlEncode(data.ns)}bind=\"value: from, enabled: isDate\" required=\"required\" /></span></div>\n                    <div data-${kendo.htmlEncode(data.ns)}bind=\"visible: showTo\">\n                    <div class=\"k-edit-label\"><label for=\"date-comparer-end\">${kendo.htmlEncode(data.messages.validationDialog.labels.end)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"date-comparer-end\" name=\"${kendo.htmlEncode(data.messages.validationDialog.labels.end)}\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.end)}\" class=\"k-input-inner\" data-${kendo.htmlEncode(data.ns)}bind=\"value: to, enabled: showToForDate\" required=\"required\" /></span></div>\n                    </div></div><div data-${kendo.htmlEncode(data.ns)}bind=\"visible: isCustom\">\n                    <div class=\"k-edit-label\"><label for=\"custom-comparer-value\">${kendo.htmlEncode(data.messages.validationDialog.labels.value)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"custom-comparer-value\" name=\"${kendo.htmlEncode(data.messages.validationDialog.labels.value)}\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.value)}\" class=\"k-input-inner\" data-${kendo.htmlEncode(data.ns)}bind=\"value: from, enabled: isCustom\" required=\"required\" /></span></div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"visible: isList\">\n                    <div class=\"k-edit-label\"><label for=\"list-comparer-value\">${kendo.htmlEncode(data.messages.validationDialog.labels.value)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"list-comparer-value\" name=\"${kendo.htmlEncode(data.messages.validationDialog.labels.value)}\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.value)}\" class=\"k-input-inner\" data-${kendo.htmlEncode(data.ns)}bind=\"value: from, enabled: isList\" required=\"required\" /></span></div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"visible: isList\">\n                    <div class=\"k-edit-field\"><input type=\"checkbox\" name=\"showButton\" id=\"listShowButton\" class=\"k-checkbox k-checkbox-md k-rounded-md\" data-${kendo.htmlEncode(data.ns)}bind=\"checked: showButton\" /><label for=\"listShowButton\" class=\"k-checkbox-label\"> ${kendo.htmlEncode(data.messages.validationDialog.labels.showListButton)}</label></div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"visible: isDate\">\n                    <div class=\"k-edit-field\"><input type=\"checkbox\" name=\"showButton\" id=\"dateShowButton\" class=\"k-checkbox k-checkbox-md k-rounded-md\" data-${kendo.htmlEncode(data.ns)}bind=\"checked: showButton\" /><label for=\"dateShowButton\" class=\"k-checkbox-label\"> ${kendo.htmlEncode(data.messages.validationDialog.labels.showCalendarButton)}</label></div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"invisible: isAny\">\n                    <div class=\"k-edit-field\"><input type=\"checkbox\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.ignoreBlank)}\" name=\"ignoreBlank\" id=\"ignoreBlank\" class=\"k-checkbox k-checkbox-md k-rounded-md\" data-${kendo.htmlEncode(data.ns)}bind=\"checked: ignoreBlank\" /><label for=\"ignoreBlank\" class=\"k-checkbox-label\"> ${kendo.htmlEncode(data.messages.validationDialog.labels.ignoreBlank)}</label></div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"invisible: isAny\">\n                    <div class=\"k-hr\"></div>\n                    <div class=\"k-edit-label\"><label>${kendo.htmlEncode(data.messages.validationDialog.labels.onInvalidData)}:</label></div>\n                    <div class=\"k-edit-field\"><input type=\"radio\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.rejectInput)}\" id=\"validationTypeReject\" name=\"validationType\" value=\"reject\" data-${kendo.htmlEncode(data.ns)}bind=\"checked: type\" class=\"k-radio k-radio-md\" /><label for=\"validationTypeReject\" class=\"k-radio-label\">${kendo.htmlEncode(data.messages.validationDialog.labels.rejectInput)}</label> <input type=\"radio\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.showWarning)}\" id=\"validationTypeWarning\" name=\"validationType\" value=\"warning\" data-${kendo.htmlEncode(data.ns)}bind=\"checked: type\" class=\"k-radio k-radio-md\" /><label for=\"validationTypeWarning\" class=\"k-radio-label\">${kendo.htmlEncode(data.messages.validationDialog.labels.showWarning)}</label></div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"invisible: isAny\" class=\"hint-wrapper\">\n                    <div class=\"k-edit-field\"><input type=\"checkbox\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.showHint)}\" name=\"useCustomMessages\" id=\"useCustomMessages\" class=\"k-checkbox k-checkbox-md k-rounded-md\" data-${kendo.htmlEncode(data.ns)}bind=\"checked: useCustomMessages\" /><label class=\"k-checkbox-label\" for=\"useCustomMessages\"> ${kendo.htmlEncode(data.messages.validationDialog.labels.showHint)}</label></div>\n                    <div data-${kendo.htmlEncode(data.ns)}bind=\"visible: useCustomMessages\">\n                    <div class=\"k-edit-label\"><label for=\"hint-title\">${kendo.htmlEncode(data.messages.validationDialog.labels.hintTitle)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"hint-title\" name=\"hint-title\" class=\"k-input-inner\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.hintTitle)}\" placeholder=\"${kendo.htmlEncode(data.messages.validationDialog.placeholders.typeTitle)}\" data-${kendo.htmlEncode(data.ns)}bind=\"value: hintTitle\" /></span></div>\n                    <div class=\"k-edit-label\"><label for=\"hint-message\">${kendo.htmlEncode(data.messages.validationDialog.labels.hintMessage)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"hint-message\" class=\"k-input-inner\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.hintMessage)}\" placeholder=\"${kendo.htmlEncode(data.messages.validationDialog.placeholders.typeMessage)}\" data-${kendo.htmlEncode(data.ns)}bind=\"value: hintMessage\" /></span></div>\n                    </div></div>\n                    <div class=\"k-actions\"><button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\" data-${kendo.htmlEncode(data.ns)}bind=\"visible: showRemove, click: remove\"><span class=\"k-button-text\">${kendo.htmlEncode(data.messages.remove)}</span></button><button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary\" data-${kendo.htmlEncode(data.ns)}bind=\"click: apply\"><span class=\"k-button-text\">${kendo.htmlEncode(data.messages.apply)}</span></button><button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\" data-${kendo.htmlEncode(data.ns)}bind=\"click: close\"><span class=\"k-button-text\">${kendo.htmlEncode(data.messages.cancel)}</span></button></div>\n                    </div>`;\n                    return $kendoOutput;\n                }\n            },\n            open: function(range) {\n                var options = this.options;\n                var element;\n\n                this.viewModel = new ValidationViewModel({\n                    type: options.type,\n                    defaultHintMessage: options.hintMessage,\n                    defaultHintTitle: options.hintTitle,\n                    defaultComparers: options.comparers.slice(0),\n                    comparerMessages: options.comparerMessages,\n                    criteria: options.criteria.slice(0),\n                    criterion: options.criterion,\n                    ignoreBlank: options.ignoreBlank,\n                    showButton: options.showButton,\n                    apply: this.apply.bind(this),\n                    close: this.close.bind(this),\n                    remove: this.remove.bind(this)\n                });\n\n                this.viewModel.update(range.validation());\n\n                SpreadsheetDialog.fn.open.call(this);\n\n                element = this.dialog().element;\n\n                if (this.validatable) {\n                    this.validatable.destroy();\n                }\n\n                kendo.bind(element, this.viewModel);\n\n                this.validatable = new kendo.ui.Validator(element.find(\".k-edit-form-container\"), {\n                    validateOnBlur: false,\n                    errorTemplate: this.options.errorTemplate || undefined\n                });\n            },\n            apply: function() {\n\n                if (this.validatable.validate()) {\n                    SpreadsheetDialog.fn.apply.call(this);\n\n                    this.trigger(\"action\", {\n                        command: \"EditValidationCommand\",\n                        options: {\n                            value: this.viewModel.toValidationObject()\n                        }\n                    });\n                }\n            },\n            remove: function() {\n                this.viewModel.set(\"criterion\", \"any\");\n                this.apply();\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"validation\", ValidationDialog);\n        kendo.spreadsheet.dialogs.ValidationDialog = ValidationDialog;\n\n        function PDF_PAPER_SIZE(size) {\n            return {\n                value: size,\n                text: TEXT(\"exportAsDialog.pdf.paper.\" + size)\n            };\n        }\n\n        var ExportAsDialog = SpreadsheetDialog.extend({\n            init: function(options) {\n                SpreadsheetDialog.fn.init.call(this, options);\n                options = this.options;\n\n                this.viewModel = kendo.observable({\n                    title: options.title,\n                    name: options.name,\n                    extension: options.extension,\n                    fileFormats:options.fileFormats,\n                    excel: options.excelExport,\n                    pdf: {\n                        proxyURL: options.pdfExport.proxyURL,\n                        forceProxy: options.pdfExport.forceProxy,\n                        title: options.pdfExport.title,\n                        author: options.pdfExport.author,\n                        autoPrint: options.pdfExport.autoPrint,\n                        subject: options.pdfExport.subject,\n                        keywords: options.pdfExport.keywords,\n                        creator: options.pdfExport.creator,\n                        date: options.pdfExport.date,\n\n                        fitWidth: options.pdf.fitWidth,\n                        area: options.pdf.area,\n                        areas: options.pdf.areas,\n                        paperSize: options.pdf.paperSize,\n                        paperSizes: options.pdf.paperSizes,\n                        margin: options.pdf.margin,\n                        margins: options.pdf.margins,\n                        landscape: options.pdf.landscape,\n                        guidelines: options.pdf.guidelines,\n                        hCenter: options.pdf.hCenter,\n                        vCenter: options.pdf.vCenter\n                    },\n                    apply: this.apply.bind(this),\n                    close: this.close.bind(this)\n                });\n\n                var dialog = this.dialog();\n                this.viewModel.bind(\"change\", function(e) {\n                    if (e.field === \"extension\") {\n                        this.set(\"showPdfOptions\", this.extension === \".pdf\" ? true : false);\n                        dialog.center();\n                    }\n                });\n\n                kendo.bind(dialog.element, this.viewModel);\n            },\n            options: {\n                title: TEXT(\"exportAsDialog.title\", \"Export...\"),\n                name: TEXT(\"exportAsDialog.defaultFileName\", \"Workbook\"),\n                extension: \".xlsx\",\n                fileFormats: [{\n                    description: TEXT(\"exportAsDialog.xlsx.description\", \"Excel Workbook (.xlsx)\"),\n                    extension: \".xlsx\"\n                }, {\n                    description: TEXT(\"exportAsDialog.pdf.description\", \"Portable Document Format (.pdf)\"),\n                    extension: \".pdf\"\n                }],\n                pdf: {\n                    fitWidth: true,\n                    area: \"workbook\",\n                    areas: [{\n                        area: \"workbook\",\n                        text: TEXT(\"exportAsDialog.pdf.area.workbook\", \"Entire Workbook\")\n                    },{\n                        area: \"sheet\",\n                        text: TEXT(\"exportAsDialog.pdf.area.sheet\", \"Active Sheet\")\n                    },{\n                        area: \"selection\",\n                        text: TEXT(\"exportAsDialog.pdf.area.selection\", \"Selection\")\n                    }],\n                    paperSize: \"a4\",\n                    paperSizes: [\n                        \"a2\", \"a3\", \"a4\", \"a5\", \"b3\", \"b4\", \"b5\", \"folio\", \"legal\", \"letter\", \"tabloid\", \"executive\"\n                    ].map(PDF_PAPER_SIZE),\n                    margin: {bottom: \"0.75in\", left: \"0.7in\", right: \"0.7in\", top: \"0.75in\"},\n                    margins: [\n                        { value: { bottom: \"0.75in\", left: \"0.7in\", right: \"0.7in\", top: \"0.75in\" },\n                          text: TEXT(\"exportAsDialog.pdf.margin.normal\", \"Normal\")\n                        },\n                        { value: { bottom: \"0.75in\", left: \"0.25in\", right: \"0.25in\", top: \"0.75in\" },\n                          text: TEXT(\"exportAsDialog.pdf.margin.narrow\", \"Narrow\")\n                        },\n                        { value: { bottom: \"1in\", left: \"1in\", right: \"1in\", top: \"1in\" },\n                          text: TEXT(\"exportAsDialog.pdf.margin.wide\", \"Wide\")\n                        }\n                    ],\n                    landscape: true,\n                    guidelines: true,\n                    hCenter: true,\n                    vCenter: true\n                },\n                width: 520,\n                template: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `<div class='k-edit-label'><label id='name-label'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.fileName)}:</label></div>\n                    <div class='k-edit-field'><span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input aria-labelledby='name-label' class='k-input-inner' data-${kendo.htmlEncode(data.ns)}bind='value: name' /></span></div>\n                    <div >\n                       <div class='k-edit-label'><label id='file-format-label'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.saveAsType)}:</label></div>\n                       <div class='k-edit-field'><select aria-labelledby='file-format-label' data-${kendo.htmlEncode(data.ns)}role='dropdownlist' class='k-file-format' data-${kendo.htmlEncode(data.ns)}text-field='description' data-${kendo.htmlEncode(data.ns)}value-field='extension' data-${kendo.htmlEncode(data.ns)}bind='value: extension, source: fileFormats'></select></div>\n                    </div>\n                    <div class='k-export-config' data-${kendo.htmlEncode(data.ns)}bind='visible: showPdfOptions'>\n                    <hr class='k-hr' />\n                    <div class='k-edit-label'><label id='export-area-label'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.exportArea)}:</label></div>\n                    <div class='k-edit-field'><select aria-labelledby='export-area-label' data-${kendo.htmlEncode(data.ns)}role='dropdownlist' class='k-file-format' data-${kendo.htmlEncode(data.ns)}text-field='text' data-${kendo.htmlEncode(data.ns)}value-field='area' data-${kendo.htmlEncode(data.ns)}bind='value: pdf.area, source: pdf.areas'></select></div>\n                    <div class='k-edit-label'><label id='paper-size-label'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.paperSize)}:</label></div>\n                    <div class='k-edit-field'><select aria-labelledby='paper-size-label' data-${kendo.htmlEncode(data.ns)}role='dropdownlist' class='k-file-format' data-${kendo.htmlEncode(data.ns)}text-field='text' data-${kendo.htmlEncode(data.ns)}value-field='value' data-${kendo.htmlEncode(data.ns)}bind='value: pdf.paperSize, source: pdf.paperSizes'></select></div>\n                    <div class='k-edit-label'><label id='margins-label'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.margins)}:</label></div>\n                    <div class='k-edit-field'><select aria-labelledby='margins-label' data-${kendo.htmlEncode(data.ns)}role='dropdownlist' class='k-file-format' data-${kendo.htmlEncode(data.ns)}value-primitive='true'data-${kendo.htmlEncode(data.ns)}text-field='text' data-${kendo.htmlEncode(data.ns)}value-field='value' data-${kendo.htmlEncode(data.ns)}bind='value: pdf.margin, source: pdf.margins'></select></div>\n                    <div class='k-edit-label'><label>${kendo.htmlEncode(data.messages.exportAsDialog.labels.orientation)}:</label></div>\n                    <div class='k-edit-field'>\n                       <div class='k-button-group'>\n                          <input type='radio' id='k-orientation-portrait' aria-label='orientation portrait' name='orientation' data-${kendo.htmlEncode(data.ns)}type='boolean' data-${kendo.htmlEncode(data.ns)}bind='checked: pdf.landscape' value='false' />\n                          <label class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button k-group-start k-orientation-button' for='k-orientation-portrait'>\n                          ${kendo.ui.icon({ icon: \"file\", iconClass: \"k-button-icon\" })}\n                          </label>\n                          <input type='radio' id='k-orientation-landscape' aria-label='orientation landscape' name='orientation' data-${kendo.htmlEncode(data.ns)}type='boolean' data-${kendo.htmlEncode(data.ns)}bind='checked: pdf.landscape' value='true' />\n                          <label class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button k-group-end k-orientation-button' for='k-orientation-landscape'>\n                          ${kendo.ui.icon({ icon: \"file-horizontal\", iconClass: \"k-button-icon\" })}\n                          </label>\n                       </div>\n                    </div>\n                    <div class='k-edit-label'><label>${kendo.htmlEncode(data.messages.exportAsDialog.labels.print)}:</label></div>\n                    <div class='k-edit-field'><input class='k-checkbox k-checkbox-md k-rounded-md' id='guidelines' type='checkbox' data-${kendo.htmlEncode(data.ns)}bind='checked: pdf.guidelines'/><label class='k-checkbox-label' for='guidelines'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.guidelines)}</label></div>\n                    <div class='k-edit-label'><label>${kendo.htmlEncode(data.messages.exportAsDialog.labels.scale)}:</label></div>\n                    <div class='k-edit-field'><input class='k-checkbox k-checkbox-md k-rounded-md' id='fitWidth' type='checkbox' data-${kendo.htmlEncode(data.ns)}bind='checked: pdf.fitWidth'/><label class='k-checkbox-label' for='fitWidth'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.fit)}</label></div>\n                    <div class='k-edit-label'><label>${kendo.htmlEncode(data.messages.exportAsDialog.labels.center)}:</label></div>\n                    <div class='k-edit-field'><input class='k-checkbox k-checkbox-md k-rounded-md' id='hCenter' type='checkbox' data-${kendo.htmlEncode(data.ns)}bind='checked: pdf.hCenter'/><label class='k-checkbox-label' for='hCenter'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.horizontally)}</label><input class='k-checkbox k-checkbox-md k-rounded-md' id='vCenter' type='checkbox' data-${kendo.htmlEncode(data.ns)}bind='checked: pdf.vCenter'/><label class='k-checkbox-label' for='vCenter'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.vertically)}</label></div>\n                    <div class='k-page-orientation'>\n                       ${kendo.ui.icon($(`<span data-${data.ns}bind='invisible: pdf.landscape'></span>`), { icon: \"file\" })}\n                       ${kendo.ui.icon($(`<span data-${data.ns}bind='visible: pdf.landscape'></span>`), { icon: \"file-horizontal\" })}\n                    </div>\n                    </div>\n                    <div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary' data-${kendo.htmlEncode(data.ns)}bind='click: apply'><span class='k-button-text'>${kendo.htmlEncode(data.messages.save)}</span></button><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base' data-${kendo.htmlEncode(data.ns)}bind='click: close'><span class='k-button-text'>${kendo.htmlEncode(data.messages.cancel)}</span></button></div>`;\n                    return $kendoOutput;\n                }\n            },\n            apply: function() {\n                SpreadsheetDialog.fn.apply.call(this);\n\n                this.trigger(\"action\", {\n                    command: \"SaveAsCommand\",\n                    options: this.viewModel\n                });\n            }\n        });\n        kendo.spreadsheet.dialogs.register(\"exportAs\", ExportAsDialog);\n\n        function basicErrorDialog(id, msg) {\n            kendo.spreadsheet.dialogs.register(\n                id,\n                MessageDialog.extend({\n                    options: { messageId: msg }\n                })\n            );\n        }\n\n        basicErrorDialog(\"modifyMerged\", \"modifyMergedDialog.errorMessage\");\n        basicErrorDialog(\"rangeDisabled\", \"rangeDisabledDialog.errorMessage\");\n        basicErrorDialog(\"intersectsArray\", \"intersectsArrayDialog.errorMessage\");\n        basicErrorDialog(\"overflow\", \"overflowDialog.errorMessage\");\n        basicErrorDialog(\"unsupportedSelection\", \"unsupportedSelectionDialog.errorMessage\");\n        basicErrorDialog(\"incompatibleRanges\", \"incompatibleRangesDialog.errorMessage\");\n        basicErrorDialog(\"noFillDirection\", \"noFillDirectionDialog.errorMessage\");\n        basicErrorDialog(\"duplicateSheetName\", \"duplicateSheetNameDialog.errorMessage\");\n\n        var ImportErrorDialog = MessageDialog.extend({\n            options: {\n                width: 640,\n                title: \"Errors in import\",\n                template: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `<div class='k-spreadsheet-message-content k-spreadsheet-import-errors'><div class='k--header-message'>We encountered ${data.errors.length} errors while reading this file.  Please be aware that some formulas might be missing, or contain invalid results.</div><div class='k--errors'><table><thead><tr><th>Context</th><th>Error message</th></tr></thead>`;\n                    for (let i = 0; i < errors.length; ++i) {\n                        $kendoOutput += ``; let err = errors[i];;\n                        $kendoOutput += `<tr><td>${kendo.htmlEncode(err.context)}</td><td>${kendo.htmlEncode(err.error)}</td></tr>`;\n                    }\n                    $kendoOutput += `</table></div></div><div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary' data-${kendo.htmlEncode(data.ns)}bind='click: close'><span class='k-button-text'>${kendo.htmlEncode(data.messages.okText)}</span></button></div>`;\n                    return $kendoOutput;\n                }\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"importError\", ImportErrorDialog);\n\n        var UseKeyboardDialog = MessageDialog.extend({\n            options: {\n                title: TEXT(\"useKeyboardDialog.title\", \"Copying and pasting\"),\n                template: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `${kendo.htmlEncode(data.messages.useKeyboardDialog.errorMessage)}\n                <div>Ctrl+C ${kendo.htmlEncode(data.messages.useKeyboardDialog.labels.forCopy)}</div>\n                <div>Ctrl+X ${kendo.htmlEncode(data.messages.useKeyboardDialog.labels.forCut)}</div>\n                <div>Ctrl+V ${kendo.htmlEncode(data.messages.useKeyboardDialog.labels.forPaste)}</div>\n                <div class=\"k-actions\"><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n                        data-${kendo.htmlEncode(data.ns)}bind='click: close'><span\n                            class='k-button-text'>${data.messages.okText}</span></button></div>`;\n                    return $kendoOutput;\n                }\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"useKeyboard\", UseKeyboardDialog);\n\n        var HyperlinkDialog = SpreadsheetDialog.extend({\n            options: {\n                title: TEXT(\"linkDialog.title\", \"Hyperlink\"),\n                template: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `<div class='k-edit-label'><label id='url-label'>${kendo.htmlEncode(data.messages.linkDialog.labels.url)}:</label></div>\n<div class='k-edit-field'><span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input\n            class='k-input-inner' data-${kendo.htmlEncode(data.ns)}bind='value: url'\n            title='${kendo.htmlEncode(data.messages.linkDialog.labels.url)}' aria-labelledby='url-label' /></span></div>\n<div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-left'\n        data-${kendo.htmlEncode(data.ns)}bind='click: remove'><span\n            class='k-button-text'>${data.messages.linkDialog.labels.removeLink}</span></button><button\n        class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n        data-${kendo.htmlEncode(data.ns)}bind='click: apply'><span\n            class='k-button-text'>${data.messages.okText}</span></button><button\n        class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'\n        data-${kendo.htmlEncode(data.ns)}bind='click: cancel'><span\n            class='k-button-text'>${data.messages.cancel}</span></button></div>`;\n                    return $kendoOutput;\n                },\n                autoFocus: false\n            },\n            open: function(range) {\n                var self = this;\n                SpreadsheetDialog.fn.open.apply(self, arguments);\n                var element = self.dialog().element;\n                var model = kendo.observable({\n                    url: range.link(),\n                    apply: function() {\n                        if (!/\\S/.test(model.url)) {\n                            model.url = null;\n                        }\n                        self.trigger(\"action\", {\n                            command: \"HyperlinkCommand\",\n                            options: {\n                                link: model.url\n                            }\n                        });\n                        self.close();\n                    },\n                    remove: function() {\n                        model.url = null;\n                        model.apply();\n                    },\n                    cancel: self.close.bind(self)\n                });\n                kendo.bind(element, model);\n\n                // it would be nice if we could easily handle that in one\n                // place for all dialogs, but it doesn't seem easily\n                // doable.\n                element.find(\"input\")\n                    .trigger(\"focus\")\n                    .on(\"keydown\", function(ev){\n                        if (ev.keyCode == 13 /*ENTER*/) {\n                            model.url = $(this).val(); // there won't be a \"change\" event and the model wouldn't update :-\\\n                            ev.stopPropagation();\n                            ev.preventDefault();\n                            model.apply();\n                        } else if (ev.keyCode == 27 /*ESC*/) {\n                            ev.stopPropagation();\n                            ev.preventDefault();\n                            model.cancel();\n                        }\n                    });\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"hyperlink\", HyperlinkDialog);\n\n        var SheetRenameDialog = SpreadsheetDialog.extend({\n            options: {\n                title: TEXT(\"sheetRenameDialog.title\", \"Rename Sheet\"),\n                template: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `<div class='k-edit-label'><label id='sheet-name-label'>${kendo.htmlEncode(data.messages.sheetRenameDialog.labels.text)}:</label></div>\n<div class='k-edit-field'><span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input\n            class='k-input-inner' data-${kendo.htmlEncode(data.ns)}bind='value: sheetName'\n            title='${kendo.htmlEncode(data.messages.sheetRenameDialog.labels.text)}' aria-labelledby='sheet-name-label' /></span></div>\n<div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n        data-${kendo.htmlEncode(data.ns)}bind='click: apply'><span\n            class='k-button-text'>${data.messages.sheetRenameDialog.labels.rename}</span></button><button\n        class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'\n        data-${kendo.htmlEncode(data.ns)}bind='click: cancel'><span\n            class='k-button-text'>${data.messages.cancel}</span></button></div>`;\n                    return $kendoOutput;\n                },\n                autoFocus: false\n            },\n            open: function(range, args) {\n                let sheet = range.sheet();\n                let self = this;\n                SpreadsheetDialog.fn.open.apply(self, arguments);\n                let element = self.dialog().element;\n                let model = kendo.observable({\n                    sheetName: args?._oldSheetName || sheet.name(),\n                    apply: function() {\n                        self._newSheetName = model.sheetName;\n                        self.close();\n                    },\n                    cancel: self.close.bind(self)\n                });\n                kendo.bind(element, model);\n\n                element.find(\"input\")\n                    .trigger(\"focus\")\n                    .on(\"keydown\", function(ev){\n                        if (ev.keyCode == 13 /*ENTER*/) {\n                            model.sheetName = $(this).val();\n                            ev.stopPropagation();\n                            ev.preventDefault();\n                            model.apply();\n                        } else if (ev.keyCode == 27 /*ESC*/) {\n                            ev.stopPropagation();\n                            ev.preventDefault();\n                            model.cancel();\n                        }\n                    });\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"renameSheet\", SheetRenameDialog);\n\n        var InsertCommentDialog = SpreadsheetDialog.extend({\n            options: {\n                className: \"k-spreadsheet-insert-comment\",\n                template: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `<div class='k-edit-label'><label id='comment-label'>${kendo.htmlEncode(data.messages.insertCommentDialog.labels.comment)}:</label></div>\n                <div class='k-edit-field'><span class='k-input k-textarea k-input-solid k-input-md k-rounded-md'><textarea\n                    aria-labelledby='comment-label' rows='5' class='k-input-inner'\n                    data-${kendo.htmlEncode(data.ns)}bind='value: comment'></textarea></span></div>\n                <div class='k-actions'> <button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-left'\n                    data-${kendo.htmlEncode(data.ns)}bind='click: remove'><span\n                    class='k-button-text'>${kendo.htmlEncode(data.messages.insertCommentDialog.labels.removeComment)}</span></button>\n                <button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n                    data-${kendo.htmlEncode(data.ns)}bind='click: apply'><span\n                    class='k-button-text'>${kendo.htmlEncode(data.messages.okText)}</span></button> <button\n                    class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'\n                    data-${kendo.htmlEncode(data.ns)}bind='click: cancel'><span\n                    class='k-button-text'>${data.messages.cancel}</span></button></div>`;\n                    return $kendoOutput;\n                },\n                title: TEXT(\"insertCommentDialog.title\", \"Insert comment\"),\n                autoFocus: false,\n                width: 450\n            },\n            open: function(range) {\n                var self = this;\n                SpreadsheetDialog.fn.open.apply(self, arguments);\n                var element = self.dialog().element;\n                var model = kendo.observable({\n                    comment: range.comment(),\n                    apply: function() {\n                        if (!/\\S/.test(model.comment)) {\n                            model.comment = null;\n                        }\n                        self.trigger(\"action\", {\n                            command: \"InsertCommentCommand\",\n                            options: {\n                                value: model.comment\n                            }\n                        });\n                        self.close();\n                    },\n                    remove: function() {\n                        model.comment = null;\n                        model.apply();\n                    },\n                    cancel: self.close.bind(self)\n                });\n                kendo.bind(element, model);\n\n                element.find(\"textarea\").trigger(\"focus\");\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"insertComment\", InsertCommentDialog);\n\n        var InsertImageDialog = SpreadsheetDialog.extend({\n            options: {\n                template: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `<div class='k-spreadsheet-insert-image-dialog'> <label\n        data-${kendo.htmlEncode(data.ns)}bind='style: { background-image: imageUrl }, css: { k-spreadsheet-has-image: hasImage, k-hover: isHovered }, events: { dragenter: dragEnter, dragover: stopEvent, dragleave: dragLeave, drop: drop }'>\n        <div data-${kendo.htmlEncode(data.ns)}bind='text: info'></div>\n        <input type='file' data-${kendo.htmlEncode(data.ns)}bind='events: { change: change }'\n            accept='image/png, image/jpeg, image/gif' />\n    </label></div>\n<div class='k-actions'> <button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n        data-${kendo.htmlEncode(data.ns)}bind='enabled: okEnabled, click: apply'><span\n            class='k-button-text'>${kendo.htmlEncode(data.messages.okText)}</span></button> <button\n        class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'\n        data-${kendo.htmlEncode(data.ns)}bind='click: cancel'><span\n            class='k-button-text'>${data.messages.cancel}</span></button></div>`;\n                    return $kendoOutput;\n                },\n                title: TEXT(\"insertImageDialog.title\", \"Insert image\"),\n                width: \"auto\"\n            },\n            open: function() {\n                var self = this;\n                SpreadsheetDialog.fn.open.apply(self, arguments);\n                var element = self.dialog().element;\n                var model = kendo.observable({\n                    okEnabled: false,\n                    info: kendo.spreadsheet.messages.dialogs.insertImageDialog.info,\n                    imageUrl: \"\",\n                    hasImage: false,\n                    isHovered: false,\n                    _url: null,\n                    _image: null,\n                    apply: function() {\n                        window.URL.revokeObjectURL(model._url);\n                        self.trigger(\"action\", {\n                            command: \"InsertImageCommand\",\n                            options: {\n                                blob   : model._image,\n                                width  : model._width,\n                                height : model._height\n                            }\n                        });\n                        self.close();\n                    },\n                    cancel: self.close.bind(self),\n                    stopEvent: function(ev) {\n                        ev.stopPropagation();\n                        ev.preventDefault();\n                    },\n                    drop: function(ev) {\n                        model.stopEvent(ev);\n                        model.selectFile(ev.originalEvent.dataTransfer.files);\n                        model.set(\"isHovered\", false);\n                    },\n                    dragEnter: function(ev) {\n                        model.stopEvent(ev);\n                        model.set(\"isHovered\", true);\n                    },\n                    dragLeave: function(ev) {\n                        model.stopEvent(ev);\n                        model.set(\"isHovered\", false);\n                    },\n                    change: function(ev) {\n                        model.selectFile(ev.target.files);\n                    },\n                    selectFile: function(files) {\n                        var image;\n                        for (var i = 0; i < files.length; ++i) {\n                            if (/^image\\//i.test(files[i].type)) {\n                                image = files[i];\n                                break;\n                            }\n                        }\n                        if (model._url) {\n                            window.URL.revokeObjectURL(model._url);\n                        }\n                        if (image) {\n                            model._image = image;\n                            model._url = window.URL.createObjectURL(image);\n                            var img = new Image();\n                            img.src = model._url;\n                            img.onload = function() {\n                                model._width = img.width;\n                                model._height = img.height;\n                                model.set(\"info\", kendo.spreadsheet.messages.dialogs.insertImageDialog.info);\n                                model.set(\"okEnabled\", true);\n                                model.set(\"imageUrl\", \"url('\" + model._url + \"')\");\n                                model.set(\"hasImage\", true);\n                            };\n                        } else {\n                            model._image = null;\n                            model.set(\"info\", kendo.spreadsheet.messages.dialogs.insertImageDialog.typeError);\n                            model.set(\"okEnabled\", false);\n                            model.set(\"imageUrl\", \"\");\n                            model.set(\"hasImage\", false);\n                        }\n                    }\n                });\n                kendo.bind(element, model);\n            }\n        });\n\n        kendo.spreadsheet.dialogs.register(\"insertImage\", InsertImageDialog);\n\n        function Localizable(path, def) {\n            this.path = path.split(\".\");\n            this.def = def;\n        }\n\n        Localizable.prototype.trans = function() {\n            var msg = kendo.spreadsheet.messages.dialogs;\n            for (var i = 0; i < this.path.length; ++i) {\n                msg = msg[this.path[i]];\n                if (!msg) {\n                    return this.def;\n                }\n            }\n            return msg;\n        };\n\n        function TEXT(path, def) {\n            return new Localizable(path, def);\n        }\n\n        function translate(thing) {\n            if (thing instanceof Localizable) {\n                return thing.trans();\n            }\n            else if (Array.isArray(thing)) {\n                return thing.map(translate);\n            }\n            else if (thing != null && typeof thing == \"object\") {\n                return Object.keys(thing).reduce(function(ret, key){\n                    ret[key] = translate(thing[key]);\n                    return ret;\n                }, {});\n            }\n            return thing;\n        }\n\n    })(window.kendo);\n\n    (function(kendo) {\n\n            var $ = kendo.jQuery;\n            var BORDER_TYPES = [\n                \"allBorders\",\n                \"insideBorders\",\n                \"insideHorizontalBorders\",\n                \"insideVerticalBorders\",\n                \"outsideBorders\",\n                \"leftBorder\",\n                \"topBorder\",\n                \"rightBorder\",\n                \"bottomBorder\",\n                \"noBorders\"\n            ];\n            var BORDER_TYPES_ICONS = {\n               allBorders: \"bordersAll\",\n               insideBorders: \"bordersInside\",\n               insideHorizontalBorders: \"bordersInsideHorizontal\",\n               insideVerticalBorders: \"bordersInsideVertical\",\n               outsideBorders: \"bordersOutside\",\n               leftBorder: \"borderLeft\",\n               topBorder: \"borderTop\",\n               rightBorder: \"borderRight\",\n               bottomBorder: \"borderBottom\",\n               noBorders: \"bordersNone\"\n            };\n\n            var BORDER_PALETTE_MESSAGES = kendo.spreadsheet.messages.borderPalette = {\n                allBorders: \"All borders\",\n                insideBorders: \"Inside borders\",\n                insideHorizontalBorders: \"Inside horizontal borders\",\n                insideVerticalBorders: \"Inside vertical borders\",\n                outsideBorders: \"Outside borders\",\n                leftBorder: \"Left border\",\n                topBorder: \"Top border\",\n                rightBorder: \"Right border\",\n                bottomBorder: \"Bottom border\",\n                noBorders: \"No border\"\n            };\n\n            var colorPickerPalette = [ //metro palette\n                \"#ffffff\", \"#000000\", \"#d6ecff\", \"#4e5b6f\", \"#7fd13b\", \"#ea157a\", \"#feb80a\", \"#00addc\", \"#738ac8\", \"#1ab39f\",\n                \"#f2f2f2\", \"#7f7f7f\", \"#a7d6ff\", \"#d9dde4\", \"#e5f5d7\", \"#fad0e4\", \"#fef0cd\", \"#c5f2ff\", \"#e2e7f4\", \"#c9f7f1\",\n                \"#d8d8d8\", \"#595959\", \"#60b5ff\", \"#b3bcca\", \"#cbecb0\", \"#f6a1c9\", \"#fee29c\", \"#8be6ff\", \"#c7d0e9\", \"#94efe3\",\n                \"#bfbfbf\", \"#3f3f3f\", \"#007dea\", \"#8d9baf\", \"#b2e389\", \"#f272af\", \"#fed46b\", \"#51d9ff\", \"#aab8de\", \"#5fe7d5\",\n                \"#a5a5a5\", \"#262626\", \"#003e75\", \"#3a4453\", \"#5ea226\", \"#af0f5b\", \"#c58c00\", \"#0081a5\", \"#425ea9\", \"#138677\",\n                \"#7f7f7f\", \"#0c0c0c\", \"#00192e\", \"#272d37\", \"#3f6c19\", \"#750a3d\", \"#835d00\", \"#00566e\", \"#2c3f71\", \"#0c594f\"\n            ];\n\n            var BorderPalette = kendo.ui.Widget.extend({\n                init: function(element, options) {\n                    kendo.ui.Widget.call(this, element, options);\n\n                    this.element = element;\n                    this.color = \"#000\";\n\n                    this.element.addClass(\"k-spreadsheet-popup\");\n\n                    this._borderTypePalette();\n                    this._borderColorPalette();\n                },\n\n                options: {\n                    name: \"BorderPalette\"\n                },\n\n                events: [\n                    \"change\"\n                ],\n\n                destroy: function() {\n                    this.colorChooser.destroy();\n                    kendo.destroy(this.element.find(\".k-spreadsheet-border-type-palette\"));\n                },\n\n                value: function() {\n                    return { type: this.type, color: this.color };\n                },\n\n                _borderTypePalette: function() {\n                    var that = this;\n                    var messages = BORDER_PALETTE_MESSAGES;\n\n                    var element = $(\"<div />\", {\n                        \"class\": \"k-spreadsheet-border-type-palette\"\n                    });\n\n                    $('<span class=\"k-column-menu-group-header\"><span class=\"k-column-menu-group-header-text\">Border type</span></span>').appendTo(this.element);\n\n                    element.appendTo(this.element);\n\n                    BORDER_TYPES.map(function(type) {\n                        $('<button title=\"' + messages[type] + '\" aria-label=\"' + messages[type] + '\" data-border-type=\"' + type + '\">')\n                            .appendTo(element)\n                            .kendoToggleButton({\n                                icon: kendo.toHyphens(BORDER_TYPES_ICONS[type]),\n                                toggle: that._toggle.bind(that)\n                            });\n                    });\n                },\n\n                _borderColorPalette: function() {\n                    var element = $(\"<div />\", {\n                        \"class\": \"k-spreadsheet-border-color-palette\"\n                    });\n\n                    $('<span class=\"k-column-menu-group-header\"><span class=\"k-column-menu-group-header-text\">Border color</span></span>').appendTo(this.element);\n                    element.appendTo(this.element);\n\n                    this.colorChooser = new kendo.ui.FlatColorPicker(element, {\n                        buttons: !this.options.change,\n                        color: this.color,\n                        view: \"palette\",\n                        palette: colorPickerPalette,\n                        input: false,\n                        change: this._change.bind(this)\n                    });\n\n                    this.colorChooser.wrapper.find(\".k-coloreditor-apply\").on(\"click\", this._apply.bind(this));\n                    this.colorChooser.wrapper.find(\".k-coloreditor-cancel\").on(\"click\", this._cancel.bind(this));\n                },\n\n                _change: function() {\n                    this.color = this.colorChooser.value();\n                },\n\n                _toggle: function(e) {\n                    var type = e.target.data(\"borderType\"),\n                        previous = e.target.siblings(\".k-selected\").data(\"kendoToggleButton\");\n\n                    if (e.checked === true) {\n                        if (previous) {\n                            previous.toggle(false);\n                        }\n\n                        this.type = type;\n                    } else {\n                        this.type = null;\n                    }\n                },\n\n                _apply: function() {\n                    this.trigger(\"change\", { type: this.type, color: this.color });\n                },\n\n                _cancel: function() {\n                    this.trigger(\"change\", { type: null, color: null });\n                }\n            });\n\n            kendo.spreadsheet.BorderPalette = BorderPalette;\n\n        })(window.kendo);\n\n    (function(kendo) {\n        var $ = kendo.jQuery;\n\n        function getDefaultToolElement(firstIconName) {\n            return `<button role=\"button\">${kendo.ui.icon({ icon: firstIconName, iconClass: \"k-button-icon\" })}<span class=\"k-button-text\">${kendo.ui.icon(\"caret-alt-down\")}</span></button>`\n        };\n\n        var ToolBar = kendo.ui.ToolBar;\n\n        var MESSAGES = kendo.spreadsheet.messages.toolbar = {\n            addColumnLeft: \"Add column left\",\n            addColumnRight: \"Add column right\",\n            addRowAbove: \"Add row above\",\n            addRowBelow: \"Add row below\",\n            alignment: \"Alignment\",\n            alignmentButtons: {\n                justifyLeft: \"Align left\",\n                justifyCenter: \"Center\",\n                justifyRight: \"Align right\",\n                justifyFull: \"Justify\",\n                alignTop: \"Align top\",\n                alignMiddle: \"Align middle\",\n                alignBottom: \"Align bottom\"\n            },\n            backgroundColor: \"Background\",\n            increaseFontSize: \"Increase font size\",\n            decreaseFontSize: \"Decrease font size\",\n            bold: \"Bold\",\n            borders: \"Borders\",\n            copy: \"Copy\",\n            cut: \"Cut\",\n            deleteColumn: \"Delete column\",\n            deleteRow: \"Delete row\",\n            filter: \"Filter\",\n            fontFamily: \"Font\",\n            fontSize: \"Font size\",\n            format: \"Custom format...\",\n            formatTypes: {\n                automatic: \"Automatic\",\n                text: \"Text\",\n                number: \"Number\",\n                percent: \"Percent\",\n                financial: \"Financial\",\n                currency: \"Currency\",\n                date: \"Date\",\n                time: \"Time\",\n                dateTime: \"Date time\",\n                duration: \"Duration\",\n                moreFormats: \"More formats...\"\n            },\n            formatDecreaseDecimal: \"Decrease decimal\",\n            formatIncreaseDecimal: \"Increase decimal\",\n            freeze: \"Freeze panes\",\n            freezeButtons: {\n                freezePanes: \"Freeze panes\",\n                freezeRows: \"Freeze rows\",\n                freezeColumns: \"Freeze columns\",\n                unfreeze: \"Unfreeze panes\"\n            },\n            insertComment: \"Insert comment\",\n            insertImage: \"Insert image\",\n            italic: \"Italic\",\n            merge: \"Merge cells\",\n            mergeButtons: {\n                mergeCells: \"Merge all\",\n                mergeHorizontally: \"Merge horizontally\",\n                mergeVertically: \"Merge vertically\",\n                unmerge: \"Unmerge\"\n            },\n            open: \"Open...\",\n            paste: \"Paste\",\n            redo: \"Redo\",\n            undo: \"Undo\",\n            exportAs: \"Export...\",\n            toggleGridlines: \"Toggle gridlines\",\n            sort: \"Sort\",\n            sortButtons: {\n                // sortSheetAsc: \"Sort sheet A to Z\",\n                // sortSheetDesc: \"Sort sheet Z to A\",\n                sortRangeAsc: \"Sort range A to Z\",\n                sortRangeDesc: \"Sort range Z to A\"\n            },\n            textColor: \"Text Color\",\n            textWrap: \"Wrap text\",\n            underline: \"Underline\",\n            validation: \"Data validation...\",\n            hyperlink: \"Link\"\n        };\n\n        var defaultTools = {\n            file: [\n                \"open\",\n                \"exportAs\",\n            ],\n            format: [\n                \"format\",\n                \"formatDecreaseDecimal\",\n                \"formatIncreaseDecimal\"\n            ],\n            home: [\n                [\"undo\", \"redo\"],\n                \"separator\",\n                [\"cut\", \"copy\", \"paste\"],\n                \"separator\",\n                \"fontFamily\", \"fontSize\", \"increaseFontSize\", \"decreaseFontSize\",\n                \"separator\",\n                [\"bold\", \"italic\", \"underline\"],\n                \"separator\",\n                \"textColor\",\n                \"separator\",\n                \"backgroundColor\",\n                \"borders\",\n                \"separator\",\n                \"alignment\",\n                \"textWrap\",\n            ],\n            insert: [\n                \"insertComment\",\n                \"separator\",\n                \"hyperlink\",\n                \"separator\",\n                \"insertImage\",\n                \"separator\",\n                [\"addColumnLeft\", \"addColumnRight\", \"addRowBelow\", \"addRowAbove\"],\n                \"separator\",\n                [\"deleteColumn\", \"deleteRow\"]\n            ],\n            data: [\n                \"sort\",\n                \"separator\",\n                \"filter\",\n                \"separator\",\n                \"validation\"\n            ],\n            view: [\n                \"freeze\",\n                \"merge\",\n                \"toggleGridlines\"\n            ]\n        };\n\n        var defaultFormats = kendo.spreadsheet.formats = {\n            automatic: null,\n            text: \"@\",\n            number: \"#,0.00\",\n            percent: \"0.00%\",\n            financial: '_(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00);_(\"$\"* \"-\"??_);_(@_)',\n            currency: \"$#,##0.00;[Red]$#,##0.00\",\n            date: \"m/d/yyyy\",\n            time: \"h:mm:ss AM/PM\",\n            dateTime: \"m/d/yyyy h:mm\",\n            duration: \"[h]:mm:ss\"\n        };\n\n        var colorPickerPalette = [ //metro palette\n            \"#ffffff\", \"#000000\", \"#d6ecff\", \"#4e5b6f\", \"#7fd13b\", \"#ea157a\", \"#feb80a\", \"#00addc\", \"#738ac8\", \"#1ab39f\",\n            \"#f2f2f2\", \"#7f7f7f\", \"#a7d6ff\", \"#d9dde4\", \"#e5f5d7\", \"#fad0e4\", \"#fef0cd\", \"#c5f2ff\", \"#e2e7f4\", \"#c9f7f1\",\n            \"#d8d8d8\", \"#595959\", \"#60b5ff\", \"#b3bcca\", \"#cbecb0\", \"#f6a1c9\", \"#fee29c\", \"#8be6ff\", \"#c7d0e9\", \"#94efe3\",\n            \"#bfbfbf\", \"#3f3f3f\", \"#007dea\", \"#8d9baf\", \"#b2e389\", \"#f272af\", \"#fed46b\", \"#51d9ff\", \"#aab8de\", \"#5fe7d5\",\n            \"#a5a5a5\", \"#262626\", \"#003e75\", \"#3a4453\", \"#5ea226\", \"#af0f5b\", \"#c58c00\", \"#0081a5\", \"#425ea9\", \"#138677\",\n            \"#7f7f7f\", \"#0c0c0c\", \"#00192e\", \"#272d37\", \"#3f6c19\", \"#750a3d\", \"#835d00\", \"#00566e\", \"#2c3f71\", \"#0c594f\"\n        ];\n\n        var COLOR_PICKER_MESSAGES = kendo.spreadsheet.messages.colorPicker = {\n            reset: \"Reset color\",\n            customColor: \"Custom color...\",\n            apply: \"Apply\",\n            cancel: \"Cancel\"\n        };\n\n        var toolDefaults = {\n            undo: {\n               type: \"button\",\n               name: \"undo\",\n               icon: \"undo\",\n               command: \"undo\"\n            },\n            redo: {\n               type: \"button\",\n               name: \"redo\",\n               icon: \"redo\",\n               command: \"redo\"\n            },\n            separator: { type: \"separator\" },\n            //home tab\n            open: {\n                type: \"open\",\n                name: \"open\",\n                icon: \"folder-open\",\n                extensions: \".xlsx\",\n                command: \"OpenCommand\"\n            },\n            exportAs: {\n                type: \"button\",\n                name: \"exportAs\",\n                dialog: \"exportAs\",\n                overflow: \"never\",\n                icon: \"download\"\n            },\n            bold: {\n                type: \"button\",\n                command: \"PropertyChangeCommand\",\n                property: \"bold\",\n                value: true,\n                icon: \"bold\",\n                togglable: true\n            },\n            italic: {\n                type: \"button\",\n                command: \"PropertyChangeCommand\",\n                property: \"italic\",\n                value: true,\n                icon: \"italic\",\n                togglable: true\n            },\n            underline: {\n                type: \"button\",\n                command: \"PropertyChangeCommand\",\n                property: \"underline\",\n                value: true,\n                icon: \"underline\",\n                togglable: true\n            },\n            formatDecreaseDecimal: {\n                type: \"button\",\n                name: \"formatDecreaseDecimal\",\n                command: \"AdjustDecimalsCommand\",\n                value: -1,\n                icon: \"decimal-decrease\"\n            },\n            formatIncreaseDecimal: {\n                type: \"button\",\n                name: \"formatIncreaseDecimal\",\n                command: \"AdjustDecimalsCommand\",\n                value: +1,\n                icon: \"decimal-increase\"\n            },\n            textWrap: {\n                type: \"button\",\n                name: \"textWrap\",\n                command: \"TextWrapCommand\",\n                property: \"wrap\",\n                value: true,\n                icon: \"text-wrap\",\n                togglable: true\n            },\n            cut: {\n                type: \"button\",\n                name: \"cut\",\n                command: \"ToolbarCutCommand\",\n                icon: \"cut\"\n            },\n            copy: {\n                type: \"button\",\n                name: \"copy\",\n                command: \"ToolbarCopyCommand\",\n                icon: \"copy\"\n            },\n            paste: {\n                type: \"button\",\n                name: \"paste\",\n                command: \"ToolbarPasteCommand\",\n                icon: \"clipboard\"\n            },\n            alignment: {\n                type: \"component\",\n                name: \"alignment\",\n                property: \"alignment\",\n                component: \"DropDownButton\",\n                element: getDefaultToolElement(\"align-left\"),\n                overflowComponent: {\n                    type: \"button\",\n                    dialog: \"alignment\",\n                    icon: \"align-left\"\n                },\n                componentOptions: {\n                    fillMode: \"flat\",\n                    items: [\n                        { attributes: { \"data-value\": \"left\", \"data-property\": \"textAlign\", \"data-command\": \"PropertyChangeCommand\" }, icon: \"align-left\", text: MESSAGES.alignmentButtons.justifyLeft },\n                        { attributes: { \"data-value\": \"center\", \"data-property\": \"textAlign\", \"data-command\": \"PropertyChangeCommand\" }, icon: \"align-center\", text: MESSAGES.alignmentButtons.justifyCenter },\n                        { attributes: { \"data-value\": \"right\", \"data-property\": \"textAlign\", \"data-command\": \"PropertyChangeCommand\" }, icon: \"align-right\", text: MESSAGES.alignmentButtons.justifyRight },\n                        { attributes: { \"data-value\": \"justify\", \"data-property\": \"textAlign\", \"data-command\": \"PropertyChangeCommand\" }, icon: \"align-justify\", text: MESSAGES.alignmentButtons.justifyFull },\n                        { attributes: { class: \"k-separator\" } },\n                        { attributes: { \"data-value\": \"top\", \"data-property\": \"verticalAlign\", \"data-command\": \"PropertyChangeCommand\" }, icon: \"align-top\", text: MESSAGES.alignmentButtons.alignTop },\n                        { attributes: { \"data-value\": \"center\", \"data-property\": \"verticalAlign\", \"data-command\": \"PropertyChangeCommand\" }, icon: \"align-middle\", text: MESSAGES.alignmentButtons.alignMiddle },\n                        { attributes: { \"data-value\": \"bottom\", \"data-property\": \"verticalAlign\", \"data-command\": \"PropertyChangeCommand\" }, icon: \"align-bottom\", text: MESSAGES.alignmentButtons.alignBottom }\n                    ],\n                    commandOn: \"click\"\n                }\n            },\n            backgroundColor: {\n                type: \"component\",\n                name: \"backgroundColor\",\n                commandOn: \"change\",\n                command: \"PropertyChangeCommand\",\n                property: \"background\",\n                component: \"ColorPicker\",\n                componentOptions: {\n                    view: \"palette\",\n                    toolIcon: \"droplet\",\n                    fillMode: \"flat\",\n                    palette: colorPickerPalette,\n                    clearButton: true,\n                    messages: COLOR_PICKER_MESSAGES,\n                    input: false,\n                    commandOn: \"change\"\n                },\n                overflowComponent: {\n                    type: \"button\",\n                    dialog: \"colorPicker\",\n                    icon: \"droplet\",\n                    property: \"background\"\n                }\n            },\n            textColor: {\n                type: \"component\",\n                name: \"textColor\",\n                commandOn: \"change\",\n                command: \"PropertyChangeCommand\",\n                property: \"color\",\n                component: \"ColorPicker\",\n                componentOptions: {\n                    view: \"palette\",\n                    fillMode: \"flat\",\n                    toolIcon: \"foreground-color\",\n                    palette: colorPickerPalette,\n                    clearButton: true,\n                    messages: COLOR_PICKER_MESSAGES,\n                    input: false,\n                    commandOn: \"change\"\n                },\n                overflowComponent: {\n                    type: \"button\",\n                    dialog: \"colorPicker\",\n                    icon: \"foreground-color\",\n                    property: \"color\"\n                }\n            },\n            fontFamily: {\n                type: \"component\",\n                name: \"fontFamily\",\n                command: \"PropertyChangeCommand\",\n                property: \"fontFamily\",\n                component: \"DropDownList\",\n                overflowComponent: {\n                    type: \"button\",\n                    dialog: \"fontFamily\",\n                    icon: \"font-family\"\n                },\n                componentOptions: {\n                    dataSource: [\"Arial\", \"Courier New\", \"Georgia\", \"Times New Roman\", \"Trebuchet MS\", \"Verdana\"],\n                    value: \"Arial\",\n                    fillMode: \"flat\",\n                    commandOn: \"change\"\n                }\n            },\n            fontSize: {\n                type: \"component\",\n                name: \"fontSize\",\n                command: \"PropertyChangeCommand\",\n                property: \"fontSize\",\n                component: \"ComboBox\",\n                overflowComponent: {\n                    type: \"button\",\n                    dialog: \"fontSize\",\n                    icon: \"font-size\"\n                },\n                componentOptions: {\n                    dataSource: [8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72],\n                    value: 12,\n                    fillMode: \"flat\",\n                    commandOn: \"change\"\n                }\n            },\n            increaseFontSize: {\n                type: \"button\",\n                name: \"increaseFontSize\",\n                command: \"IncreaseFontSize\",\n                property: \"fontSize\",\n                icon: \"font-grow\"\n            },\n            decreaseFontSize: {\n                type: \"button\",\n                name: \"decreaseFontSize\",\n                command: \"DecreaseFontSize\",\n                property: \"fontSize\",\n                icon: \"font-shrink\"\n            },\n            format: {\n                type: \"component\",\n                name: \"format\",\n                component: \"DropDownButton\",\n                element: getDefaultToolElement(\"custom-format\"),\n                overflowComponent: {\n                    type: \"button\",\n                    dialog: \"formatCells\",\n                    icon: \"custom-format\"\n                },\n                componentOptions: {\n                    fillMode: \"flat\",\n                    items: [\n                        { attributes: { \"data-value\": defaultFormats.automatic, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.automatic },\n                        { attributes: { \"data-value\": defaultFormats.text, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.text },\n                        { attributes: { \"data-value\": defaultFormats.number, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.number, sample: \"1,499.99\" },\n                        { attributes: { \"data-value\": defaultFormats.percent, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.percent, sample: \"14.50%\" },\n                        { attributes: { \"data-value\": defaultFormats.financial, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.financial, sample: \"(1,000.12)\" },\n                        { attributes: { \"data-value\": defaultFormats.currency, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.currency, sample: \"$1,499.99\" },\n                        { attributes: { \"data-value\": defaultFormats.date, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.date, sample: \"4/21/2012\" },\n                        { attributes: { \"data-value\": defaultFormats.time, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.time, sample: \"5:49:00 PM\" },\n                        { attributes: { \"data-value\": defaultFormats.dateTime, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.dateTime, sample: \"4/21/2012 5:49:00\" },\n                        { attributes: { \"data-value\": defaultFormats.duration, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.duration, sample: \"168:05:00\" },\n                        { attributes: { \"data-value\": \"popup\", \"data-popup\": \"formatCells\" }, text: MESSAGES.formatTypes.moreFormats },\n                    ],\n                    itemTemplate: (data) => {\n                        let $kendoOutput;\n                        $kendoOutput = `<span class=\"k-link k-menu-link\"><span class=\"k-menu-link-text\">`; if (data.sample) { ;\n                        $kendoOutput += `<span class='k-spreadsheet-sample'>${kendo.htmlEncode(data.sample)}</span> `; } ;\n                        $kendoOutput += `${kendo.htmlEncode(data.text)}</span></span>`;\n                        return $kendoOutput;\n                    },\n                    commandOn: \"click\"\n                }\n            },\n            filter: {\n                type: \"button\",\n                name: \"filter\",\n                property: \"hasFilter\",\n                icon: \"filter\",\n                command: \"FilterCommand\",\n                togglable: true,\n                enable: false\n            },\n            merge: {\n                type: \"component\",\n                name: \"merge\",\n                component: \"DropDownButton\",\n                element: getDefaultToolElement(\"cells-merge\"),\n                overflowComponent: {\n                    type: \"button\",\n                    dialog: \"merge\",\n                    icon: \"cells-merge\"\n                },\n                componentOptions: {\n                    fillMode: \"flat\",\n                    items: [\n                        { attributes: { \"data-value\": \"cells\", \"data-command\": \"MergeCellCommand\" }, icon: \"cells-merge\", text: MESSAGES.mergeButtons.mergeCells },\n                        { attributes: { \"data-value\": \"horizontally\", \"data-command\": \"MergeCellCommand\" }, icon: \"cells-merge-horizontally\", text: MESSAGES.mergeButtons.mergeHorizontally },\n                        { attributes: { \"data-value\": \"vertically\", \"data-command\": \"MergeCellCommand\" }, icon: \"cells-merge-vertically\", text: MESSAGES.mergeButtons.mergeVertically },\n                        { attributes: { \"data-value\": \"unmerge\", \"data-command\": \"MergeCellCommand\" }, icon: \"table-unmerge\", text: MESSAGES.mergeButtons.unmerge }\n                    ],\n                    commandOn: \"click\"\n                }\n            },\n            freeze: {\n                type: \"component\",\n                name: \"freeze\",\n                component: \"DropDownButton\",\n                element: getDefaultToolElement(\"pane-freeze\"),\n                overflowComponent: {\n                    type: \"button\",\n                    dialog: \"freeze\",\n                    icon: \"pane-freeze\"\n                },\n                componentOptions: {\n                    fillMode: \"flat\",\n                    items: [\n                        { attributes: { \"data-value\": \"panes\", \"data-command\": \"FreezePanesCommand\" }, icon: \"pane-freeze\", text: MESSAGES.freezeButtons.freezePanes },\n                        { attributes: { \"data-value\": \"rows\", \"data-command\": \"FreezePanesCommand\" }, icon: \"row-freeze\", text: MESSAGES.freezeButtons.freezeRows },\n                        { attributes: { \"data-value\": \"columns\", \"data-command\": \"FreezePanesCommand\" }, icon: \"column-freeze\", text: MESSAGES.freezeButtons.freezeColumns },\n                        { attributes: { \"data-value\": \"unfreeze\", \"data-command\": \"FreezePanesCommand\" }, icon: \"table-unmerge\", text: MESSAGES.freezeButtons.unfreeze }\n                    ],\n                    commandOn: \"click\"\n                }\n            },\n            borders: {\n                type: \"popupButton\",\n                name: \"borders\",\n                icon: \"borders-all\",\n                popupComponent: kendo.spreadsheet.BorderPalette,\n                commandOn: \"change\",\n                command: \"BorderChangeCommand\",\n                overflowComponent: {\n                    type: \"button\",\n                    dialog: \"borders\"\n                }\n            },\n            formatCells: {\n                type: \"button\",\n                dialog: \"formatCells\",\n                overflow: \"never\"\n            },\n            hyperlink: {\n                type: \"button\",\n                name: \"hyperlink\",\n                dialog: \"hyperlink\",\n                icon: \"link\"\n            },\n            toggleGridlines: {\n                type: \"button\",\n                name: \"toggleGridlines\",\n                command: \"GridLinesChangeCommand\",\n                property: \"gridLines\",\n                value: true,\n                icon: \"borders-none\",\n                togglable: true,\n                selected: true\n            },\n            insertComment: {\n                type: \"button\",\n                name: \"insertComment\",\n                dialog: \"insertComment\",\n                property: \"comment\",\n                togglable: true,\n                icon: \"comment\"\n            },\n            insertImage: {\n                type: \"button\",\n                name: \"insertImage\",\n                dialog: \"insertImage\",\n                icon: \"image\",\n            },\n\n            //insert tab\n            addColumnLeft: {\n                type: \"button\",\n                name: \"addColumnLeft\",\n                command: \"AddColumnCommand\",\n                value: \"left\",\n                icon: \"table-column-insert-left\"\n            },\n            addColumnRight: {\n                type: \"button\",\n                name: \"addColumnRight\",\n                command: \"AddColumnCommand\",\n                value: \"right\",\n                icon: \"table-column-insert-right\"\n            },\n            addRowBelow: {\n                type: \"button\",\n                name: \"addRowBelow\",\n                command: \"AddRowCommand\",\n                value: \"below\",\n                icon: \"table-row-insert-below\"\n            },\n            addRowAbove: {\n                type: \"button\",\n                name: \"addRowAbove\",\n                command: \"AddRowCommand\",\n                value: \"above\",\n                icon: \"table-row-insert-above\"\n            },\n            deleteColumn: {\n                type: \"button\",\n                name: \"deleteColumn\",\n                command: \"DeleteColumnCommand\",\n                icon: \"table-column-delete\"\n            },\n            deleteRow: {\n                type: \"button\",\n                name: \"deleteRow\",\n                command: \"DeleteRowCommand\",\n                icon: \"table-row-delete\"\n            },\n\n            //data tab\n            sort: {\n                type: \"component\",\n                name: \"sort\",\n                component: \"DropDownButton\",\n                element: getDefaultToolElement(\"sort-desc\"),\n                overflowComponent: {\n                    type: \"button\",\n                    dialog: \"sort\",\n                    icon: \"sort-desc\"\n                },\n                componentOptions: {\n                    fillMode: \"flat\",\n                    items: [\n                        { attributes: { \"data-value\": \"asc\", \"data-command\": \"SortCommand\" }, sheet: false, text: MESSAGES.sortButtons.sortRangeAsc, icon: \"sort-asc\" },\n                        { attributes: { \"data-value\": \"desc\", \"data-command\": \"SortCommand\" }, sheet: false, text: MESSAGES.sortButtons.sortRangeDesc, icon: \"sort-desc\" },\n                    ],\n                    commandOn: \"click\"\n                }\n            },\n            validation: {\n                type: \"button\",\n                name: \"validation\",\n                dialog: \"validation\",\n                icon: \"exclamation-circle\"\n            }\n        };\n\n        var SpreadsheetToolBar = ToolBar.extend({\n            init: function(element, options) {\n                Object.keys(toolDefaults).forEach((t) => {\n                    if (t !== \"validation\") {\n                        toolDefaults[t].showText = \"overflow\";\n                    }\n                });\n\n                options.tools = options.tools || SpreadsheetToolBar.prototype.options.tools[options.toolbarName];\n                options.parentMessages = MESSAGES;\n                options.defaultTools = toolDefaults;\n\n                ToolBar.fn.init.call(this, element, options);\n                var handleClick = this._click.bind(this);\n\n                this.element.addClass(\"k-spreadsheet-toolbar k-toolbar-md\");\n\n                this.bind({\n                    click: handleClick,\n                    toggle: handleClick,\n                    change: handleClick\n                });\n            },\n            _click: function(e) {\n                var target = e.target,\n                    property = target.data(\"property\"),\n                    value = e.value || target.data(\"value\") || e.target.val(),\n                    commandType = target.data(\"command\"),\n                    dialog = target.data(\"dialog\"),\n                    options = target.data(\"options\") || {};\n\n                if (value === \"popup\") {\n                    // Special case to open custom format dialog from option of the format DDL\n                    dialog = target.data(\"popup\");\n                }\n\n                if (commandType === \"IncreaseFontSize\") {\n                    commandType = \"PropertyChangeCommand\";\n                    value++;\n                }\n\n                if (commandType === \"DecreaseFontSize\") {\n                    commandType = \"PropertyChangeCommand\";\n                    value--;\n                }\n\n                options.property = property || null;\n                options.value = value || null;\n\n                if (dialog) {\n                    this.dialog({\n                        name: dialog,\n                        options: options\n                    });\n                    return;\n                }\n\n                if (!commandType) {\n                    return;\n                }\n\n                var args = {\n                    command: commandType,\n                    options: options\n                };\n\n                if (typeof args.options.value === \"boolean\") {\n                    args.options.value = e.checked ? true : null;\n                }\n\n                this.action(args);\n            },\n            events: [\n                \"action\",\n                \"dialog\"\n            ],\n            options: {\n                name: \"SpreadsheetToolBar\",\n                resizable: true,\n                tools: defaultTools,\n                fillMode: \"flat\"\n            },\n            action: function(args) {\n                this.trigger(\"action\", args);\n            },\n            dialog: function(args) {\n                this.trigger(\"dialog\", args);\n            },\n            refresh: function(activeCell) {\n                var range = activeCell,\n                    tools = this._tools();\n\n                for (var i = 0; i < tools.length; i++) {\n                    var property = tools[i].property,\n                        tool = tools[i].tool,\n                        value = kendo.isFunction(range[property]) ? range[property]() : range;\n\n                    if (property == \"gridLines\") {\n                        // this isn't really a property of the range, it's per-sheet.\n                        value = range.sheet().showGridLines();\n                    }\n\n                    this._updateTool(tool, value, property, range);\n                }\n\n                this.resize(true);\n            },\n            _tools: function() {\n                return this.element.find(\"[data-property]\").toArray().map(function(element) {\n                    element = $(element);\n                    return {\n                        property: element.attr(\"data-property\"),\n                        tool: this._getItem(element)\n                    };\n                }.bind(this));\n            },\n            _updateTool: function(tool, value, property, range) {\n                var component = tool.component,\n                    toolbarEl = tool.toolbarEl,\n                    widget = kendo.widgetInstance(toolbarEl.find(\"[data-role]\")),\n                    menuItem = tool.menuItem,\n                    toggle = false,\n                    vertical, text, menu, selection, enabled, label;\n\n                if (property === \"hasFilter\") {\n                    selection = range.sheet().selection();\n\n                    if (selection && selection._ref && selection._ref.height) {\n                        enabled = value || selection._ref.height() > 1;\n\n                        this.enable(toolbarEl, enabled);\n                    }\n                } else if (property === \"alignment\") {\n                    vertical = value.verticalAlign();\n                    text = value.textAlign();\n                    menu = component.menu.element;\n\n                    menu.find(\".k-item .k-link\").removeClass(\"k-selected\");\n                    menu.find(\".k-item[data-property=textAlign][data-value=\" + text + \"] .k-link\").addClass(\"k-selected\");\n                    menu.find(\".k-item[data-property=verticalAlign][data-value=\" + vertical + \"] .k-link\").addClass(\"k-selected\");\n                } else if (property === \"background\" || property === \"color\") {\n                    widget.value(value);\n                } else if (property === \"fontFamily\" || property === \"fontSize\") {\n                    if (toolbarEl.is(\"button\")) {\n                        toolbarEl.attr(\"data-value\", value);\n                        toolbarEl.data(\"value\", value);\n                        return;\n                    }\n                    label = menuItem.find(\".k-menu-link-text\").text().split(\"(\")[0].trim();\n                    menuItem.find(\".k-menu-link-text\").text(label + \" (\" + value + \") ...\");\n                    widget.value(value);\n                }\n\n                if (component && component.toggle) {\n                    if (typeof value === \"boolean\") {\n                        toggle = !!value;\n                    } else if (typeof value === \"string\") {\n                        if (toolbarEl.data(\"value\")) {\n                            toggle = toolbarEl.data(\"value\") === value;\n                        } else {\n                            // if no value is specified in the tool options,\n                            // assume it should be ON if the range value is not null, and OFF otherwise.\n                            toggle = value != null;\n                        }\n                    }\n\n                    this.toggle(toolbarEl, toggle);\n                }\n            }\n        });\n\n        kendo.cssProperties.propertyDictionary[\"SpreadsheetToolBar\"] = kendo.cssProperties.propertyDictionary[\"ToolBar\"];\n\n        kendo.spreadsheet.ToolBar = SpreadsheetToolBar;\n\n        kendo.spreadsheet.Menu = kendo.ui.Menu;\n\n    })(window.kendo);\n\n    \"use strict\";\n\n        function clone(hash, target) {\n            if (!target) {\n                target = {};\n            }\n            if (Object.assign) {\n                return Object.assign(target, hash);\n            }\n            return Object.keys(hash).reduce(function(copy, key) {\n                copy[key] = hash[key];\n                return copy;\n            }, target);\n        }\n\n        function drawTabularData(options) {\n            var progress = new $.Deferred();\n            var promise = progress.promise();\n\n            options = clone(options, {\n                dataSource       : null,\n                guidelines       : true,\n                guideColor       : \"#000\",\n                columns          : null,\n                headerBackground : \"#999\",\n                headerColor      : \"#000\",\n                oddBackground    : null,\n                evenBackground   : null,\n                fontFamily       : \"Arial\",\n                fontSize         : 12,\n                paperSize        : \"A4\",\n                margin           : \"1cm\",\n                landscape        : true,\n                fitWidth         : false,\n                scale            : 1,\n                rowHeight        : 20,\n                maxEmpty         : 1,\n                useGridFormat    : true\n            });\n\n            // retrieve fonts; custom fonts should be already loaded\n            kendo.drawing.pdf.defineFont(\n                kendo.drawing.drawDOM.getFontFaces(document)\n            );\n\n            var charWidth = charWidthFunction(options.fontFamily, options.fontSize);\n\n            function textWidth(value) {\n                if (value != null) {\n                    var width = 12;         // magic numbers :-/\n                    for (var i = value.length; --i >= 0;) {\n                        width += charWidth(value.charAt(i));\n                    }\n                    return width;\n                }\n                return 0;\n            }\n\n            var border = options.guidelines ? { size: 1, color: options.guideColor } : null;\n\n            function mkCell(data) {\n                if (!border) {\n                    return data;\n                }\n                return clone(data, {\n                    borderLeft: border,\n                    borderTop: border,\n                    borderRight: border,\n                    borderBottom: border\n                });\n            }\n\n            options.dataSource.fetch(function(){\n                var data = options.dataSource.data();\n                if (!data.length) {\n                    return progress.reject(\"Empty dataset\");\n                }\n\n                // this really must be present\n                var columns = options.columns.map(function(col){\n                    if (typeof col == \"string\") {\n                        return { title: col, field: col };\n                    } else {\n                        return col;\n                    }\n                });\n                var columnTitles = columns.map(function(col){\n                    return col.title || col.field;\n                });\n                var columnWidths = columnTitles.map(textWidth);\n\n                // prepare data for a Sheet object's fromJSON method\n                var rows = data.map(function(row, rowIndex){\n                    return {\n                        cells: columns.map(function(col, colIndex){\n                            var value = row[col.field];\n\n                            // NOTE: value might not be string.  I added option useGridFormat (default\n                            // true), which will use a column's format, if present, to convert the value\n                            // to a string, so that we can measure the width right now.\n                            if (options.useGridFormat) {\n                                if (value != null) {\n                                    if (col.format) {\n                                        value = kendo.format(col.format, value);\n                                    } else {\n                                        value += \"\";\n                                    }\n                                }\n                                // adjust the column widths while we're at it\n                                columnWidths[colIndex] = Math.max(\n                                    textWidth(value),\n                                    columnWidths[colIndex]\n                                );\n                            }\n\n                            // if options.useGridFormat is false and col.format is present, pass it over\n                            // to the spreadsheet.  In that case we should calculate the widths after\n                            // the spreadsheet is created (XXX to be implemented when someone needs it).\n                            return mkCell({\n                                value: value,\n                                format: options.useGridFormat ? null : col.format,\n                                background: rowIndex % 2 ? options.evenBackground : options.oddBackground\n                            });\n                        })\n                    };\n                });\n\n                // insert header line\n                rows.unshift({\n                    cells: columnTitles.map(function(label){\n                        return mkCell({\n                            value: label,\n                            background: options.headerBackground,\n                            color: options.headerColor\n                        });\n                    })\n                });\n\n                // init a Sheet object.  Note that we have to add one\n                // extra-row and column, because the very last ones can't\n                // have right/bottom borders (known limitation).\n                var sheet = new kendo.spreadsheet.Sheet(\n                    rows.length + 1,        // rows\n                    columns.length + 1,     // columns\n                    options.rowHeight,      // row height\n                    50,                     // column width\n                    20,                     // header height\n                    20,                     // header width,\n                    {                       // default cell style\n                        fontFamily: options.fontFamily,\n                        fontSize: options.fontSize,\n                        verticalAlign: \"center\"\n                    }\n                );\n\n                // load data\n                sheet.fromJSON({\n                    name: \"Sheet1\",\n                    rows: rows,\n                    columns: columnWidths.map(function(w, i){\n                        return { index: i, width: w };\n                    })\n                });\n\n                sheet.draw({\n                    paperSize  : options.paperSize,\n                    landscape  : options.landscape,\n                    margin     : options.margin,\n                    guidelines : false, // using borders instead (better contrast)\n                    scale      : options.scale,\n                    fitWidth   : options.fitWidth,\n                    maxEmpty   : options.maxEmpty,\n                    headerRows : 1\n                }, progress.resolve.bind(progress));\n            });\n\n            return promise;\n        }\n\n        var CACHE_CHAR_WIDTH = {};\n\n        var charWidthFunction = function(fontFamily, fontSize) {\n            var id = fontSize + \":\" + fontFamily;\n            var func = CACHE_CHAR_WIDTH[id];\n            if (!func) {\n                var span, div = document.createElement(\"div\");\n                div.style.position = \"fixed\";\n                div.style.left = \"-10000px\";\n                div.style.top = \"-10000px\";\n                div.style.fontFamily = fontFamily;\n                div.style.fontSize = fontSize + \"px\";\n                div.style.whiteSpace = \"pre\";\n                for (var i = 32; i < 128; ++i) {\n                    span = document.createElement(\"span\");\n                    span.appendChild(document.createTextNode(String.fromCharCode(i)));\n                    div.appendChild(span);\n                }\n                document.body.appendChild(div);\n                var widths = {};\n                for (i = 32, span = div.firstChild; i < 128 && span; ++i, span = span.nextSibling) {\n                    widths[i] = span.offsetWidth;\n                }\n                while ((span = div.firstChild)) {\n                    div.removeChild(span);\n                }\n                func = CACHE_CHAR_WIDTH[id] = function(ch) {\n                    var code = ch.charCodeAt(0);\n                    var width = widths[code];\n                    if (width == null) {\n                        // probably not an ASCII character, let's cache its width as well\n                        span = document.createElement(\"span\");\n                        span.appendChild(document.createTextNode(String.fromCharCode(code)));\n                        div.appendChild(span);\n                        width = widths[code] = span.offsetWidth;\n                        div.removeChild(span);\n                    }\n                    return width;\n                };\n            }\n            return func;\n        };\n\n        kendo.spreadsheet.drawTabularData = drawTabularData;\n\n    (function(kendo) {\n\n        \"use strict\";\n\n\n        let registerEditor = kendo.spreadsheet.registerEditor;\n        var $ = kendo.jQuery;\n\n        registerEditor(\"_validation_date\", function(){\n            var context, calendar, popup;\n\n            function create() {\n                if (!calendar) {\n                    calendar = $(\"<div>\").kendoCalendar();\n                    popup = $(\"<div>\").kendoPopup();\n                    calendar.appendTo(popup);\n                    calendar = calendar.getKendoCalendar();\n                    popup = popup.getKendoPopup();\n\n                    calendar.bind(\"change\", function(){\n                        popup.close();\n                        var date = calendar.value();\n                        if (!context.range.format()) {\n                            context.range.format(\"yyyy-mm-dd\");\n                        }\n                        context.callback(kendo.spreadsheet.dateToNumber(date));\n                    });\n                }\n                popup.setOptions({\n                    anchor: context.view.element.querySelector(\".k-spreadsheet-editor-button\"),\n                    origin: context.alignLeft ? \"bottom right\" : \"bottom left\",\n                    position: context.alignLeft ? \"top right\" : \"top left\"\n                });\n            }\n\n            function open() {\n                create();\n\n                var date = context.range.value();\n                var sheet = context.range.sheet();\n                if (date != null) {\n                    calendar.value(kendo.spreadsheet.numberToDate(date));\n                } else {\n                    calendar.value(null);\n                }\n                var val = context.validation;\n                if (val) {\n                    var min = kendo.ui.Calendar.fn.options.min;\n                    var max = kendo.ui.Calendar.fn.options.max;\n                    var fromValidation = val.from;\n                    var toValidation = val.to;\n                    var formula = kendo.spreadsheet.calc.runtime.Formula;\n\n                    if (/^(?:greaterThan|between)/.test(val.comparerType)) {\n                        if(fromValidation instanceof formula && _rowAndColPresent(fromValidation.value)) {\n                            min = kendo.spreadsheet.numberToDate(sheet.range(fromValidation.value.row, fromValidation.value.col).value());\n                        } else {\n                            min = kendo.spreadsheet.numberToDate(fromValidation.value);\n                        }\n                    }\n                    if (val.comparerType == \"between\") {\n                        if(toValidation instanceof formula && _rowAndColPresent(toValidation.value)) {\n                            max = kendo.spreadsheet.numberToDate(sheet.range(toValidation.value.row, toValidation.value.col).value());\n                        } else {\n                            max = kendo.spreadsheet.numberToDate(val.to.value);\n                        }\n                    }\n                    if (val.comparerType == \"lessThan\" || val.comparerType == \"lessThanOrEqualTo\") {\n                        if(fromValidation instanceof formula && _rowAndColPresent(fromValidation.value)) {\n                            max = kendo.spreadsheet.numberToDate(sheet.range(fromValidation.value.row, fromValidation.value.col).value());\n                        } else {\n                            max = kendo.spreadsheet.numberToDate(val.from.value);\n                        }\n                    }\n                    calendar.setOptions({\n                        disableDates: function(date) {\n                            var from, to;\n\n                            if(fromValidation && fromValidation instanceof formula && _rowAndColPresent(fromValidation.value)) {\n                                from = sheet.range(fromValidation.value.row, fromValidation.value.col).value();\n                            } else {\n                                from = fromValidation ? fromValidation.value|0 : 0;\n                            }\n\n                            if(toValidation && toValidation instanceof formula && _rowAndColPresent(toValidation.value)) {\n                                to = sheet.range(toValidation.value.row, toValidation.value.col).value();\n                            } else {\n                                to = toValidation ? toValidation.value|0 : 0;\n                            }\n\n                            date = kendo.spreadsheet.dateToNumber(date) | 0;\n                            return !kendo.spreadsheet.validation\n                                .validationComparers[val.comparerType](date, from, to);\n                        },\n                        min: min,\n                        max: max\n                    });\n                } else {\n                    calendar.setOptions({ disableDates: null, min: null, max: null });\n                }\n                popup.open();\n            }\n\n            function _rowAndColPresent(value) {\n                return (value && value.row !== null && value.col !== null && value.row > -1 && value.col > -1);\n            }\n\n            return {\n                edit: function(options) {\n                    context = options;\n                    open();\n                },\n                icon: \"calendar\"\n            };\n        });\n\n        registerEditor(\"_validation_list\", function(){\n            var context, list, popup;\n            function create() {\n                if (!list) {\n                    list = $(\"<ul class='k-list k-reset'/>\").kendoStaticList({\n                        template   : \"#:value#\",\n                        selectable : true,\n                        autoBind   : false\n                    });\n                    popup = $(\"<div class='k-spreadsheet-list-popup'>\").kendoPopup();\n                    list.appendTo(popup);\n                    popup = popup.getKendoPopup();\n                    list = list.getKendoStaticList();\n\n                    list.bind(\"change\", function(){\n                        popup.close();\n                        var item = list.value()[0];\n                        if (item) {\n                            context.callback(item.value);\n                        }\n                    });\n                }\n                popup.setOptions({\n                    anchor: context.view.element.querySelector(\".k-spreadsheet-editor-button\"),\n                    origin: context.alignLeft ? \"bottom right\" : \"bottom left\",\n                    position: context.alignLeft ? \"top right\" : \"top left\"\n                });\n            }\n            function open() {\n                create();\n                var items = context.validation.from.value;\n                var data = [], add = function(el){ data.push({ value: el }); };\n                if (items instanceof kendo.spreadsheet.calc.runtime.Matrix) {\n                    items.each(add);\n                } else {\n                    // actually Excel expects a simple string for list\n                    // validation (comma-separated labels).\n                    (items+\"\").split(/\\s*,\\s*/).forEach(add);\n                }\n                var dataSource = new kendo.data.DataSource({ data: data });\n                list.setDataSource(dataSource);\n                dataSource.read();\n                popup.open();\n            }\n            return {\n                edit: function(options) {\n                    context = options;\n                    open();\n                },\n                icon: \"caret-alt-down\"\n            };\n        });\n\n    })(window.kendo);\n\n    (function(kendo) {\n\n            var $ = kendo.jQuery;\n            var outerWidth = kendo._outerWidth;\n            var DOT = \".\";\n            var EMPTYCHAR = \" \";\n            var sheetsBarClassNames = {\n                sheetsBarWrapper: \"k-spreadsheet-sheets-bar\",\n                sheetsBarSheetsWrapper: \"k-tabstrip k-tabstrip-bottom\",\n                sheetsBarAdd: \"k-spreadsheet-sheet-add\",\n                sheetsBarSheetsMenu: \"k-spreadsheet-sheets-menu\",\n                sheetsBarRemove: \"k-spreadsheet-sheets-remove\",\n                sheetsBarItems: \"k-spreadsheet-sheets\",\n                sheetsBarEditor: \"k-spreadsheet-sheets-editor\",\n                sheetsBarScrollable: \"k-tabstrip-scrollable\",\n                sheetsBarNext: \"k-tabstrip-next\",\n                sheetsBarPrev: \"k-tabstrip-prev\",\n                sheetsBarKItem: \"k-item\",\n                sheetsBarKActive: \"k-active\",\n                sheetsBarKTextbox: \"k-textbox\",\n                sheetsBarKLink: \"k-link\",\n                sheetsBarKLinkText: \"k-link-text\",\n                sheetsBarKIcon: \"k-icon\",\n                sheetsBarKFontIcon: \"k-icon\",\n                sheetsBarKButton: \"k-button k-icon-button\",\n                sheetsBarKButtonDefaults: \"k-button-md k-rounded-md k-button-solid k-button-solid-base\",\n                sheetsBarKButtonBare: \"k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n                sheetsBarArrowWIcon: \"caret-alt-left\",\n                sheetsBarArrowEIcon: \"caret-alt-right\",\n                sheetsBarKReset: \"k-reset k-tabstrip-items k-tabstrip-items-start\",\n                sheetsBarXIcon: \"x\",\n                sheetsBarMoreIcon: \"caret-alt-down\",\n                sheetsBarKSprite: \"k-sprite\",\n                sheetsBarPlusIcon: \"plus\",\n                sheetsBarMenuIcon: \"menu\",\n                sheetsBarHintWrapper: \"k-widget k-tabstrip k-tabstrip-bottom k-spreadsheet-sheets-items-hint\",\n                sheetsBarKResetItems: \"k-reset k-tabstrip-items k-tabstrip-items-start\"\n            };\n\n            var SheetsBar = kendo.ui.Widget.extend({\n                init: function(element, options) {\n                    var classNames = SheetsBar.classNames;\n\n                    kendo.ui.Widget.call(this, element, options);\n\n                    element = this.element;\n\n                    element.addClass(classNames.sheetsBarWrapper);\n\n                    this._openDialog = options.openDialog;\n\n                    this._addButton();\n                    this._menuButton();\n                    this._tree = new kendo.dom.Tree(element[0]);\n\n                    this._tree.render([this._createSheetsWrapper([])]);\n                    this._initSheetDropDownButtons();\n\n                    this._toggleScrollEvents(true);\n\n                    this._createSortable();\n\n                    this._sortable.bind(\"start\", this._onSheetReorderStart.bind(this));\n\n                    this._sortable.bind(\"end\", this._onSheetReorderEnd.bind(this));\n\n                    element.on(\"click\", \"[ref-sheetsbar-more-button]\", this._onSheetContextMenu.bind(this));\n\n                    element.on(\"click\", \"li\", this._onSheetSelect.bind(this));\n\n                    element.on(\"dblclick\", \"li\" + DOT + classNames.sheetsBarKItem + DOT + classNames.sheetsBarKItem, this._createEditor.bind(this));\n                },\n\n                options: {\n                    name: \"SheetsBar\",\n                    scrollable: {\n                        distance: 200\n                    }\n                },\n\n                events: [\n                    \"select\",\n                    \"reorder\",\n                    \"rename\"\n                ],\n\n                _createEditor: function() {\n                    if (this._editor) {\n                        return;\n                    }\n\n                    this._renderSheets(this._sheets, this._selectedIndex, true);\n                    this._editor = this.element\n                        .find(kendo.format(\"input{0}{1}\", DOT, SheetsBar.classNames.sheetsBarEditor))\n                        .trigger(\"focus\")\n                        .on(\"keydown\", this._onEditorKeydown.bind(this))\n                        .on(\"blur\", this._onEditorBlur.bind(this));\n                },\n\n                _destroyEditor: function(canceled) {\n                    var newSheetName = canceled ? null : this._editor.val();\n                    this._editor.off();\n                    this._editor = null;\n                    this._renderSheets(this._sheets, this._selectedIndex, false);\n                    this._onSheetRename(newSheetName);\n                },\n\n                renderSheets: function(sheets, selectedIndex) {\n                    if (!sheets || selectedIndex < 0) {\n                        return;\n                    }\n\n                    this._renderSheets(sheets, selectedIndex, false);\n                },\n\n                _renderSheets: function(sheets, selectedIndex, isInEditMode) {\n                    var that = this;\n                    var classNames = SheetsBar.classNames;\n\n                    that._isRtl = kendo.support.isRtl(that.element);\n                    that._sheets = sheets;\n                    that._selectedIndex = selectedIndex;\n\n                    that._renderHtml(isInEditMode, true);\n\n                    if (!that._scrollableAllowed()) {\n                        return;\n                    }\n\n                    var sheetsWrapper = that._sheetsWrapper();\n\n                    sheetsWrapper.addClass(classNames.sheetsBarScrollable + EMPTYCHAR + classNames.sheetsBarSheetsWrapper);\n\n                    that._toggleScrollButtons();\n                },\n\n                _toggleScrollButtons: function(toggle) {\n                    var that = this;\n                    var ul = that._sheetsGroup();\n                    var wrapper = that._sheetsWrapper();\n                    var scrollLeft = kendo.scrollLeft(ul);\n                    var prev = wrapper.find(DOT + SheetsBar.classNames.sheetsBarPrev);\n                    var next = wrapper.find(DOT + SheetsBar.classNames.sheetsBarNext);\n\n                    if (toggle === false) {\n                        prev.addClass('k-disabled');\n                        next.addClass('k-disabled');\n                    } else {\n                        prev.toggleClass('k-disabled', !(that._isRtl ? scrollLeft < ul[0].scrollWidth - ul[0].offsetWidth - 1 : scrollLeft !== 0));\n                        next.toggleClass('k-disabled', !(that._isRtl ? scrollLeft !== 0 : scrollLeft < ul[0].scrollWidth - ul[0].offsetWidth - 1));\n                    }\n\n                },\n\n                _toggleScrollEvents: function(toggle) {\n                    var that = this;\n                    var classNames = SheetsBar.classNames;\n                    var options = that.options;\n                    var scrollPrevButton;\n                    var scrollNextButton;\n                    var sheetsWrapper = that._sheetsWrapper();\n                    scrollPrevButton = sheetsWrapper.find(DOT + classNames.sheetsBarPrev);\n                    scrollNextButton = sheetsWrapper.find(DOT + classNames.sheetsBarNext);\n\n                    if (toggle) {\n                        scrollPrevButton.on(\"mousedown\", function(event) {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            that._nowScrollingSheets = true;\n                            that._scrollSheetsByDelta(options.scrollable.distance * (that._isRtl ? 1 : -1));\n                        });\n\n                        scrollNextButton.on(\"mousedown\", function(event) {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            that._nowScrollingSheets = true;\n                            that._scrollSheetsByDelta(options.scrollable.distance * (that._isRtl ? -1 : 1));\n                        });\n\n                        scrollPrevButton.add(scrollNextButton).on(\"mouseup\", function() {\n                            that._nowScrollingSheets = false;\n                        });\n                    } else {\n                        scrollPrevButton.off();\n                        scrollNextButton.off();\n                    }\n                },\n\n                _renderHtml: function(isInEditMode, renderScrollButtons) {\n                    var idx;\n                    var sheetElements = [];\n                    var dom = kendo.dom;\n                    var element = dom.element;\n                    var sheets = this._sheets;\n                    var selectedIndex = this._selectedIndex;\n                    var classNames = SheetsBar.classNames;\n\n                    for (idx = 0; idx < sheets.length; idx++) {\n                        var sheet = sheets[idx];\n\n                        var isSelectedSheet = (idx === selectedIndex);\n                        var attr = { className: classNames.sheetsBarKItem + EMPTYCHAR, role: \"tab\" };\n                        var elementContent = [];\n                        if (sheet.state() !== 'visible') {\n                            attr.className += \"k-hidden \";\n                        }\n\n                        if (isSelectedSheet) {\n                            attr.className += classNames.sheetsBarKActive;\n                        }\n\n                        if (isSelectedSheet && isInEditMode) {\n                            elementContent.push(element(\"input\", {\n                                type: \"text\",\n                                value: sheet.name(),\n                                className: classNames.sheetsBarKTextbox + EMPTYCHAR + classNames.sheetsBarEditor,\n                                maxlength: 50\n                            }, []));\n                        } else {\n                            elementContent.push(element(\"span\", {\n                                className: classNames.sheetsBarKLink,\n                                title: sheet.name()\n                            }, [element(\"span\", { className: classNames.sheetsBarKLinkText }, [dom.text(sheet.name())])]));\n\n                            let contextMenuButton = element($(kendo.html.renderButton($(`<button ref-sheetsbar-more-button data-sheet-name=\"${sheet.name()}\" class=\"k-menu-button\"></button>`), {\n                                icon: classNames.sheetsBarMoreIcon,\n                                fillMode: \"flat\"\n                            }))[0]);\n\n                            elementContent.push(element(\"span\", {\n                                className: \"k-item-actions\",\n                                'data-type': 'context-menu',\n                            }, [contextMenuButton]));\n                        }\n\n                        sheetElements.push(element(\"li\", attr, elementContent));\n                    }\n\n                    kendo.destroy(this._sheetsWrapper());\n                    this._addButton();\n                    this._menuButton();\n                    this._tree.render([ this._createSheetsWrapper(sheetElements, renderScrollButtons)]);\n                    this._initSheetDropDownButtons();\n                },\n                _initSheetDropDownButtons: function() {\n                    let that = this;\n                    this.element.find(\"[ref-sheetsbar-more-button]\").each(function(ind, btnEl){\n                        let el = $(btnEl);\n                        let allSheets = that._sheets || [];\n                        let visibleSheets = allSheets.filter(sheet => sheet.state() === 'visible');\n                        let isSingleVisibleSheet = !that._sheets || that._sheets && visibleSheets.length < 2;\n                        let sheetName = el.data(\"sheetName\");\n                        let shouldAllowMoveRight = !(isSingleVisibleSheet || (that._sheets && ind == allSheets.length - 1));\n                        let shouldAllowMoveLeft = !(isSingleVisibleSheet || (that._sheets && ind === 0));\n                        el.kendoDropDownButton({\n                            icon: SheetsBar.classNames.sheetsBarMoreIcon,\n                            fillMode: \"flat\",\n                            items: [\n                                { text: \"Delete\", icon: \"trash\", attributes: { \"data-command\": \"delete\", \"data-sheet-name\": sheetName }, enabled: !isSingleVisibleSheet },\n                                { text: \"Duplicate\", icon: \"copy\", attributes: { \"data-command\": \"duplicate\", \"data-sheet-name\": sheetName } },\n                                { text: \"Rename\", icon: \"pencil\", attributes: { \"data-command\": \"rename\", \"data-sheet-name\": sheetName } },\n                                { text: \"Hide\", icon: \"eye-slash\", attributes: { \"data-command\": \"hide\", \"data-sheet-name\": sheetName }, enabled: !isSingleVisibleSheet },\n                                { text: \"Move Right\", icon: \"arrow-right\", attributes: { \"data-command\": \"move-right\", \"data-sheet-name\": sheetName }, enabled: shouldAllowMoveRight },\n                                { text: \"Move Left\", icon: \"arrow-left\", attributes: { \"data-command\": \"move-left\", \"data-sheet-name\": sheetName }, enabled: shouldAllowMoveLeft },\n                            ],\n                            click: that._onSheetContextMenu.bind(that)\n                        });\n                    });\n                },\n                _createSheetsWrapper: function(sheetElements, renderScrollButtons) {\n                    var element = kendo.dom.element;\n                    var classNames = SheetsBar.classNames;\n                    var itemsWrapper = element('div', { className: 'k-tabstrip-items-wrapper k-hstack' });\n                    var childrenElements = [element(\"ul\", {\n                        className: classNames.sheetsBarKReset,\n                        role: \"tablist\"\n                    }, sheetElements), null, null];\n\n                    renderScrollButtons = true;\n\n                    if (renderScrollButtons) {\n                        var baseButtonClass = classNames.sheetsBarKButton + EMPTYCHAR + classNames.sheetsBarKButtonBare + EMPTYCHAR;\n\n                        childrenElements[1] = (element(\"button\", { ariaHidden: \"true\", tabIndex: -1, className: baseButtonClass + classNames.sheetsBarPrev }, [\n                            element($(kendo.ui.icon({ icon: classNames.sheetsBarArrowWIcon, iconClass: \"k-button-icon\" }))[0])\n                        ]));\n\n                        childrenElements[2] = (element(\"button\", { ariaHidden: \"true\", tabIndex: -1, className: baseButtonClass + classNames.sheetsBarNext }, [\n                            element($(kendo.ui.icon({ icon: classNames.sheetsBarArrowEIcon, iconClass: \"k-button-icon\" }))[0])\n                        ]));\n                    }\n\n                    itemsWrapper.children = childrenElements;\n\n                    return element(\"div\", { className: classNames.sheetsBarItems }, [itemsWrapper]);\n                },\n\n                _createSortable: function() {\n                    var classNames = SheetsBar.classNames;\n                    this._sortable = new kendo.ui.Sortable(this.element, {\n                        filter: `ul li.${classNames.sheetsBarKItem}`,\n                        container: DOT + classNames.sheetsBarItems,\n                        axis: \"x\",\n                        animation: false,\n                        ignore: \"input\",\n                        end: function() {\n                            if (this.draggable.hint) {\n                                this.draggable.hint.remove();\n                            }\n                        },\n                        hint: function(element) {\n                            var hint = $(element).clone().attr(\"ref-sheetsbar-sortable-hint\", \"\");\n                            return hint.wrap(\"<div class='\" + classNames.sheetsBarHintWrapper + \"'><ul class='\" + classNames.sheetsBarKResetItems + \"'></ul></div>\").closest(\"div\");\n                        }\n                    });\n                },\n\n                _onEditorKeydown: function(e) {\n                    if (this._editor) {\n                        if (e.which === 13) {\n                            this._destroyEditor();\n                        }\n\n                        if (e.which === 27) {\n                            this._destroyEditor(true);\n                        }\n                    }\n                },\n\n                _onEditorBlur: function() {\n                    if (this._editor) {\n                        this._destroyEditor();\n                    }\n                },\n\n                _onSheetReorderEnd: function(e) {\n                    e.preventDefault();\n                    this.trigger(\"reorder\", { oldIndex: e.oldIndex, newIndex: e.newIndex });\n                },\n\n                _onSheetReorderStart: function(e) {\n                    if (this._editor) {\n                        e.preventDefault();\n                    }\n                },\n                _onSheetContextMenu: function(e) {\n                    let sheetName = $(e.target).closest(\"li\").data(\"sheetName\");\n                    let command = $(e.target).closest(\"li\").data(\"command\");\n\n                    if (this._editor) {\n                        this._destroyEditor();\n                    }\n\n                    if (sheetName && command) {\n                        switch(command) {\n                            case \"delete\":\n                                this._onSheetRemove(e);\n                                break;\n                            case \"duplicate\":\n                                this._onSheetDuplicate(sheetName);\n                                break;\n                            case \"rename\":\n                                this._renamePrompt(sheetName);\n                                break;\n                            case \"hide\":\n                                this._hideSheet(sheetName);\n                                break;\n                            case \"move-right\":\n                                this._moveSheet(sheetName, 1);\n                                break;\n                            case \"move-left\":\n                                this._moveSheet(sheetName, -1);\n                                break;\n                        }\n                    }\n                },\n                _onSheetDuplicate: function(sheetName) {\n                    this.trigger(\"duplicate\", { name: sheetName });\n                },\n                _renamePrompt: function(sheetName) {\n                    let renameSheetIndex = this._sheets.findIndex(sh => sh.name() == sheetName);\n                    let closeCallback = function(e) {\n                        let dlg = e.sender;\n                        if (dlg._newSheetName && dlg._newSheetName !== sheetName) {\n                            this.trigger(\"rename\", { name: dlg._newSheetName, sheetIndex: renameSheetIndex });\n                        }\n                    }.bind(this);\n\n                    this._openDialog(\"renameSheet\", {\n                        close: closeCallback,\n                        _oldSheetName: sheetName\n                    });\n                },\n                _hideSheet: function(sheetName) {\n                    this.trigger(\"hide\", { name: sheetName });\n                },\n                _moveSheet: function(sheetName, direction) {\n                    let sheetIndex = this._sheets.findIndex(sheet => sheet.name() === sheetName);\n                    let newSheetIndex = sheetIndex + direction;\n                    if (newSheetIndex < 0 || newSheetIndex >= this._sheets.length) {\n                        return;\n                    }\n\n                    this.trigger(\"reorder\", { oldIndex: sheetIndex, newIndex: newSheetIndex });\n                },\n                _onSheetRemove: function(e) {\n                    var removedSheetName = $(e.target).closest(\"li\").data(\"sheetName\");\n\n                    if (this._editor) {\n                        this._destroyEditor();\n                    }\n\n                    var closeCallback = function(e) {\n                        var dlg = e.sender;\n\n                        if (dlg.isConfirmed()) {\n                            this.trigger(\"remove\", { name: removedSheetName, confirmation: true });\n                        }\n                    }.bind(this);\n\n                    this._openDialog(\"confirmation\", {\n                        close: closeCallback\n                    });\n                },\n\n                _onSheetSelect: function(e) {\n                    var selectedSheetText = $(e.target).text();\n\n                    if ($(e.target).is(DOT + SheetsBar.classNames.sheetsBarEditor) || !selectedSheetText) {\n                        e.preventDefault();\n                        return;\n                    }\n\n                    if (this._editor) {\n                        this._destroyEditor();\n                    }\n\n                    this._scrollSheetsToItem($(e.target).closest(\"li\"));\n                    this.trigger(\"select\", { name: selectedSheetText, isAddButton: false });\n                },\n\n                _onSheetRename: function(newSheetName) {\n                    if (this._sheets[this._selectedIndex].name() === newSheetName || newSheetName === null) {\n                        return;\n                    }\n\n                    this.trigger(\"rename\", { name: newSheetName, sheetIndex: this._selectedIndex });\n                },\n\n                _onAddSelect: function(ev) {\n                    ev.sender.element.removeClass(\"k-focus\");\n                    this.trigger(\"select\", { isAddButton: true });\n                },\n\n                _onMenuSelect: function(ev) {\n                    let sheetName = $(ev.target).closest(\"li\").data(\"sheetName\");\n                    if (sheetName) {\n                        this.trigger(\"show\", { name: sheetName });\n                    }\n                },\n\n                _addButton: function() {\n                    var classNames = SheetsBar.classNames;\n                    let addButton = this.element.find(\".\" + classNames.sheetsBarAdd);\n                    if (!addButton.length) {\n                        addButton = $(`<button class=\"${classNames.sheetsBarAdd}\" aria-label=\"Add new sheet\"></button>`).appendTo(this.element);\n                    } else {\n                        kendo.destroy(addButton);\n                    }\n\n                    addButton.kendoButton({\n                        icon: classNames.sheetsBarPlusIcon,\n                        fillMode: \"flat\",\n                        click: this._onAddSelect.bind(this)\n                    });\n                },\n                _menuButton: function() {\n                    var classNames = SheetsBar.classNames;\n                    let menuButton = this.element.find(\".\" + classNames.sheetsBarSheetsMenu);\n                    if (!menuButton.length) {\n                        menuButton = $(`<button class=\"${classNames.sheetsBarSheetsMenu}\"></button>`).appendTo(this.element);\n                    } else {\n                        kendo.destroy(menuButton);\n                    }\n\n                    menuButton.kendoDropDownButton({\n                        icon: classNames.sheetsBarMenuIcon,\n                        fillMode: \"flat\",\n                        items: (this._sheets || []).map(sheet => ({\n                            text: sheet.name(),\n                            attributes: { 'data-sheet-name': sheet.name() },\n                            icon: sheet.state() === 'visible' ? 'eye' : 'eye-slash',\n                            cssClass: classNames\n                        })),\n                        click: this._onMenuSelect.bind(this)\n                    });\n                },\n\n                destroy: function() {\n                    this._sortable.destroy();\n                },\n\n                _scrollableAllowed: function() {\n                    var options = this.options;\n                    return options.scrollable && !isNaN(options.scrollable.distance);\n                },\n\n                _scrollSheetsToItem: function(item) {\n                    var that = this;\n                    var sheetsGroup = that._sheetsGroup();\n                    var currentScrollOffset = kendo.scrollLeft(sheetsGroup);\n                    var itemWidth = outerWidth(item);\n                    var itemOffset = that._isRtl ? item.position().left : item.position().left - sheetsGroup.children().first().position().left;\n                    var sheetsGroupWidth = sheetsGroup[0].offsetWidth;\n                    var itemPosition;\n\n                    if (that._isRtl) {\n                        if (itemOffset < 0) {\n                            itemPosition = currentScrollOffset + itemOffset - (sheetsGroupWidth - currentScrollOffset);\n                        } else if (itemOffset + itemWidth > sheetsGroupWidth) {\n                            itemPosition = currentScrollOffset + itemOffset - itemWidth;\n                        }\n                    } else {\n                        if (currentScrollOffset + sheetsGroupWidth < itemOffset + itemWidth) {\n                            itemPosition = itemOffset + itemWidth - sheetsGroupWidth;\n                        } else if (currentScrollOffset > itemOffset) {\n                            itemPosition = itemOffset;\n                        }\n                    }\n\n                    sheetsGroup.finish().animate({ \"scrollLeft\": itemPosition }, \"fast\", \"linear\", function() {\n                        that._toggleScrollButtons();\n                    });\n                },\n\n                _sheetsGroup: function() {\n                    return this._sheetsWrapper().find(\"ul\");\n                },\n\n                _sheetsWrapper: function() {\n                    return this.element.find(DOT + SheetsBar.classNames.sheetsBarItems);\n                },\n\n                _scrollSheetsByDelta: function(delta) {\n                    var that = this;\n                    var sheetsGroup = that._sheetsGroup();\n                    var scrLeft = kendo.scrollLeft(sheetsGroup);\n\n                    sheetsGroup.finish().animate({ \"scrollLeft\": scrLeft + delta }, \"fast\", \"linear\", function() {\n                        if (that._nowScrollingSheets) {\n                            that._scrollSheetsByDelta(delta);\n                        } else {\n                            that._toggleScrollButtons();\n                        }\n                    });\n                }\n            });\n\n            kendo.spreadsheet.SheetsBar = SheetsBar;\n            $.extend(true, SheetsBar, { classNames: sheetsBarClassNames });\n        })(window.kendo);\n\n    (function(kendo) {\n\n            var $ = kendo.jQuery;\n            var Widget = kendo.ui.Widget;\n            var classNames = {\n                details: \"k-details\",\n                button: \"k-button\",\n                detailsSummary: \"k-details-summary\",\n                detailsContent: \"k-details-content\",\n                icon: \"k-icon\",\n                iconCollapseName: \"caret-br\",\n                iconExpandName: \"caret-alt-right\",\n                iconSearchName: \"search\",\n                textbox: \"k-textbox\",\n                wrapper: \"k-spreadsheet-filter-menu\",\n                filterByCondition: \"k-spreadsheet-condition-filter\",\n                filterByValue: \"k-spreadsheet-value-filter\",\n                valuesTreeViewWrapper: \"k-spreadsheet-value-treeview-wrapper\",\n                actionButtons: \"k-actions\"\n            };\n\n            kendo.spreadsheet.messages.filterMenu = {\n                all: \"All\",\n                sortAscending: \"Sort range A to Z\",\n                sortDescending: \"Sort range Z to A\",\n                filterByValue: \"Filter by value\",\n                filterByCondition: \"Filter by condition\",\n                apply: \"Apply\",\n                search: \"Search\",\n                addToCurrent: \"Add to current selection\",\n                clear: \"Clear\",\n                blanks: \"(Blanks)\",\n                operatorNone: \"None\",\n                and: \"AND\",\n                or: \"OR\",\n                operators: {\n                    string: {\n                        contains: \"Text contains\",\n                        doesnotcontain: \"Text does not contain\",\n                        startswith: \"Text starts with\",\n                        endswith: \"Text ends with\",\n                        matches: \"Text matches\",\n                        doesnotmatch: \"Text does not match\"\n                    },\n                    date: {\n                        eq:  \"Date is\",\n                        neq: \"Date is not\",\n                        lt:  \"Date is before\",\n                        gt:  \"Date is after\"\n                    },\n                    number: {\n                        eq: \"Is equal to\",\n                        neq: \"Is not equal to\",\n                        gte: \"Is greater than or equal to\",\n                        gt: \"Is greater than\",\n                        lte: \"Is less than or equal to\",\n                        lt: \"Is less than\"\n                    }\n                }\n            };\n\n            var Details = Widget.extend({\n                init: function(element, options) {\n                    Widget.fn.init.call(this, element, options);\n\n                    this.element.addClass(FilterMenu.classNames.details);\n\n                    this._summary = this.element.find(\".\" + FilterMenu.classNames.detailsSummary)\n                        .on(\"click\", this._toggle.bind(this));\n\n                    var iconName = options.expanded ? FilterMenu.classNames.iconCollapseName : FilterMenu.classNames.iconExpandName;\n                    this._icon = $(kendo.ui.icon(iconName))\n                        .prependTo(this._summary);\n\n                    this._container = kendo.wrap(this._summary.next(), true);\n\n                    if (!options.expanded) {\n                        this._container.hide();\n                    }\n                },\n                options: {\n                    name: \"Details\"\n                },\n                events: [ \"toggle\" ],\n                visible: function() {\n                    return this.options.expanded;\n                },\n                toggle: function(show) {\n                    var animation = kendo.fx(this._container).expand(\"vertical\");\n\n                    animation.stop()[show ? \"reverse\" : \"play\"]();\n                    kendo.ui.icon(this._icon, { icon: show ? FilterMenu.classNames.iconExpandName : FilterMenu.classNames.iconCollapseName });\n\n                    this.options.expanded = !show;\n                },\n                _toggle: function() {\n                    var show = this.visible();\n                    this.toggle(show);\n                    this.trigger(\"toggle\", { show: show });\n                }\n            });\n\n            kendo.data.binders.spreadsheetFilterValue = kendo.data.Binder.extend({\n                init: function(element, bindings, options) {\n                    kendo.data.Binder.fn.init.call(this, element, bindings, options);\n\n                    this._change = this.change.bind(this);\n                    $(this.element).on(\"change\", this._change);\n                },\n                refresh: function() {\n                    var that = this,\n                        value = that.bindings.spreadsheetFilterValue.get(); //get the value from the View-Model\n\n                    $(that.element).val(value instanceof Date ? \"\" : value);\n                },\n                change: function() {\n                    var value = this.element.value;\n                    this.bindings.spreadsheetFilterValue.set(value); //update the View-Model\n                }\n            });\n\n            kendo.data.binders.widget.spreadsheetFilterValue = kendo.data.Binder.extend({\n                init: function(widget, bindings, options) {\n                    kendo.data.Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                    this.widget = widget;\n                    this._change = this.change.bind(this);\n                    this.widget.first(\"change\", this._change);\n                },\n                refresh: function() {\n                    var binding = this.bindings.spreadsheetFilterValue,\n                        value = binding.get(),\n                        type = $(this.widget.element).data(\"filterType\");\n\n                    if ((type === \"date\" && value instanceof Date) || (type === \"number\" && !isNaN(value))) {\n                        this.widget.value(value);\n                    } else {\n                        this.widget.value(null);\n                    }\n                },\n                change: function() {\n                    var value = this.widget.value(),\n                        binding = this.bindings.spreadsheetFilterValue;\n\n                    binding.set(value);\n                }\n            });\n\n            var templates = {\n                filterByValue: (data) =>\n                    `<div class='${classNames.detailsSummary}'>${data.messages.filterByValue}</div>` +\n                    `<div class='${classNames.detailsContent}'>` +\n                        \"<div class='k-searchbox k-input k-input-md k-rounded-md k-input-solid'>\" +\n                            kendo.ui.icon({ icon: \"search\", iconClass: \"k-input-icon\" }) +\n                            `<input class='k-input-inner' autocomplete='off' placeholder='${data.messages.search}' data-${data.ns}bind='events: { input: filterValues }' />` +\n                        \"</div>\" +\n                        `<div data-${data.ns}bind='visible: hasActiveSearch'><input class='k-checkbox k-checkbox-md k-rounded-md' type='checkbox' data-${data.ns}bind='checked: appendToSearch' id='_${data.guid}'/><label class='k-checkbox-label' for='_${data.guid}'>${data.messages.addToCurrent}</label></div>` +\n                        `<div class='${classNames.valuesTreeViewWrapper}'>` +\n                            `<div data-${data.ns}role='treeview' ` +\n                                `bind:data-${data.ns}checkboxes='checkboxesConfig' `+\n                                `data-${data.ns}bind='source: valuesDataSource, events: { check: valuesChange, select: valueSelect }' `+\n                                \"></div>\" +\n                        \"</div>\" +\n                    \"</div>\",\n                filterByCondition: (data) =>\n                    `<div class='${classNames.detailsSummary}'>${data.messages.filterByCondition}</div>` +\n                    `<div class='${classNames.detailsContent}'>` +\n                        '<div>' +\n                            '<select ' +\n                                `aria-label=\"${data.messages.filterByCondition}\" ` +\n                                `data-${data.ns}role=\"dropdownlist\"` +\n                                `data-${data.ns}bind=\"value: operator, source: operators, events: { change: operatorChange } \"` +\n                                `data-${data.ns}value-primitive=\"false\"` +\n                                `data-${data.ns}option-label=\"${data.messages.operatorNone}\"` +\n                                `data-${data.ns}height=\"auto\"` +\n                                `data-${data.ns}text-field=\"text\"` +\n                                `data-${data.ns}value-field=\"unique\">`+\n                            '</select>'+\n                        '</div>' +\n\n                        `<div data-${data.ns}bind=\"visible: isString\">` +\n                            `<input aria-label=\"string-value\" data-filter-type=\"string\" data-${data.ns}bind=\"spreadsheetFilterValue: customFilter.criteria[0].value\" class=\"k-textbox\" />`+\n                        '</div>' +\n\n                        `<div data-${data.ns}bind=\"visible: isNumber\">` +\n                            `<input aria-label=\"number-value\" data-filter-type=\"number\" data-${data.ns}role=\"numerictextbox\" data-${data.ns}bind=\"spreadsheetFilterValue: customFilter.criteria[0].value\" />`+\n                        '</div>' +\n\n                        `<div data-${data.ns}bind=\"visible: isDate\">` +\n                            `<input aria-label=\"date-value\" data-filter-type=\"date\" data-${data.ns}role=\"datepicker\" data-${data.ns}bind=\"spreadsheetFilterValue: customFilter.criteria[0].value\" />`+\n                        '</div>' +\n                    \"</div>\",\n                menuItem: (data) =>\n                    `<li data-command='${data.command}' data-dir='${data.dir}'>` +\n                        `${kendo.ui.icon(data.iconClass)}${data.text}` +\n                    \"</li>\",\n                actionButtons: (data) =>\n                    `<button data-${data.ns}bind='click: apply' class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'><span class='k-button-text'>${data.messages.apply}</span></button>` +\n                    `<button data-${data.ns}bind='click: clear' class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'><span class='k-button-text'>${data.messages.clear}</span></button>`\n            };\n\n            function distinctValues(values) {\n                var hash = {};\n                var result = [];\n\n                for (var i = 0; i < values.length; i++) {\n                    if (!hash[values[i].value]) {\n                        hash[values[i].value] = values[i];\n                        result.push(values[i]);\n                    } else if (!hash[values[i].value].checked && values[i].checked) {\n                        hash[values[i].value].checked = true;\n                    }\n                }\n\n                return result;\n            }\n\n            function filter(dataSource, query) {\n                var hasVisibleChildren = false;\n                var data = dataSource instanceof kendo.data.HierarchicalDataSource && dataSource.data();\n                var valuesFilter = this;\n                var values = this.values;\n                for (var i = 0; i < data.length; i++) {\n                    var item = data[i];\n                    var text = item.text.toString().toLocaleLowerCase(kendo.culture().name);\n                    var itemVisible = query === true || query === \"\" || text.indexOf(query) >= 0;\n                    var filterSpread = filter.bind(valuesFilter);\n                    var anyVisibleChildren = filterSpread(item.children, query); // pass true if parent matches\n\n                    hasVisibleChildren = hasVisibleChildren || anyVisibleChildren || itemVisible;\n                    item.hidden = !itemVisible && !anyVisibleChildren;\n\n                    if (query.length || (values && !values.length)) {\n                        item.checked = !item.hidden;\n                    } else if (values && values.indexOf(item.text) != -1){\n                        item.checked = true;\n                    }\n                }\n\n                if (data) {\n                    // re-apply filter on children\n                    dataSource.filter({ field: \"hidden\", operator: \"neq\", value: true });\n                }\n\n                return hasVisibleChildren;\n            }\n\n            function uncheckAll(dataSource) {\n                var data = dataSource instanceof kendo.data.HierarchicalDataSource && dataSource.data();\n\n                for (var i = 0; i < data.length; i++) {\n                    var item = data[i];\n                    item.checked = false;\n\n                    if (item.hasChildren) {\n                        uncheckAll(item.children);\n                    }\n                }\n            }\n\n            var FilterMenuViewModel = kendo.spreadsheet.FilterMenuViewModel = kendo.data.ObservableObject.extend({\n                valuesChange: function(e) {\n                    var dataSource = e ? e.sender.dataSource : this.valuesDataSource;\n                    var checked = function(item) {\n                        return item.checked;\n                    };\n                    var value = function(item) {\n                        return item.dataType === \"date\" ? kendo.spreadsheet.dateToNumber(item.value) : item.value;\n                    };\n                    var unique = function(value, index, array) {\n                        return array.lastIndexOf(value) === index;\n                    };\n                    var data = dataSource.data();\n                    var values = data.toJSON()[0].items;\n                    var blanks = values.filter(function(item) {\n                        return item.dataType === \"blank\";\n                    });\n\n                    blanks = blanks.length ? blanks[0].checked : false;\n                    values = values.filter(checked).map(value);\n\n                    if (this.appendToSearch && this.valueFilter && this.valueFilter.values.length) {\n                        values = values.concat(this.valueFilter.values.toJSON()).sort().filter(unique);\n                    }\n\n                    this.set(\"valueFilter\", {\n                        values: values,\n                        blanks: blanks\n                    });\n                },\n                valueSelect: function(e) {\n                    e.preventDefault();\n\n                    var node = e.sender.dataItem(e.node);\n                    node.set(\"checked\", !node.checked);\n                },\n                hasActiveSearch: false,\n                appendToSearch: false,\n                filterValues: function(e) {\n                    var query = typeof e == \"string\" ? e : $(e.target).val().toLocaleLowerCase(kendo.culture().name);\n                    var dataSource = this.valuesDataSource;\n\n                    this.set(\"hasActiveSearch\", !!query);\n\n                    var filterSpread = filter.bind(this.valueFilter);\n                    uncheckAll(dataSource);\n                    filterSpread(dataSource, query);\n                },\n                reset: function() {\n                    this.set(\"customFilter\", { logic: \"and\", criteria: [ { operator: null, value: null } ] });\n                    this.set(\"valueFilter\", { values: [] });\n                },\n                operatorChange: function(e) {\n                    var dataItem = e.sender.dataItem();\n                    this.set(\"operatorType\", dataItem.type);\n\n                    // https://github.com/telerik/kendo-ui-core/issues/3317 - when switching from Value\n                    // filter to “filter by condition”, the customFilter property is lost.\n                    if (!this.get(\"customFilter\")) {\n                        this.reset();\n                    }\n\n                    this.set(\"customFilter.criteria[0].operator\", dataItem.value);\n                },\n                isNone: function() {\n                    return this.get(\"operatorType\") === undefined;\n                },\n                isString: function() {\n                    return this.get(\"operatorType\") === \"string\";\n                },\n                isNumber: function() {\n                    return this.get(\"operatorType\") === \"number\";\n                },\n                isDate: function() {\n                    return this.get(\"operatorType\") === \"date\";\n                }\n            });\n\n            function flattenOperators(operators) {\n                var messages = kendo.spreadsheet.messages.filterMenu.operators;\n                var result = [];\n                for (var type in operators) {\n                    if (!operators.hasOwnProperty(type)) {\n                        continue;\n                    }\n\n                    for (var operator in operators[type]) {\n                        if (!operators[type].hasOwnProperty(operator)) {\n                            continue;\n                        }\n\n                        result.push({\n                            text: messages[type][operator],\n                            value: operator,\n                            unique: type + \"_\" + operator,\n                            type: type\n                        });\n                    }\n                }\n                return result;\n            }\n\n            var FilterMenuController = kendo.spreadsheet.FilterMenuController = {\n                valuesTree: function(range, column) {\n                    return [{\n                        text: kendo.spreadsheet.messages.filterMenu.all,\n                        expanded: true,\n                        checked: false,\n                        items: this.values(range.resize({ top: 1 }), column)\n                    }];\n                },\n                values: function(range, column) {\n                    var values = [];\n                    var messages = kendo.spreadsheet.messages.filterMenu;\n                    var columnRange = range.column(column);\n                    var sheet = range.sheet();\n\n                    columnRange.forEachCell(function(row, col, cell) {\n                        var checked = true;\n                        if (sheet.isHiddenRow(row)) {\n                            checked = false;\n                        }\n\n                        var value = cell.value;\n                        var dataType = cell.dataType;\n                        var text = cell.text;\n\n                        if (value === undefined) {\n                            dataType = \"blank\";\n                        } else if (cell.format) {\n                            dataType = kendo.spreadsheet.formatting.type(value, cell.format);\n                        } else {\n                            dataType = typeof value;\n                        }\n\n                        if (value !== null && cell.format) {\n                            text = kendo.spreadsheet.formatting.text(value, cell.format);\n                        } else {\n                            text = dataType == \"blank\" ? messages.blanks : value;\n                        }\n\n                        if (dataType === \"percent\" || dataType === \"currency\") { //treat percent as number\n                            dataType = \"number\";\n                        }\n\n                        if (dataType === \"date\") {\n                            value = kendo.spreadsheet.numberToDate(value);\n                        }\n\n                        values.push({\n                            dataType: dataType,\n                            value: value,\n                            text: text,\n                            checked: checked\n                        });\n                    });\n\n                    values = distinctValues(values);\n\n                    values.sort(function(a, b) {\n                        if (a.dataType === b.dataType) {\n                            return 0;\n                        }\n\n                        if (a.dataType === \"blank\" || b.dataType === \"blank\") {\n                            return a.dataType === \"blank\" ? -1 : 1;\n                        }\n\n                        if (a.dataType === \"number\" || b.dataType === \"number\") {\n                            return a.dataType === \"number\" ? -1 : 1;\n                        }\n\n                        if (a.dataType === \"date\" || b.dataType === \"date\") {\n                            return a.dataType === \"date\" ? -1 : 1;\n                        }\n\n                        return 0;\n                    });\n\n                    return values;\n                },\n\n                filterType: function(range, column) {\n                    // 1. try to infer type from current filter\n                    var sheet = range.sheet();\n                    var filter = this.filterForColumn(column, sheet);\n                    var type;\n\n                    filter = filter && filter.filter.toJSON();\n\n                    if (filter && filter.filter == \"custom\") {\n                        var value = filter.criteria[0].value;\n\n                        if (value instanceof Date) {\n                            type = \"date\";\n                        } else if (typeof value == \"string\") {\n                            type = \"string\";\n                        } else if (typeof value == \"number\") {\n                            type = \"number\";\n                        }\n                    }\n\n                    if (!type) {\n                        // 2. try to infer type from column data\n                        var topValue = this.values(range.row(1), column)[0];\n                        type = topValue && topValue.dataType;\n\n                        if (type == \"blank\") {\n                            type = null;\n                        }\n                    }\n\n                    return type;\n                },\n\n                filterForColumn: function(column, sheet) {\n                    var allFilters = sheet.filter();\n                    var filters;\n\n                    if (allFilters) {\n                        filters =  allFilters.columns.filter(function(item) {\n                            return item.index === column;\n                        })[0];\n                    }\n\n                    return filters;\n                },\n\n                filter: function(column, sheet) {\n                    var columnFilters = this.filterForColumn(column, sheet);\n\n                    if (!columnFilters) {\n                        return;\n                    }\n\n                    var options = columnFilters.filter.toJSON();\n                    var type = options.filter;\n\n                    delete options.filter;\n\n                    var result = {\n                        type: type,\n                        options: options\n                    };\n\n                    var criteria = options.criteria;\n                    if (criteria && criteria.length) {\n                        result.operator = criteria[0].operator;\n                    }\n\n                    return result;\n                }\n            };\n\n            var FilterMenu = Widget.extend({\n                init: function(element, options) {\n                    Widget.call(this, element, options);\n\n                    this.element.addClass(FilterMenu.classNames.wrapper);\n\n                    this.viewModel = new FilterMenuViewModel({\n                        active: \"value\",\n                        checkboxesConfig: { checkChildren: true },\n                        operator: null,\n                        operators: flattenOperators(this.options.operators),\n                        clear: this.clear.bind(this),\n                        apply: this.apply.bind(this)\n                    });\n\n                    this._filterInit();\n                    this._popup();\n                    this._sort();\n                    this._filterByCondition();\n                    this._filterByValue();\n                    this._actionButtons();\n                },\n\n                options: {\n                    name: \"FilterMenu\",\n                    column: 0,\n                    range: null,\n                    operators: {\n                        string: {\n                            contains: \"Text contains\",\n                            doesnotcontain: \"Text does not contain\",\n                            startswith: \"Text starts with\",\n                            endswith: \"Text ends with\",\n                            matches: \"Text matches\",\n                            doesnotmatch: \"Text does not match\"\n                        },\n                        date: {\n                            eq:  \"Date is\",\n                            neq: \"Date is not\",\n                            lt:  \"Date is before\",\n                            gt:  \"Date is after\"\n                        },\n                        number: {\n                            eq: \"Is equal to\",\n                            neq: \"Is not equal to\",\n                            gte: \"Is greater than or equal to\",\n                            gt: \"Is greater than\",\n                            lte: \"Is less than or equal to\",\n                            lt: \"Is less than\"\n                        }\n                    }\n                },\n\n                events: [\n                    \"action\"\n                ],\n\n                destroy: function() {\n                    Widget.fn.destroy.call(this);\n\n                    this.menu.destroy();\n                    this.valuesTreeView.destroy();\n                    this.popup.destroy();\n                },\n\n                openFor: function(anchor, event) {\n                    if ($(anchor).hasClass(\"k-spreadsheet-view-size\")) {\n                        // on touch devices this element will sit above to\n                        // enable scrolling; it's not useful as an anchor,\n                        // use event coords instead.\n                        this.popup.open(event.pageX, event.pageY);\n                    } else {\n                        this.popup.setOptions({ anchor: anchor });\n                        this.popup.open();\n                    }\n                },\n\n                close: function() {\n                    this.popup.close();\n                },\n\n                clear: function() {\n                    this.action({\n                        command: \"ClearFilterCommand\",\n                        options: {\n                            column: this.options.column\n                        }\n                    });\n                    this.viewModel.reset();\n                    this.close();\n                },\n\n                apply: function() {\n                    this._active();\n\n                    var options = {\n                        operatingRange: this.options.range,\n                        column: this.options.column\n                    };\n\n                    var valueFilter;\n                    var customFilter;\n\n                    if (this.viewModel.active === \"value\") {\n                        this.viewModel.valuesChange({ sender: this.valuesTreeView });\n                        valueFilter = this.viewModel.valueFilter.toJSON();\n\n                        if (valueFilter.blanks || (valueFilter.values && valueFilter.values.length)) {\n                            options.valueFilter = valueFilter;\n                        }\n                    } else if (this.viewModel.active === \"custom\") {\n                        customFilter = this.viewModel.customFilter.toJSON();\n\n                        if (customFilter.criteria.length && customFilter.criteria[0].value !== null) {\n                            options.customFilter = customFilter;\n                        }\n                    }\n\n                    if (options.valueFilter || options.customFilter) {\n                        this.action({ command: \"ApplyFilterCommand\", options: options });\n                    }\n                },\n\n                action: function(options) {\n                    this.trigger(\"action\", $.extend({ }, options));\n                },\n\n                _filterInit: function() {\n                    var column = this.options.column;\n                    var range = this.options.range;\n                    var sheet = range.sheet();\n                    var activeFilter = FilterMenuController.filter(column, sheet);\n\n                    if (activeFilter) {\n                        var filterType = FilterMenuController.filterType(range, column);\n\n                        this.viewModel.set(\"active\", activeFilter.type);\n                        this.viewModel.set(activeFilter.type + \"Filter\", activeFilter.options);\n\n                        if (activeFilter.type == \"custom\") {\n                            this.viewModel.set(\"operator\", filterType + \"_\" + activeFilter.operator);\n                            this.viewModel.set(\"operatorType\", filterType);\n                        }\n                    } else {\n                        this.viewModel.reset();\n                    }\n                },\n\n                _popup: function() {\n                    this.popup = this.element.kendoPopup({\n                        copyAnchorStyles: false\n                    }).data(\"kendoPopup\");\n                },\n\n                _sort: function() {\n                    var template = kendo.template(FilterMenu.templates.menuItem);\n                    var messages = kendo.spreadsheet.messages.filterMenu;\n                    var items = [\n                        { command: \"sort\", dir: \"asc\", text: messages.sortAscending, iconClass: \"sort-asc\" },\n                        { command: \"sort\", dir: \"desc\", text: messages.sortDescending, iconClass: \"sort-desc\" }\n                    ];\n\n                    var ul = $(\"<ul></ul>\", {\n                        \"html\": kendo.render(template, items)\n                    }).appendTo(this.element);\n\n                    this.menu = ul.kendoMenu({\n                        orientation: \"vertical\",\n                        select: function(e) {\n                            var dir = $(e.item).data(\"dir\");\n                            var range = this.options.range.resize({ top: 1 });\n                            var options = {\n                                value: dir,\n                                sheet: false,\n                                operatingRange: range,\n                                column: this.options.column\n                            };\n\n                            this.action({ command: \"SortCommand\", options: options });\n                        }.bind(this)\n                    }).data(\"kendoMenu\");\n                },\n\n                _appendTemplate: function(template, className, details, expanded) {\n                    var compiledTemplate = kendo.template(template);\n                    var wrapper = $(\"<div class='\" + className + \"'/>\").html(compiledTemplate({\n                        messages: kendo.spreadsheet.messages.filterMenu,\n                        guid: kendo.guid(),\n                        ns: kendo.ns\n                    }));\n\n                    this.element.append(wrapper);\n\n                    if (details) {\n                        details = new Details(wrapper, { expanded: expanded, toggle: this._detailToggle.bind(this) });\n                    }\n\n                    kendo.bind(wrapper, this.viewModel);\n\n                    return wrapper;\n                },\n\n                _detailToggle: function(e) {\n                    this.element\n                        .find(\"[\" + kendo.attr(\"role\") + \"=details]\")\n                        .not(e.sender.element)\n                        .data(\"kendoDetails\")\n                        .toggle(!e.show);\n                },\n\n                _filterByCondition: function() {\n                    var isExpanded = this.viewModel.active === \"custom\";\n                    this._appendTemplate(FilterMenu.templates.filterByCondition, FilterMenu.classNames.filterByCondition, true, isExpanded);\n                },\n\n                _filterByValue: function() {\n                    var isExpanded = this.viewModel.active === \"value\";\n                    var wrapper = this._appendTemplate(FilterMenu.templates.filterByValue, FilterMenu.classNames.filterByValue, true, isExpanded);\n\n                    this.valuesTreeView = wrapper.find(\"[\" + kendo.attr(\"role\") + \"=treeview]\").data(\"kendoTreeView\");\n\n                    var values = FilterMenuController.valuesTree(this.options.range, this.options.column);\n\n                    this.viewModel.set(\"valuesDataSource\", new kendo.data.HierarchicalDataSource({ data: values, accentFoldingFiltering: kendo.culture().name }));\n                },\n\n                _actionButtons: function() {\n                    this._appendTemplate(FilterMenu.templates.actionButtons, FilterMenu.classNames.actionButtons, false);\n                },\n\n                _active: function() {\n                    var activeContainer = this.element.find(\"[\" + kendo.attr(\"role\") + \"=details]\").filter(function(index, element) {\n                        return $(element).data(\"kendoDetails\").visible();\n                    });\n\n                    if (activeContainer.hasClass(FilterMenu.classNames.filterByValue)) {\n                        this.viewModel.set(\"active\", \"value\");\n                    } else if (activeContainer.hasClass(FilterMenu.classNames.filterByCondition)) {\n                        this.viewModel.set(\"active\", \"custom\");\n                    }\n                }\n            });\n\n            kendo.spreadsheet.FilterMenu = FilterMenu;\n            $.extend(true, FilterMenu, { classNames: classNames, templates: templates });\n\n        })(window.kendo);\n\n    (function(kendo) {\n\n        kendo.spreadsheet.messages.workbook = {\n            defaultSheetName: \"Sheet\"\n        };\n\n        kendo.spreadsheet.messages.view = {\n            nameBox: \"Name Box\",\n            formulaInput: \"Formula Input\",\n            errors: {\n                openUnsupported: \"Unsupported format. Please select an .xlsx file.\",\n                shiftingNonblankCells: \"Cannot insert cells due to data loss possibility. Select another insert location or delete the data from the end of your worksheet.\",\n                insertColumnWhenRowIsSelected: \"Cannot insert column when all columns are selected.\",\n                insertRowWhenColumnIsSelected: \"Cannot insert row when all rows are selected.\",\n                filterRangeContainingMerges: \"Cannot create a filter within a range containing merges\",\n                sortRangeContainingMerges: \"Cannot sort a range containing merges\",\n                cantSortMultipleSelection: \"Cannot sort multiple selection\",\n                cantSortNullRef: \"Cannot sort empty selection\",\n                cantSortMixedCells: \"Cannot sort range containing cells of mixed shapes\",\n                validationError: \"The value that you entered violates the validation rules set on the cell.\",\n                cannotModifyDisabled: \"Cannot modify disabled cells.\",\n                insertRowBelowLastRow: \"Cannot insert row below the last row.\",\n                insertColAfterLastCol: \"Cannot insert column to the right of the last column.\"\n            },\n            tabs: {\n                file: \"File\",\n                home: \"Home\",\n                insert: \"Insert\",\n                format: \"Format\",\n                data: \"Data\",\n                view: \"View\"\n            }\n        };\n\n        kendo.spreadsheet.messages.menus = {\n            \"cut\": \"Cut\",\n            \"copy\": \"Copy\",\n            \"paste\": \"Paste\",\n            \"merge\": \"Merge\",\n            \"unmerge\": \"Unmerge\",\n            \"delete\": \"Delete\",\n            \"hide\": \"Hide\",\n            \"unhide\": \"Unhide\",\n            \"bringToFront\": \"Bring to front\",\n            \"sendToBack\": \"Send to back\"\n        };\n    })(window.kendo);\n\n    (function(kendo) {\n        let $ = kendo.jQuery;\n\n        if (kendo.PDFMixin) {\n            let override_drawPDF = function(options) {\n                var result = new $.Deferred();\n                var callback = function(group) {\n                    result.resolve(group);\n                };\n                switch(options.area) {\n                case \"workbook\":\n                    options.workbook.draw(options, callback);\n                    break;\n                case \"sheet\":\n                    options.workbook.activeSheet().draw(options, callback);\n                    break;\n                case \"selection\":\n                    options.workbook.activeSheet().selection().draw(options, callback);\n                    break;\n                }\n\n                return result.promise();\n            };\n\n             let overrideSaveAsPDF = function(options) {\n                if (this.events.indexOf(\"pdfExport\") === -1) {\n                    kendo.PDFMixin.extend(this);\n                    this.saveAsPDF = overrideSaveAsPDF;\n                    this._drawPDF = override_drawPDF;\n                }\n\n                var progress = new $.Deferred();\n                var promise = progress.promise();\n                var args = { promise: promise };\n                if (this.trigger(\"pdfExport\", args)) {\n                    return;\n                }\n\n                this._drawPDF(options, progress)\n                .then(function(root) {\n                    let pdfResultPromise = options.forceProxy\n                        ? kendo.pdf.exportPDF(root) // produce data URI for proxy\n                        : kendo.pdf.exportPDFToBlob(root);\n                    return kendo.convertPromiseToDeferred(pdfResultPromise);\n                })\n                .done(function(dataURI) {\n                    kendo.saveAs({\n                        dataURI: dataURI,\n                        fileName: options.fileName,\n                        proxyURL: options.proxyURL,\n                        forceProxy: options.forceProxy,\n                        proxyTarget: options.proxyTarget\n                    });\n\n                    progress.resolve();\n                })\n                .fail(function(err) {\n                    progress.reject(err);\n                });\n\n                return promise;\n            };\n\n            kendo.spreadsheet.Workbook.prototype.saveAsPDF = overrideSaveAsPDF;\n\n            kendo.spreadsheet.Workbook.prototype._drawPDF = override_drawPDF;\n        }\n    })(kendo);\n\n    const __meta__ = {\n        id: \"spreadsheet\",\n        name: \"Spreadsheet\",\n        category: \"web\",\n        description: \"Spreadsheet component\",\n        depends: [\n            \"core\", \"binder\", \"colorpicker\", \"combobox\", \"data\", \"dom\", \"dropdownlist\",\n            \"menu\", \"ooxml\", \"popup\", \"sortable\", \"toolbar\", \"treeview\",\n            \"window\", \"validator\", \"excel\", \"pdf\", \"drawing\", \"list\", \"spreadsheet.common\"]\n    };\n\n    (function(kendo, undefined$1) {\n        if (kendo.support.browser.msie && kendo.support.browser.version < 9) {\n            return;\n        }\n\n        const K_ACTIVE = \"k-active\";\n        let $ = kendo.jQuery;\n        let Widget = kendo.ui.Widget;\n        let NS = \".kendoSpreadsheet\";\n        let DOT = \".\";\n        let commonEngine = kendo.spreadsheet.commonEngine;\n        let FormulaInput = kendo.spreadsheet.FormulaInput;\n        let SheetsBar = kendo.spreadsheet.SheetsBar;\n\n        function toActionSelector(selectors) {\n            return selectors.map(function(action) {\n                return '[data-action=\"' + action + '\"]';\n            }).join(\",\");\n        }\n\n        let COMPOSITE_UNAVAILABLE_ACTION_SELECTORS = toActionSelector(['cut', 'copy', 'paste', 'insert-left', 'insert-right', 'insert-above', 'insert-below']);\n        let UNHIDE_ACTION_SELECTORS = toActionSelector(['unhide-row', 'unhide-column']);\n        let classNames = {\n            wrapper: \"k-spreadsheet\"\n        };\n\n        let viewClassNames = commonEngine.View.classNames;\n\n        const SPREADSHEET_CONTENT_HTML_TEMPLATE = ({ messages }) => `\n                            <div ref-header-container class=\"k-spreadsheet-header\"><div ref-header-menu></div><div ref-header-toolbar></div></div>\n                            <div class=\"k-spreadsheet-action-bar\">\n                                <div class=\"k-spreadsheet-name-editor\">\n                                    <input ref-namebox-input title=\"${messages.nameBox || \"Name Box\"}\" aria-label=\"${messages.nameBox || \"Name Box\"}\"></input>\n                                </div>\n                                <div class=\"k-spreadsheet-formula-bar\">\n                                    ${kendo.ui.icon(\"formula-fx\")}\n                                    <div class=\"k-spreadsheet-formula-input\"\n                                        role=\"combobox\"\n                                        title=\"${messages.view.formulaInput}\"\n                                        aria-haspopup=\"menu\"\n                                        aria-expanded=\"false\"\n                                        contentEditable=\"true\"\n                                        spellCheck=\"false\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"k-spreadsheet-view\">\n                                <div class=\"k-spreadsheet-fixed-container\"></div>\n                                <div class=\"k-spreadsheet-scroller\">\n                                    <div class=\"k-spreadsheet-view-size\"></div>\n                                </div>\n                                <div tabIndex=\"0\" class=\"k-spreadsheet-clipboard\" contentEditable=\"true\" ></div>\n                                <div contentEditable=\"true\"\n                                    spellCheck=\"false\"\n                                    role=\"combobox\"\n                                    title=\"${messages.view.formulaInput}\"\n                                    aria-haspopup=\"menu\"\n                                    aria-expanded=\"false\"\n                                    class=\"k-spreadsheet-formula-input k-spreadsheet-cell-editor\">\n                                </div>\n                            </div>\n                            <div ref-sheets-bar></div>`;\n\n        const CELL_CONTEXT_MENU = ({ messages }) => `\n                    <ul class=\"${viewClassNames.cellContextMenu}\">\n                        <li data-action=\"cut\">${messages.menus.cut}</li>\n                        <li data-action=\"copy\">${messages.menus.copy}</li>\n                        <li data-action=\"paste\">${messages.menus.paste}</li>\n                        <li class=\"k-separator\"></li>\n                        <li data-action=\"merge\">${messages.menus.merge}</li>\n                        <li data-action=\"unmerge\">${messages.menus.unmerge}</li>\n                    </ul>`;\n\n        const ROW_HEADER_CONTEXT_MENU = ({ messages }) => `\n                    <ul class=\"${viewClassNames.rowHeaderContextMenu}\">\n                        <li data-action=\"cut\">${messages.menus.cut}</li>\n                        <li data-action=\"copy\">${messages.menus.copy}</li>\n                        <li data-action=\"paste\">${messages.menus.paste}</li>\n                        <li class=\"k-separator\"></li>\n                        <li data-action=\"delete-row\">${messages.menus.delete}</li>\n                        <li data-action=\"hide-row\">${messages.menus.hide}</li>\n                        <li data-action=\"unhide-row\">${messages.menus.unhide}</li>\n                    </ul>`;\n\n        const COL_HEADER_CONTEXT_MENU = ({ messages }) => `\n                    <ul class=\"${viewClassNames.colHeaderContextMenu}\">\n                        <li data-action=\"cut\">${messages.menus.cut}</li>\n                        <li data-action=\"copy\">${messages.menus.copy}</li>\n                        <li data-action=\"paste\">${messages.menus.paste}</li>\n                        <li class=\"k-separator\"></li>\n                        <li data-action=\"delete-column\">${messages.menus.delete}</li>\n                        <li data-action=\"hide-column\">${messages.menus.hide}</li>\n                        <li data-action=\"unhide-column\">${messages.menus.unhide}</li>\n                    </ul>`;\n\n        const DRAWING_CONTEXT_MENU = ({ messages }) => `\n                    <ul class=\"${viewClassNames.drawingContextMenu}\">\n                        <li data-action=\"bring-to-front\">${messages.menus.bringToFront}</li>\n                        <li data-action=\"send-to-back\">${messages.menus.sendToBack}</li>\n                        <li class=\"k-separator\"></li>\n                        <li data-action=\"delete-drawing\">${messages.menus.delete}</li>\n                    </ul>`;\n\n        kendo.spreadsheet.ContextMenu = kendo.ui.ContextMenu;\n\n        let FormulaInputStaticList = kendo.ui.StaticList.extend({\n            data: function(d) {\n                return this.dataSource.data(d);\n            },\n            itemClick: function(handler) {\n                this.bind(\"change\", function(ev) { handler(this.value()[0]); });\n            }\n        });\n\n        class FormulaInputRefArgs {\n            constructor({ list, popup }) {\n                this.current = { list, popup };\n                this.clone = function clone() {\n                    return this;\n                };\n            }\n        }\n\n        class NameBoxRefArgs {\n            constructor({ nameEditor, container }) {\n                let combo = this.initializeComboBox(container, nameEditor);\n                this.current = {\n                    value: (val) => {\n                        if (val === undefined$1) {\n                            const item = combo.value();\n                            return item ? (item.name || item) : item;\n                        } else {\n                            combo.value(val || '');\n                        }\n                    }\n                };\n\n                this.nameEditor = nameEditor;\n\n                this.clone = function clone() {\n                    return this;\n                };\n            }\n\n            initializeComboBox(container) {\n                let that = this;\n                let dataSource = new kendo.data.DataSource({\n                    transport: {\n                        read: function(options) {\n                            let data = that.nameEditor()?.readData() || [];\n                            options.success(data);\n                        },\n                        cache: false\n                    }\n                });\n\n                let combo = $(container).kendoComboBox({\n                    clearButton: false,\n                    dataTextField: \"name\",\n                    dataValueField: \"name\",\n                    template: ({ name }) => `${kendo.htmlEncode(name)}<a role='button' class='k-button-delete' href='\\\\#'>${kendo.ui.icon(\"x\")}</a>`,\n                    dataSource: dataSource,\n                    autoBind: false,\n                    ignoreCase: true,\n                    change: that.onChange.bind(that),\n                    noDataTemplate: () => \"<div></div>\",\n                    open: function() {\n                        dataSource.read();\n                    }\n                }).data(\"kendoComboBox\");\n\n                combo.input\n                    .on(\"keydown\", that.onKeyDown.bind(this));\n                combo.popup.element\n                    .addClass(\"k-spreadsheet-names-popup\")\n\n                    .on(\"mousemove\", function(ev) {\n                        // XXX: should remove this when we find a better\n                        // solution for the popup closing as we hover the\n                        // resize handles.\n                        ev.stopPropagation();\n                    })\n\n                    .on(\"click\", \".k-button-delete\", function(ev) {\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                        let item = $(ev.target).closest(\".k-list-item\");\n                        item = combo.dataItem(item);\n                        that.onDelete(item.name);\n                    });\n\n                return combo;\n            }\n\n            // Event: Handle change in ComboBox\n            onChange(event) {\n                const editor = this.nameEditor();\n                if (editor && event.sender.value()) {\n                    editor.trigger(\"select\", { name: event.sender.value() });\n                }\n            }\n\n            // Event: Delete button click within item\n            onDelete(name) {\n                this.nameEditor()?.trigger(\"delete\", { name });\n            }\n\n            // Handling keyboard events like Enter, Escape\n            onKeyDown(event) {\n                const editor = this.nameEditor();\n                if (editor) {\n                    if (event.key === 'Enter') {\n                        const name = event.target.value;\n                        editor.trigger(\"enter\", { value: name });\n                    } else if (event.key === 'Escape') {\n                        editor.trigger(\"cancel\");\n                    }\n                }\n            }\n        }\n\n        let Spreadsheet = kendo.ui.Widget.extend({\n            _renderInnerContent: function(element) {\n                $(element).append(SPREADSHEET_CONTENT_HTML_TEMPLATE(this.options));\n            },\n            init: function(element, options) {\n                let that = this;\n                Widget.fn.init.call(this, element, options);\n\n                this.options.messages = $.extend(true, {\n                    view: kendo.spreadsheet.messages.view,\n                    tabs: kendo.spreadsheet.messages.view.tabs,\n                    menus: kendo.spreadsheet.messages.menus,\n                    workbook: {\n                        defaultSheetName: \"Sheet\",\n                    }\n                }, this.options.messages);\n\n                this.element.addClass(Spreadsheet.classNames.wrapper);\n                this.element.attr(\"role\", \"application\");\n                this._renderInnerContent(this.element);\n\n                this._createFormulaInputs();\n\n                that.spreadsheetRef = this._initSpreadsheetWidget();\n\n                this._bindWorkbookEvents();\n\n                const activeSheet = this.activeSheet();\n                this._onUpdateTools({ range: activeSheet.range(activeSheet.activeCell()) });\n\n                this._resizeHandler = function() { that.resize(); };\n                $(window).on(\"resize\" + NS, this._resizeHandler);\n\n                if (this._showWatermarkOverlay) {\n                    this._showWatermarkOverlay(this.element[0]);\n                }\n            },\n            _initSpreadsheetWidget: function() {\n                let that = this;\n                let widgetOptions = $.extend({},\n                    that.options, {\n                    sheetsbar: that.options.sheetsbar != false ? that.options.sheetsbar : {},\n                    formulaBarInputRef: new FormulaInputRefArgs({\n                        list: this._formulaBarInputRefList,\n                        popup: this._formulaBarInputRefPopup\n                    }),\n                    formulaCellInputRef: new FormulaInputRefArgs({\n                        list: this._formulaCellInputRefList,\n                        popup: this._formulaCellInputRefPopup\n                    }),\n                    nameBoxRef: new NameBoxRefArgs({\n                        container: that.element.find('.k-spreadsheet-name-editor [ref-namebox-input]'),\n                        nameEditor: function() {\n                            return that.spreadsheetRef?.view.nameEditor;\n                        }\n                    }),\n                    createFilterMenu: function(options) {\n                        let element = $(\"<div></div>\").appendTo(that.element);\n                        return new kendo.spreadsheet.FilterMenu(element, options);\n                    },\n                    createTabStrip: function(options) {\n                        if (that.options.toolbar) {\n                            that._initHeader();\n\n                            return {\n                                focus: function() { that.menu.wrapper.trigger(\"focus\"); },\n                                select: function(name) { that.menu.element.find(`li[ref-tab-name=\"${name}\"]`).click(); },\n                                destroy: function() { that.menu.destroy(); }\n                            };\n                        }\n                    },\n                    createSheetEditor: function(options) {\n                        that.sheetsBar._createEditor();\n                    },\n                    createSheetBar: function(openDialogCallback) {\n                        that._sheetsBar(openDialogCallback);\n                    },\n                    createContextMenus: function(options) {\n                        that._dialogs = [];\n                        that._initContextMenus();\n                    },\n                    createSheetDataSource: function(dataSource) {\n                        return kendo.data.DataSource.create(dataSource);\n                    },\n                    getWorkbookCommand: function(commandName, commandOptions) {\n                        return new kendo.spreadsheet[commandName](commandOptions);\n                    },\n                    getIconHTMLString: function(iconName) {\n                        return $(kendo.ui.icon(iconName))[0];\n                    },\n                    update: function(e) {\n                        that._onUpdateTools(e);\n                        if (e.reason.sheetSelection && that.sheetsBar) {\n                            that.sheetsBar.renderSheets(e.sender.sheets(), e.sender.sheetIndex(e.sheet));\n                        }\n                    },\n                    message: (args) => {\n                        // exclude these properties from the options\n                        let { sender, name, ref, range, ...dialogOptions } = args;\n                        let opts = $.extend({}, { pdfExport: that.options.pdf, excelExport: that.options.excel }, dialogOptions);\n                        let dialog = kendo.spreadsheet.dialogs.create(args.name, opts);\n                        const saveAsCallback = function(data, fileName, exportOptions) {\n                            kendo.saveAs({ dataURI: data, fileName, ...exportOptions });\n                        };\n\n\n                        if (dialog) {\n                            dialog.bind(\"action\", function(args) {\n                                if (args.command == \"SaveAsCommand\") {\n                                    let { sender, ...commandArgs } = args;\n                                    let fileName = args.options.name + args.options.extension;\n                                    if (args.options.extension === \".xlsx\") {\n                                        return that.spreadsheetRef.saveAsExcel($.extend(commandArgs, {\n                                            fileName: fileName,\n                                            Workbook: kendo.ooxml.Workbook,\n                                            saveAs: saveAsCallback\n                                        }));\n                                    } else if (this.options.extension === \".pdf\") {\n                                        return that.spreadsheetRef.saveAsPDF($.extend(args.options.pdf, { workbook: this.options.workbook, fileName: fileName }));\n                                    }\n                                }\n\n                                that.spreadsheetRef.executeCommand(args);\n                            });\n\n                            dialog.bind(\"deactivate\", () => {\n                                dialog.destroy();\n                                that._dialogs.pop();\n                            });\n\n                            that._dialogs.push(dialog);\n\n                            dialog.open(args.range, args);\n                            args.dialog = dialog;\n                        }\n                    },\n                    contextmenu: (e) => {\n                        const { objectRef, targetType, showUnhide, showUnmerge, originalEvent, isComposite } = e;\n                        const selection = e.sender.activeSheet().select();\n                        const { topLeft, bottomRight } = selection;\n\n                        this.cellContextMenu.close();\n                        this.colHeaderContextMenu.close();\n                        this.rowHeaderContextMenu.close();\n                        this.drawingContextMenu.close();\n\n                        let menu;\n\n                        if (targetType == \"columnheader\") {\n                            menu = this.colHeaderContextMenu;\n                        } else if (targetType == \"rowheader\") {\n                            menu = this.rowHeaderContextMenu;\n                        } else if (targetType == \"drawing\") {\n                            menu = this.drawingContextMenu;\n                        } else {\n                            menu = this.cellContextMenu;\n                        }\n\n                        menu.element.find(COMPOSITE_UNAVAILABLE_ACTION_SELECTORS).toggle(!isComposite);\n                        menu.element.find(UNHIDE_ACTION_SELECTORS).toggle(showUnhide);\n                        menu.element.find('[data-action=unmerge]').toggle(showUnmerge);\n\n                        // avoid the immediate close\n                        setTimeout(function() {\n                            menu.open(e.originalEvent.pageX, e.originalEvent.pageY);\n                        });\n                    },\n                    locale: kendo.cultures.current.name,\n                    intl: kendo.kendoCultureToIntl(),\n                });\n\n                return new kendo.spreadsheet.commonEngine.SpreadsheetWidget(this.element[0], widgetOptions);\n            },\n            _createFormulaInputs: function() {\n                let formulaBarInputRefElement = this.element.find('.k-spreadsheet-action-bar .k-spreadsheet-formula-input');\n                let formulaBarInputRefListId = kendo.guid();\n                formulaBarInputRefElement.attr(\"aria-controls\", formulaBarInputRefListId);\n\n                this._formulaBarInputRefList = new FormulaInputStaticList($(`<ul id=\"${formulaBarInputRefListId}\" />`)\n                    .addClass(FormulaInput.classNames.listWrapper)\n                    .insertAfter(formulaBarInputRefElement), {\n                    aria: {\n                        role: 'menu',\n                        itemRole: 'menuitem'\n                    },\n                    autoBind: false,\n                    selectable: true,\n                    dataTextField: \"text\",\n                    dataValueField: \"value\",\n                    template: ({ text, value }) => `${text || value}`\n                });\n\n                this._formulaBarInputRefList.element.on(\"mousedown\", function(e) {\n                    e.preventDefault();\n                });\n\n                this._formulaBarInputRefPopup = new kendo.ui.Popup(this._formulaBarInputRefList.element, {\n                    anchor: this.element.find(\".k-spreadsheet-formula-input:not(.k-spreadsheet-cell-editor)\"),\n                    open: function(ev) { formulaBarInputRefElement.attr(\"aria-expanded\", true); },\n                    close: function(ev) { formulaBarInputRefElement.attr(\"aria-expanded\", false); }\n                });\n\n                let formulaCellInputRefElement = this.element.find('.k-spreadsheet-cell-editor');\n                let formulaCellInputRefListId = kendo.guid();\n                formulaCellInputRefElement.attr(\"aria-controls\", formulaCellInputRefListId);\n\n                this._formulaCellInputRefList = new FormulaInputStaticList($(`<ul id=\"${formulaCellInputRefListId}\" />`)\n                    .addClass(FormulaInput.classNames.listWrapper)\n                    .insertAfter(formulaCellInputRefElement), {\n                    aria: {\n                        role: 'menu',\n                        itemRole: 'menuitem'\n                    },\n                    autoBind: false,\n                    selectable: true,\n                    dataValueField: \"value\",\n                    dataTextField: \"text\",\n                    template: ({ text, value }) => `${text || value}`\n\n                });\n\n                this._formulaCellInputRefList.element.on(\"mousedown\", function(e) {\n                    e.preventDefault();\n                });\n\n                this._formulaCellInputRefPopup = new kendo.ui.Popup(this._formulaCellInputRefList.element, {\n                    anchor: this.element.find(DOT + commonEngine.View.classNames.cellEditor),\n                    open: function(ev) { formulaCellInputRefElement.attr(\"aria-expanded\", true); },\n                    close: function(ev) { formulaCellInputRefElement.attr(\"aria-expanded\", false); }\n                });\n            },\n            _initContextMenus: function() {\n                let that = this;\n\n                let contextMenuConfig = {\n                    target: this.element,\n                    animation: false,\n                    showOn: \"never\" // this is just an invalid event name to prevent the show\n                };\n\n                this.cellContextMenu = new kendo.spreadsheet.ContextMenu($(CELL_CONTEXT_MENU(that.options)).appendTo(that.element), contextMenuConfig);\n\n                this.colHeaderContextMenu = new kendo.spreadsheet.ContextMenu($(COL_HEADER_CONTEXT_MENU(that.options)).appendTo(that.element), contextMenuConfig);\n\n                this.rowHeaderContextMenu = new kendo.spreadsheet.ContextMenu($(ROW_HEADER_CONTEXT_MENU(that.options)).appendTo(that.element), contextMenuConfig);\n\n                this.drawingContextMenu = new kendo.spreadsheet.ContextMenu($(DRAWING_CONTEXT_MENU(that.options)).appendTo(that.element), contextMenuConfig);\n\n                this.cellContextMenu.bind(\"select\", this.onContextMenuSelect.bind(this));\n                this.rowHeaderContextMenu.bind(\"select\", this.onContextMenuSelect.bind(this));\n                this.colHeaderContextMenu.bind(\"select\", this.onContextMenuSelect.bind(this));\n                this.drawingContextMenu.bind(\"select\", this.onContextMenuSelect.bind(this));\n            },\n            onContextMenuSelect: function(e) {\n                let that = this;\n                let action = $(e.item).data(\"action\");\n                let command;\n                switch (action) {\n                    case \"cut\":\n                        command = { command: \"ToolbarCutCommand\", options: { workbook: this.spreadsheetRef.workbook } };\n                        break;\n                    case \"copy\":\n                        command = { command: \"ToolbarCopyCommand\", options: { workbook: this.spreadsheetRef.workbook } };\n                        break;\n                    case \"paste\":\n                        command = { command: \"ToolbarPasteCommand\", options: { workbook: this.spreadsheetRef.workbook } };\n                        break;\n                    case \"delete-drawing\":\n                        command = { command: \"DeleteDrawingCommand\", options: { drawing: this.spreadsheetRef._controller.navigator._sheet._activeDrawing } };\n                        break;\n                    case \"bring-to-front\":\n                        command = { command: \"BringToFrontCommand\", options: { drawing: this.spreadsheetRef._controller.navigator._sheet._activeDrawing } };\n                        break;\n                    case \"send-to-back\":\n                        command = { command: \"SendToBackCommand\", options: { drawing: this.spreadsheetRef._controller.navigator._sheet._activeDrawing } };\n                        break;\n                    case \"unmerge\":\n                        command = { command: \"MergeCellCommand\", options: { value: \"unmerge\" } };\n                        break;\n                    case \"merge\":\n                        this.spreadsheetRef.openDialog(\"merge\");\n                        break;\n                    case \"hide-row\":\n                        command = { command: \"HideLineCommand\", options: { axis: \"row\" } };\n                        break;\n                    case \"hide-column\":\n                        command = { command: \"HideLineCommand\", options: { axis: \"column\" } };\n                        break;\n                    case \"unhide-row\":\n                        command = { command: \"UnHideLineCommand\", options: { axis: \"row\" } };\n                        break;\n                    case \"unhide-column\":\n                        command = { command: \"UnHideLineCommand\", options: { axis: \"column\" } };\n                        break;\n                    case \"delete-row\":\n                        command = { command: \"DeleteRowCommand\" };\n                        break;\n                    case \"delete-column\":\n                        command = { command: \"DeleteColumnCommand\" };\n                        break;\n                }\n\n                if (command) {\n                    that.spreadsheetRef.executeCommand(command);\n                }\n            },\n            _onUpdateTools: function(e) {\n                let reason = e.reason;\n                if (reason && (reason.overElement || reason.comment)) {\n                    return;\n                }\n                this.toolbar?.refresh(e.range);\n            },\n            _getCopyRegex: function(sheetName) {\n                const newName = sheetName.replaceAll('(', '\\\\(').replaceAll(')', '\\\\)');\n                const st = `(${newName})\\\\s?\\\\(`;\n                return new RegExp(st, 's');\n            },\n            _sheetsBar: function(openDialogCallback) {\n                let that = this;\n\n                if (that.options.sheetsbar) {\n                    let sheetsbarOptions = $.extend(true, {\n                        openDialog: openDialogCallback,\n                    }, that.options.sheetsbar);\n\n                    that.sheetsBar = new SheetsBar(that.element[0].querySelector('[ref-sheets-bar]'), sheetsbarOptions);\n\n                    that.sheetsBar.bind(\"select\", function onSheetSelect(ev) {\n                        if (ev.isAddButton) {\n                            that.spreadsheetRef.view.sheetsbar.onAddSelect();\n                        } else {\n                            that.spreadsheetRef.view.sheetsbar.onSheetSelect(ev.name);\n                        }\n                    });\n\n                    that.sheetsBar.bind(\"reorder\", function onSheetReorderEnd(ev) {\n                        that.spreadsheetRef.view.sheetsbar.onSheetReorderEnd(ev);\n                    });\n\n                    that.sheetsBar.bind(\"rename\", function onSheetRename(ev) {\n                        that.spreadsheetRef.view.sheetsbar.onSheetRename(ev.name, ev.sheetIndex);\n                    });\n\n                    that.sheetsBar.bind(\"duplicate\", function onSheetDuplicate(ev) {\n                        let name = ev.name;\n                        let sheetToCopy = that.sheetByName(name);\n                        let sheetIndex = that.sheetIndex(sheetToCopy);\n                        let copies = 0;\n                        const regex = that._getCopyRegex(name);\n                        that.sheets().forEach(sheet => {\n                            const isPresent = regex.test(sheet.name());\n                            if (isPresent) {\n                                copies += 1;\n                            }\n                        });\n\n                        const newName = `${name} (${copies + 1})`;\n                        that.insertSheet({ data: { ...sheetToCopy.toJSON(), name: newName }, index: sheetIndex + 1 });\n                        that.spreadsheetRef.view.sheetsbar.onSheetSelect(newName);\n                    });\n\n                    that.sheetsBar.bind(\"remove\", function onSheetBarRemove(ev) {\n                        that.spreadsheetRef.view.sheetsbar.onSheetRemove(ev.name);\n                    });\n\n                    that.sheetsBar.bind(\"hide\", function onSheetBarHide(ev) {\n                        let sheetName = ev.name;\n                        let sheetToHide = that.sheetByName(sheetName);\n                        let visibleSheets = that.sheets().filter(x=> x.state() === \"visible\");\n                        let visibleSheetIndex = visibleSheets.findIndex(x=> x.name() === sheetName);\n                        let nextVisibleSheet = visibleSheets[visibleSheetIndex + 1] || visibleSheets[visibleSheetIndex - 1];\n                        sheetToHide._state('hidden');\n\n                        that.spreadsheetRef.workbook._sheetsSearchCache = {};\n                        that.spreadsheetRef.view.sheetsbar.onSheetSelect(nextVisibleSheet.name());\n                    });\n\n                    that.sheetsBar.bind(\"show\", function onSheetBarShow(ev) {\n                        let sheetName = ev.name;\n                        that.sheetByName(sheetName)._state('visible');\n                        that.spreadsheetRef.workbook._sheetsSearchCache = {};\n                        that.spreadsheetRef.view.sheetsbar.onSheetSelect(ev.name);\n                    });\n                }\n            },\n            _createToolBar: function(options, tabs, toolbarId) {\n                let that = this;\n\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                    that.toolbar.element.empty();\n                }\n\n                let activeTabIndex = tabs.findIndex((item) => item.id === toolbarId);\n                let activeToolbar = tabs[activeTabIndex];\n                let tools = options[activeToolbar.id];\n\n                that._activeToolBar = activeToolbar.text;\n\n                that.toolbar = new kendo.spreadsheet.ToolBar(this.element.find(\"[ref-header-toolbar]\"), {\n                    tools: typeof tools === \"boolean\" ? undefined$1 : tools,\n                    overflow: $.isPlainObject(options.overflow) ? options.overflow : undefined$1,\n                    toolbarName: activeToolbar.id,\n                    fillMode: \"flat\",\n                    action: function(args) {\n                        if (args.command === 'undo' || args.command === 'redo') {\n                            that.spreadsheetRef.workbook.undoRedoStack[args.command]();\n                            return;\n                        }\n\n                        if (args.command == \"OpenCommand\") {\n                            args.options.file = args.options.value;\n                        } else if (args.command === \"BorderChangeCommand\") {\n                            args.options.border = args.options.border || args.options.value.type;\n                            args.options.style = args.options.style || args.options.value.style || { color: args.options.value.color, size: 1 };\n                        }\n\n                        that.spreadsheetRef.executeCommand(args);\n                    },\n                    dialog: function(args) {\n                        that.spreadsheetRef.openDialog(args.name, args.options);\n                    }\n                });\n                that.toolbar.element.attr(\"aria-label\", activeToolbar.text);\n            },\n\n            _initHeader: function() {\n                let that = this;\n                let messages = this.options.messages.tabs;\n                let options = $.extend(true, { file: true, home: true, insert: true, format: true, data: true, view: true }, this.options.toolbar);\n                let tabs = [];\n\n                if (this.menu) {\n                    this.menu.destroy();\n                    this.menu.empty();\n                }\n\n                if (this.toolbar) {\n                    this.toolbar.destroy();\n                    this.toolbar.empty();\n                }\n\n                for (let name in options) {\n                    if (options[name] === true || options[name] instanceof Array) {\n                        tabs.push({ id: name, text: messages[name], content: \"\", attr: { \"ref-tab-name\": name } });\n                    }\n                }\n\n                this.menu = new kendo.spreadsheet.Menu(this.element.find(\"[ref-header-menu]\"), {\n                    dataSource: tabs,\n                    toolbarOptions: options,\n                    select: function(e) {\n                        let text = $(e.item).text();\n                        if (that._activeToolBar !== text) {\n                            $(e.item).addClass(K_ACTIVE)\n                                .siblings(\"li\").removeClass(K_ACTIVE);\n\n                            that._createToolBar(options, tabs, tabs.find((item) => item.text === text).id);\n                            const activeSheet = that.activeSheet();\n                            that._onUpdateTools({ range: activeSheet.range(activeSheet.activeCell()) });\n                        }\n                    }\n                });\n\n                if (tabs.length) {\n                    let defaultTab = tabs.find((item)=> item.id === \"home\");\n                    this.menu.element.find(`li[ref-tab-name=\"home\"]`).addClass(K_ACTIVE);\n                    that._createToolBar(options, tabs, defaultTab ? defaultTab.id : tabs[0].id);\n                }\n            },\n\n            executeCommand(options) {\n                return this.spreadsheetRef.executeCommand(options);\n            },\n\n            _resize: function() {\n                this.refresh({ layout: true });\n            },\n\n            _workbookChanging: function(e) {\n                if (this.trigger(\"changing\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookChange: function(e) {\n                if (this._autoRefresh) {\n                    this.refresh(e);\n                }\n\n                if (e.recalc && e.ref) {\n                    let range = e.range || new kendo.spreadsheet.Range(e.ref, this.activeSheet());\n                    this.trigger(\"change\", { range: range });\n                }\n            },\n\n            _workbookCut: function(e) {\n                this.trigger(\"cut\", e);\n            },\n\n            _workbookCopy: function(e) {\n                this.trigger(\"copy\", e);\n            },\n\n            _workbookPaste: function(e) {\n                this.trigger(\"paste\", e);\n            },\n\n            activeSheet: function(sheet) {\n                return this.spreadsheetRef.activeSheet(sheet);\n            },\n\n            moveSheetToIndex: function(sheet, index) {\n                return this.spreadsheetRef.moveSheetToIndex(sheet, index);\n            },\n\n            insertSheet: function(options) {\n                return this.spreadsheetRef.insertSheet(options);\n            },\n\n            sheets: function() {\n                return this.spreadsheetRef.sheets();\n            },\n\n            removeSheet: function(sheet) {\n                return this.spreadsheetRef.removeSheet(sheet);\n            },\n\n            sheetByName: function(sheetName) {\n                return this.spreadsheetRef.sheetByName(sheetName);\n            },\n\n            sheetIndex: function(sheet) {\n                return this.spreadsheetRef.sheetIndex(sheet);\n            },\n\n            sheetByIndex: function(index) {\n                return this.spreadsheetRef.sheetByIndex(index);\n            },\n\n            renameSheet: function(sheet, newSheetName) {\n                return this.spreadsheetRef.renameSheet(sheet, newSheetName);\n            },\n\n            refresh: function(reason) {\n                this.spreadsheetRef.refresh(reason);\n\n                return this;\n            },\n\n            openDialog: function(name, options) {\n                return this.spreadsheetRef.openDialog(name, options);\n            },\n\n            autoRefresh: function(value) {\n                if (value !== undefined$1) {\n                    this._autoRefresh = value;\n\n                    if (value === true) {\n                        this.refresh();\n                    }\n\n                    return this;\n                }\n\n                return this._autoRefresh;\n            },\n\n            toJSON: function() {\n                return this.spreadsheetRef.toJSON();\n            },\n\n            fromJSON: function(json) {\n                this.spreadsheetRef.fromJSON(json);\n            },\n\n            saveJSON: function() {\n                return this.spreadsheetRef.saveJSON();\n            },\n\n            fromFile: function(blob, name) {\n                return this.spreadsheetRef.fromFile(blob, name);\n            },\n\n            saveAsPDF: function(options) {\n                this.spreadsheetRef.saveAsPDF(\n                    $.extend({}, this.options.pdf, options, { workbook: this.spreadsheetRef._workbook })\n                );\n            },\n\n            saveAsExcel: function(options) {\n                const exportOps = $.extend({}, this.options.excel, options, {\n                    Workbook: kendo.ooxml.Workbook,\n                    saveAs: function(data, fileName, exportOptions) {\n                        kendo.saveAs({ dataURI: data, fileName, ...exportOptions });\n                    }\n                });\n                this.spreadsheetRef.saveAsExcel(exportOps);\n            },\n\n            draw: function(options, callback) {\n                this.spreadsheetRef.draw(options, callback);\n            },\n\n            _workbookExcelExport: function(e) {\n                if (this.trigger(\"excelExport\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookExcelImport: function(e) {\n                if (this.trigger(\"excelImport\", e)) {\n                    e.preventDefault();\n                } else {\n                    this._initProgress(e.deferred);\n                }\n            },\n\n            _initProgress: function(deferred) {\n                let loading =\n                    $(\"<div class='k-loading-mask' \" +\n                        \"style='width: 100%; height: 100%; top: 0;'>\" +\n                        \"<div class='k-loading-color'></div>\" +\n                        \"</div>\")\n                        .appendTo(this.element);\n\n                let pb = $(\"<div class='k-loading-progress'>\")\n                    .appendTo(loading)\n                    .kendoProgressBar({\n                        type: \"chunk\", chunkCount: 10,\n                        min: 0, max: 1, value: 0\n                    }).data(\"kendoProgressBar\");\n\n                deferred.progress(function(e) {\n                    pb.value(e.progress);\n                })\n                    .promise.finally(function() {\n                        kendo.destroy(loading);\n                        loading.remove();\n                    });\n            },\n\n            _workbookPdfExport: function(e) {\n                if (this.trigger(\"pdfExport\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookInsertSheet: function(e) {\n                if (this.trigger(\"insertSheet\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookRemoveSheet: function(e) {\n                if (this.trigger(\"removeSheet\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookSelectSheet: function(e) {\n                if (this.trigger(\"selectSheet\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookRenameSheet: function(e) {\n                if (this.trigger(\"renameSheet\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookInsertRow: function(e) {\n                if (this.trigger(\"insertRow\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookInsertColumn: function(e) {\n                if (this.trigger(\"insertColumn\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookDeleteRow: function(e) {\n                if (this.trigger(\"deleteRow\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookDeleteColumn: function(e) {\n                if (this.trigger(\"deleteColumn\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookHideRow: function(e) {\n                if (this.trigger(\"hideRow\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookHideColumn: function(e) {\n                if (this.trigger(\"hideColumn\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookUnhideRow: function(e) {\n                if (this.trigger(\"unhideRow\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookUnhideColumn: function(e) {\n                if (this.trigger(\"unhideColumn\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookSelect: function(e) {\n                this.trigger(\"select\", e);\n            },\n\n            _workbookChangeFormat: function(e) {\n                this.trigger(\"changeFormat\", e);\n            },\n\n            _workbookDataBinding: function(e) {\n                if (this.trigger(\"dataBinding\", e)) {\n                    e.preventDefault();\n                }\n            },\n\n            _workbookDataBound: function(e) {\n                this.trigger(\"dataBound\", e);\n            },\n\n            _workbookProgress: function(e) {\n                kendo.ui.progress(this.element, e.toggle);\n            },\n\n            _bindWorkbookEvents: function() {\n                this.spreadsheetRef.bind(\"cut\", this._workbookCut.bind(this));\n                this.spreadsheetRef.bind(\"copy\", this._workbookCopy.bind(this));\n                this.spreadsheetRef.bind(\"paste\", this._workbookPaste.bind(this));\n                this.spreadsheetRef.bind(\"changing\", this._workbookChanging.bind(this));\n                this.spreadsheetRef.bind(\"change\", this._workbookChange.bind(this));\n                this.spreadsheetRef.bind(\"excelExport\", this._workbookExcelExport.bind(this));\n                this.spreadsheetRef.bind(\"excelImport\", this._workbookExcelImport.bind(this));\n                this.spreadsheetRef.bind(\"pdfExport\", this._workbookPdfExport.bind(this));\n                this.spreadsheetRef.bind(\"insertSheet\", this._workbookInsertSheet.bind(this));\n                this.spreadsheetRef.bind(\"removeSheet\", this._workbookRemoveSheet.bind(this));\n                this.spreadsheetRef.bind(\"selectSheet\", this._workbookSelectSheet.bind(this));\n                this.spreadsheetRef.bind(\"renameSheet\", this._workbookRenameSheet.bind(this));\n                this.spreadsheetRef.bind(\"insertRow\", this._workbookInsertRow.bind(this));\n                this.spreadsheetRef.bind(\"insertColumn\", this._workbookInsertColumn.bind(this));\n                this.spreadsheetRef.bind(\"deleteRow\", this._workbookDeleteRow.bind(this));\n                this.spreadsheetRef.bind(\"deleteColumn\", this._workbookDeleteColumn.bind(this));\n                this.spreadsheetRef.bind(\"hideRow\", this._workbookHideRow.bind(this));\n                this.spreadsheetRef.bind(\"hideColumn\", this._workbookHideColumn.bind(this));\n                this.spreadsheetRef.bind(\"unhideRow\", this._workbookUnhideRow.bind(this));\n                this.spreadsheetRef.bind(\"unhideColumn\", this._workbookUnhideColumn.bind(this));\n                this.spreadsheetRef.bind(\"select\", this._workbookSelect.bind(this));\n                this.spreadsheetRef.bind(\"changeFormat\", this._workbookChangeFormat.bind(this));\n                this.spreadsheetRef.bind(\"dataBinding\", this._workbookDataBinding.bind(this));\n                this.spreadsheetRef.bind(\"dataBound\", this._workbookDataBound.bind(this));\n                this.spreadsheetRef.bind(\"progress\", this._workbookProgress.bind(this));\n            },\n\n            destroy: function() {\n                kendo.ui.Widget.fn.destroy.call(this);\n\n                this._formulaBarInputRefPopup?.destroy();\n                this._formulaCellInputRefPopup?.destroy();\n                this._formulaBarInputRefList?.destroy();\n                this._formulaCellInputRefList?.destroy();\n\n                this._formulaBarInputRefList = this._formulaCellInputRefList = null;\n                this._formulaBarInputRefPopup = this._formulaCellInputRefPopup = null;\n\n                if (this.menu) {\n                    this.menu.destroy();\n                }\n\n                if (this.toolbar) {\n                    this.toolbar.destroy();\n                }\n\n                if (this.sheetsBar) {\n                    this.sheetsBar.destroy();\n                }\n\n                this._dialogs?.forEach(function(dialog) {\n                    dialog?.destroy();\n                });\n\n                this.spreadsheetRef?.destroy();\n\n                this.cellContextMenu?.destroy();\n\n                this.rowHeaderContextMenu?.destroy();\n                this.colHeaderContextMenu?.destroy();\n                this.drawingContextMenu?.destroy();\n\n                this.cellContextMenu = this.rowHeaderContextMenu =\n                    this.colHeaderContextMenu =\n                    this.drawingContextMenu = null;\n\n                if (this._resizeHandler) {\n                    $(window).off(\"resize\" + NS, this._resizeHandler);\n                }\n\n                kendo.destroy(this.element);\n            },\n\n            options: {\n                name: \"Spreadsheet\",\n                toolbar: true,\n                sheetsbar: true,\n                rows: 200,\n                columns: 50,\n                rowHeight: 30,\n                columnWidth: 64,\n                headerHeight: 30,\n                headerWidth: 32,\n                excel: {\n                    proxyURL: \"\",\n                    fileName: \"Workbook.xlsx\"\n                },\n                messages: {},\n                pdf: {\n                    // which part of the workbook to be exported\n                    area: \"workbook\",\n                    fileName: \"Workbook.pdf\",\n                    proxyURL: \"\",\n                    // paperSize can be an usual name, i.e. \"A4\", or an array of two Number-s specifying the\n                    // width/height in points (1pt = 1/72in), or strings including unit, i.e. \"10mm\".  Supported\n                    // units are \"mm\", \"cm\", \"in\" and \"pt\".  The default \"auto\" means paper size is determined\n                    // by content.\n                    paperSize: \"a4\",\n                    // True to reverse the paper dimensions if needed such that width is the larger edge.\n                    landscape: true,\n                    // An object containing { left, top, bottom, right } margins with units.\n                    margin: null,\n                    // Optional information for the PDF Info dictionary; all strings except for the date.\n                    title: null,\n                    author: null,\n                    subject: null,\n                    keywords: null,\n                    creator: \"Kendo UI PDF Generator v.\" + kendo.version,\n                    // Creation Date; defaults to new Date()\n                    date: null\n                },\n                defaultCellStyle: {\n                    fontFamily: \"Arial\",\n                    fontSize: 12\n                },\n                useCultureDecimals: false\n            },\n\n            defineName: function(name, value, hidden) {\n                return this.spreadsheetRef.defineName(name, value, hidden);\n            },\n\n            undefineName: function(name) {\n                return this.spreadsheetRef.undefineName(name);\n            },\n\n            nameValue: function(name) {\n                return this.spreadsheetRef.nameValue(name);\n            },\n\n            forEachName: function(func) {\n                return this.spreadsheetRef.forEachName(func);\n            },\n\n            cellContextMenu: function() {\n                return this.cellContextMenu;\n            },\n\n            rowHeaderContextMenu: function() {\n                return this.rowHeaderContextMenu;\n            },\n\n            colHeaderContextMenu: function() {\n                return this.colHeaderContextMenu;\n            },\n\n            addImage: function(image) {\n                return this.spreadsheetRef.addImage(image);\n            },\n\n            cleanupImages: function() {\n                return this.spreadsheetRef.cleanupImages();\n            },\n\n            events: [\n                \"cut\",\n                \"copy\",\n                \"paste\",\n                \"pdfExport\",\n                \"excelExport\",\n                \"excelImport\",\n                \"changing\",\n                \"change\",\n                \"render\",\n                \"removeSheet\",\n                \"selectSheet\",\n                \"renameSheet\",\n                \"insertRow\",\n                \"insertColumn\",\n                \"deleteRow\",\n                \"insertSheet\",\n                \"deleteColumn\",\n                \"hideRow\",\n                \"hideColumn\",\n                \"unhideRow\",\n                \"unhideColumn\",\n                \"select\",\n                \"changeFormat\",\n                \"dataBinding\",\n                \"dataBound\"\n            ]\n        });\n\n        kendo.ui.plugin(Spreadsheet);\n        $.extend(true, Spreadsheet, { classNames: classNames });\n    })(window.kendo);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}