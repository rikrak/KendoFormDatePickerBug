{"version":3,"sources":["raw-js/kendo.dataviz.map.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","DatavizMap","this","window","deepExtend","now","Date","getTime","util","renderPos","pos","result","parts","toHyphens","split","i","length","push","join","renderSize","size","sqr","value","romanToArabic","r","toLowerCase","digits","v","x","l","c","d","m","prev","charAt","arabicToRoman","n","literals","values","roman","shift","memoize","f","cache","Object","create","id","arguments","apply","isUnicodeLetter","ch","RX_UNICODE_LETTER","test","withExit","obj","call","Return","ex","RegExp","math","Math","abs","atan","atan2","cos","max","min","sin","tan","Class","dataviz","drawing","defined","deg","rad","round","valueOrDefault","Location","extend","init","lat","lng","DISTANCE_ITERATIONS","DISTANCE_CONVERGENCE","DISTANCE_PRECISION","FORMAT","toArray","equals","loc","clone","precision","wrap","distanceTo","dest","datum","greatCircleTo","distance","destination","bearing","map","datums","WGS84","fromLat","fromLng","dToR","a","asin","azimuthFrom","azimuthTo","prevLambda","sinLambda","cosLambda","sino","cosA2","coso","cos2om","sigma","b","L","U1","sinU1","cosU1","U2","sinU2","cosU2","lambda","converged","sqrt","sinA","C","u2","A","B","deltao","fn","toString","format","fromLngLat","ll","fromLatLng","Extent","nw","se","contains","center","containsAny","locs","include","includeAll","edges","ne","sw","overlaps","extent","World","jQuery","Widget","ui","template","Attribution","element","options","_initOptions","items","addClass","name","separator","itemTemplate","text","filter","zoom","_extent","_zoom","_render","add","item","remove","clear","empty","_itemText","append","show","hide","inZoomLevel","_inZoomLevel","minZoom","maxZoom","inArea","_inArea","Number","MAX_VALUE","area","plugin","$","keys","button","dir","mapIcon","s","e","w","icon","iconClass","BUTTONS","Navigator","on","_click","bind","parentElement","parent","closest","attr","_keyroot","_tabindex","_keydown","panStep","events","dispose","off","_pan","y","trigger","currentTarget","is","preventDefault","which","UP","DOWN","RIGHT","LEFT","ZoomControl","zoomStep","_change","delta","NUMPAD_PLUS","NUMPAD_MINUS","exp","pow","log","g","geometry","Point","limit","limitValue","PI","PI_DIV_2","PI_DIV_4","DEG_TO_RAD","Mercator","MAX_LNG","MAX_LAT","INVERSE_ITERATIONS","INVERSE_CONVERGENCE","centralMeridian","forward","clamp","proj","lng0","_projectLat","ecc","ts","con","p","inverse","point","_inverseY","ecch","phi","dphi","SphericalMercator","Equirectangular","EPSG3857","_proj","_tm","transform","translate","scale","_itm","toPoint","toLocation","crs","EPSG3395","EPSG4326","projections","layers","Layer","css","zIndex","opacity","appendTo","scrollElement","_beforeReset","_reset","_resize","_panEnd","_activate","_updateAttribution","destroy","_deactivate","reset","_applyExtent","_setVisibility","noop","matchMinZoom","matchMaxZoom","inside","visible","unbind","attribution","DataSource","data","Group","last","ShapeLayer","surface","Surface","width","height","_initRoot","movable","Movable","_markers","_handler","_mouseenter","_mouseleave","_initDataSource","autoBind","dataSource","_dataChange","setDataSource","fetch","_translateSurface","_data","_load","_root","draw","dsOptions","sender","view","_clearMarkers","_loader","GeoJSONLoader","style","container","shape","parse","shapeCreated","cancelled","Circle","_createMarker","args","layer","featureCreated","marker","markers","location","dataItem","_panning","suspendTracking","resumeTracking","locationToView","moveTo","event","originalEvent","locator","defaultStyle","observer","root","unwrap","type","_loadGeometryTo","_featureCreated","children","_shapeCreated","group","properties","path","coords","coordinates","_loadPolygon","_setLineFill","_loadPoint","segments","anchor","fill","_loadShape","rings","_buildPolygon","MultiPath","Path","j","lineTo","circle","schemas","geojson","features","geometries","transports","read","dataType","getter","BubbleLayer","locationField","valueField","minSize","maxSize","symbol","opt","getValue","slice","sort","scaleType","_scaleType","_createSymbol","_drawSymbol","isFunction","scales","symbols","SqrtScale","domain","range","_domain","_range","domainRange","outputRange","_ratio","rel","bubble","geo","square","halfSize","close","drawingUtil","TileLayer","subdomains","viewType","_viewType","_view","origin","locationToLayer","viewOrigin","tileTitle","_updateView","TileView","support","mobileOS","throttle","extentToPoint","render","pool","TilePool","tileSize","urlTemplate","_center","_viewOrigin","pointToTileIndex","floor","tileCount","firstTileIndex","indexToPoint","ceil","diff","index","subdomainText","subdomainIndex","_tileTitle","tile","createTile","currentIndex","tileOptions","get","wrapIndex","offset","roundPoint","subdomain","errorUrlTemplate","boundary","wrapValue","remainder","ImageTile","createElement","position","display","errorUrl","target","setAttribute","removeAttribute","top","left","url","visibility","urlResult","urlOptions","z","quadkey","q","culture","_items","_remove","_create","hashKey","maxDist","dist","splice","BingLayer","baseUrl","_scheme","_onMetadata","_fetchMetadata","imagerySet","key","Error","ajax","output","uriScheme","jsonp","success","proto","protocol","replace","that","resourceSets","resource","resources","imageUrl","imageUrlSubdomains","zoomMin","zoomMax","_addAttribution","BingView","imageryProviders","coverageAreas","bbox","tileQuadKey","digit","mask","quadKey","bing","doc","document","indexOf","inArray","Tooltip","MarkerLayer","_markerClick","titleField","arg","Array","isArray","_addOne","update","showAt","Marker","addTo","getLocation","getTitle","title","tooltip","popup","_position","htmlEncode","attributes","renderTooltip","contentTemplate","content","contentUrl","defaults","Map","_getOrigin","_initScroller","_initMarkers","_initControls","_initLayers","removeClass","_mousewheel","controls","navigator","layerDefaults","color","stroke","markerDefaults","wraparound","messages","scroller","zoomControl","level","_setExtent","_getExtent","setOptions","_layerSize","layerToLocation","translateWith","viewToLocation","eventOffset","field","pageX","clientX","pageY","clientY","eventToView","cursor","eventToLayer","eventToLocation","viewSize","exportVisual","_setOrigin","topLeft","_origin","invalidate","raw","bottomRight","layerWidth","layerHeight","_zoomAround","pivot","_createAttribution","_createNavigator","_createZoomControl","_createControlElement","defaultPos","posSelector","_navigatorPan","_navigatorCenter","scrollLeft","scrollTop","bounds","_virtualSize","one","_scrollEnd","scrollTo","_zoomControlChange","friction","zoomable","mobile","Scroller","velocityMultiplier","mousewheelScrolling","supportDoubleTap","_scroll","userEvents","_scaleStart","_scale","_doubleTap","_tap","defs","impl","_scrollOffset","_panComplete","_panEndTS","touch","touches","cancel","_scaleToZoom","gestureCenter","centerLocation","originPoint","scaleDelta","tiles","_resetScroller","dimensions","forcedMinScale","maxScale","xBounds","yBounds","pannable","makeVirtual","virtualSize","_renderLayers","scrollWrap","toZoom","mwDelta","fromZoom","kendo$1","__meta__","category","description","depends","default","defineProperty"],"mappings":"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","file":"kendo.dataviz.map.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.data.js'), require('kendo.userevents.js'), require('kendo.tooltip.js'), require('kendo.mobile.scroller.js'), require('kendo.draganddrop.js'), require('kendo.dataviz.core.js'), require('kendo.drawing.js'), require('kendo.core.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.data', 'kendo.userevents', 'kendo.tooltip', 'kendo.mobile.scroller', 'kendo.draganddrop', 'kendo.dataviz.core', 'kendo.drawing', 'kendo.core', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.DatavizMap = {})));\n})(this, (function (exports) {\n    (function () {\r\n        // Imports ================================================================\r\n        var kendo = window.kendo,\r\n            deepExtend = kendo.deepExtend;\r\n\r\n        function sqr(value) {\r\n            return value * value;\r\n        }\r\n\r\n        var now = Date.now;\r\n        if (!now) {\r\n            now = function() {\r\n                return new Date().getTime();\r\n            };\r\n        }\r\n\r\n        // Template helpers =======================================================\r\n\r\n        function renderSize(size) {\r\n            if (typeof size !== \"string\") {\r\n                size += \"px\";\r\n            }\r\n\r\n            return size;\r\n        }\r\n\r\n        function renderPos(pos) {\r\n            var result = [];\r\n\r\n            if (pos) {\r\n                var parts = kendo.toHyphens(pos).split(\"-\");\r\n\r\n                for (var i = 0; i < parts.length; i++) {\r\n                    result.push(\"k-pos-\" + parts[i]);\r\n                }\r\n            }\r\n\r\n            return result.join(\" \");\r\n        }\r\n\r\n        function arabicToRoman(n) {\r\n            var literals = {\r\n                1    : \"i\",       10   : \"x\",       100  : \"c\",\r\n                2    : \"ii\",      20   : \"xx\",      200  : \"cc\",\r\n                3    : \"iii\",     30   : \"xxx\",     300  : \"ccc\",\r\n                4    : \"iv\",      40   : \"xl\",      400  : \"cd\",\r\n                5    : \"v\",       50   : \"l\",       500  : \"d\",\r\n                6    : \"vi\",      60   : \"lx\",      600  : \"dc\",\r\n                7    : \"vii\",     70   : \"lxx\",     700  : \"dcc\",\r\n                8    : \"viii\",    80   : \"lxxx\",    800  : \"dccc\",\r\n                9    : \"ix\",      90   : \"xc\",      900  : \"cm\",\r\n                1000 : \"m\"\r\n            };\r\n            var values = [ 1000,\r\n                           900 , 800, 700, 600, 500, 400, 300, 200, 100,\r\n                           90  , 80 , 70 , 60 , 50 , 40 , 30 , 20 , 10 ,\r\n                           9   , 8  , 7  , 6  , 5  , 4  , 3  , 2  , 1 ];\r\n            var roman = \"\";\r\n            while (n > 0) {\r\n                if (n < values[0]) {\r\n                    values.shift();\r\n                } else {\r\n                    roman += literals[values[0]];\r\n                    n -= values[0];\r\n                }\r\n            }\r\n            return roman;\r\n        }\r\n\r\n        function romanToArabic(r) {\r\n            r = r.toLowerCase();\r\n            var digits = {\r\n                i: 1,\r\n                v: 5,\r\n                x: 10,\r\n                l: 50,\r\n                c: 100,\r\n                d: 500,\r\n                m: 1000\r\n            };\r\n            var value = 0, prev = 0;\r\n            for (var i = 0; i < r.length; ++i) {\r\n                var v = digits[r.charAt(i)];\r\n                if (!v) {\r\n                    return null;\r\n                }\r\n                value += v;\r\n                if (v > prev) {\r\n                    value -= 2 * prev;\r\n                }\r\n                prev = v;\r\n            }\r\n            return value;\r\n        }\r\n\r\n        function memoize(f) {\r\n            var cache = Object.create(null);\r\n            return function() {\r\n                var id = \"\";\r\n                for (var i = arguments.length; --i >= 0;) {\r\n                    id += \":\" + arguments[i];\r\n                }\r\n                return id in cache ? cache[id] : (cache[id] = f.apply(this, arguments));\r\n            };\r\n        }\r\n\r\n        function isUnicodeLetter(ch) {\r\n            return RX_UNICODE_LETTER.test(ch);\r\n        }\r\n\r\n        function withExit(f, obj) {\r\n            try {\r\n                return f.call(obj, function(value){\r\n                    throw new Return(value);\r\n                });\r\n            } catch(ex) {\r\n                if (ex instanceof Return) {\r\n                    return ex.value;\r\n                }\r\n                throw ex;\r\n            }\r\n            function Return(value) {\r\n                this.value = value;\r\n            }\r\n        }\r\n\r\n        // Exports ================================================================\r\n        deepExtend(kendo, {\r\n            util: {\r\n                now: now,\r\n                renderPos: renderPos,\r\n                renderSize: renderSize,\r\n                sqr: sqr,\r\n                romanToArabic: romanToArabic,\r\n                arabicToRoman: arabicToRoman,\r\n                memoize: memoize,\r\n                isUnicodeLetter: isUnicodeLetter,\r\n                withExit: withExit\r\n            }\r\n        });\r\n\r\n        var RX_UNICODE_LETTER = new RegExp(\"[\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u00AA\\\\u00B5\\\\u00BA\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08A0-\\\\u08B2\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58\\\\u0C59\\\\u0C60\\\\u0C61\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D60\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1877\\\\u1880-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19C1-\\\\u19C7\\\\u1A00-\\\\u1A16\\\\u1A20-\\\\u1A54\\\\u1AA7\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF1\\\\u1CF5\\\\u1CF6\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BA\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FCC\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA78E\\\\uA790-\\\\uA7AD\\\\uA7B0\\\\uA7B1\\\\uA7F7-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uA9E0-\\\\uA9E4\\\\uA9E6-\\\\uA9EF\\\\uA9FA-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA60-\\\\uAA76\\\\uAA7A\\\\uAA7E-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB5F\\\\uAB64\\\\uAB65\\\\uABC0-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]\");\r\n\r\n    })();\n\n    (function($, undefined$1) {\n        // Imports ================================================================\n        var math = Math,\n            abs = math.abs,\n            atan = math.atan,\n            atan2 = math.atan2,\n            cos = math.cos,\n            max = math.max,\n            min = math.min,\n            sin = math.sin,\n            tan = math.tan,\n\n            kendo = window.kendo,\n            Class = kendo.Class,\n\n            dataviz = kendo.dataviz,\n            deepExtend = kendo.deepExtend,\n\n            util = kendo.drawing.util,\n            defined = util.defined,\n            deg = util.deg,\n            rad = util.rad,\n            round = util.round,\n            valueOrDefault = util.valueOrDefault,\n\n            sqr = kendo.util.sqr;\n\n        // Implementation =========================================================\n        var Location = Class.extend({\n            init: function(lat, lng) {\n                if (arguments.length === 1) {\n                    this.lat = lat[0];\n                    this.lng = lat[1];\n                } else {\n                    this.lat = lat;\n                    this.lng = lng;\n                }\n            },\n\n            DISTANCE_ITERATIONS: 100,\n            DISTANCE_CONVERGENCE: 1e-12,\n            DISTANCE_PRECISION: 2,\n            FORMAT: \"{0:N6},{1:N6}\",\n\n            toArray: function() {\n                return [this.lat, this.lng];\n            },\n\n            equals: function(loc) {\n                return loc && loc.lat === this.lat && loc.lng === this.lng;\n            },\n\n            clone: function() {\n                return new Location(this.lat, this.lng);\n            },\n\n            round: function(precision) {\n                this.lng = round(this.lng, precision);\n                this.lat = round(this.lat, precision);\n                return this;\n            },\n\n            wrap: function() {\n                this.lng = this.lng % 180;\n                this.lat = this.lat % 90;\n                return this;\n            },\n\n            distanceTo: function(dest, datum) {\n                return this.greatCircleTo(dest, datum).distance;\n            },\n\n            destination: function(distance, bearing, datum) {\n                bearing = rad(bearing);\n                datum = datum || dataviz.map.datums.WGS84;\n\n                var fromLat = rad(this.lat);\n                var fromLng = rad(this.lng);\n                var dToR = distance / kendo.dataviz.map.datums.WGS84.a;\n\n                var lat = math.asin(sin(fromLat) * cos(dToR) +\n                                    cos(fromLat) * sin(dToR) * cos(bearing));\n\n                var lng = fromLng + atan2(sin(bearing) * sin(dToR) * cos(fromLat),\n                                          cos(dToR) - sin(fromLat) * sin(lat));\n\n               return new Location(deg(lat), deg(lng));\n            },\n\n            greatCircleTo: function(dest, datum) {\n                dest = Location.create(dest);\n                datum = datum || dataviz.map.datums.WGS84;\n\n                if (!dest || this.clone().round(8).equals(dest.clone().round(8))) {\n                    return {\n                        distance: 0,\n                        azimuthFrom: 0,\n                        azimuthTo: 0\n                    };\n                }\n\n                // See http://en.wikipedia.org/wiki/Vincenty's_formulae#Notation\n                // o == sigma\n                // A == alpha\n                var a = datum.a;\n                var b = datum.b;\n                var f = datum.f;\n\n                var L = rad(dest.lng - this.lng);\n\n                var U1 = atan((1 - f) * tan(rad(this.lat)));\n                var sinU1 = sin(U1);\n                var cosU1 = cos(U1);\n\n                var U2 = atan((1 - f) * tan(rad(dest.lat)));\n                var sinU2 = sin(U2);\n                var cosU2 = cos(U2);\n\n                var lambda = L;\n                var prevLambda;\n\n                var i = this.DISTANCE_ITERATIONS;\n                var converged = false;\n\n                var sinLambda;\n                var cosLambda;\n                var sino;\n                var cosA2;\n                var coso;\n                var cos2om;\n                var sigma;\n\n                while (!converged && i-- > 0) {\n                    sinLambda = sin(lambda);\n                    cosLambda = cos(lambda);\n                    sino = math.sqrt(\n                        sqr(cosU2 * sinLambda) + sqr(cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n                    );\n\n                    coso = sinU1 * sinU2 + cosU1 * cosU2 * cosLambda;\n                    sigma = atan2(sino, coso);\n\n                    var sinA = cosU1 * cosU2 * sinLambda / sino;\n                    cosA2 = 1 - sqr(sinA);\n                    cos2om = 0;\n                    if (cosA2 !== 0) {\n                        cos2om = coso - 2 * sinU1 * sinU2 / cosA2;\n                    }\n\n                    prevLambda = lambda;\n                    var C = f / 16 * cosA2 * (4 + f * (4 - 3 * cosA2));\n                    lambda = L + (1 - C) * f * sinA * (\n                        sigma + C * sino * (cos2om + C * coso * (-1 + 2 * sqr(cos2om)))\n                    );\n\n                    converged = abs(lambda - prevLambda) <= this.DISTANCE_CONVERGENCE;\n                }\n\n                var u2 = cosA2 * (sqr(a) - sqr(b)) / sqr(b);\n                var A = 1 + u2 / 16384 * (4096 + u2 * (-768 + u2 * (320 - 175 * u2)));\n                var B = u2 / 1024 * (256 + u2 * (-128 + u2 * (74 - 47 * u2)));\n                var deltao = B * sino * (cos2om + B / 4 * (\n                    coso * (-1 + 2 * sqr(cos2om)) - B / 6 * cos2om * (-3 + 4 * sqr(sino)) * (-3 + 4 * sqr(cos2om))\n                ));\n\n                var azimuthFrom = atan2(cosU2 * sinLambda, cosU1 * sinU2 - sinU1 * cosU2 * cosLambda);\n                var azimuthTo = atan2(cosU1 * sinLambda, -sinU1 * cosU2 + cosU1 * sinU2 * cosLambda);\n\n                return {\n                    distance: round(b * A * (sigma - deltao), this.DISTANCE_PRECISION),\n                    azimuthFrom: deg(azimuthFrom),\n                    azimuthTo: deg(azimuthTo)\n                };\n            }\n        });\n\n        // IE < 9 doesn't allow to override toString on definition\n        Location.fn.toString = function() {\n            return kendo.format(this.FORMAT, this.lat, this.lng);\n        };\n\n        Location.fromLngLat = function(ll) {\n            return new Location(ll[1], ll[0]);\n        };\n\n        Location.fromLatLng = function(ll) {\n            return new Location(ll[0], ll[1]);\n        };\n\n        Location.create = function(a, b) {\n            if (defined(a)) {\n                if (a instanceof Location) {\n                    return a.clone();\n                } else if (arguments.length === 1 && a.length === 2) {\n                    return Location.fromLatLng(a);\n                } else {\n                    return new Location(a, b);\n                }\n            }\n        };\n\n        var Extent = Class.extend({\n            init: function(nw, se) {\n                nw = Location.create(nw);\n                se = Location.create(se);\n\n                if (nw.lng + 180 > se.lng + 180 &&\n                    nw.lat + 90 < se.lat + 90) {\n                    this.se = nw;\n                    this.nw = se;\n                } else {\n                    this.se = se;\n                    this.nw = nw;\n                }\n            },\n\n            contains: function(loc) {\n                var nw = this.nw,\n                    se = this.se,\n                    lng = valueOrDefault(loc.lng, loc[1]),\n                    lat = valueOrDefault(loc.lat, loc[0]);\n\n                return loc &&\n                       lng + 180 >= nw.lng + 180 &&\n                       lng + 180 <= se.lng + 180 &&\n                       lat + 90 >= se.lat + 90 &&\n                       lat + 90 <= nw.lat + 90;\n            },\n\n            center: function() {\n                var nw = this.nw;\n                var se = this.se;\n\n                var lng = nw.lng + (se.lng - nw.lng) / 2;\n                var lat = nw.lat + (se.lat - nw.lat) / 2;\n                return new Location(lat, lng);\n            },\n\n            containsAny: function(locs) {\n                var result = false;\n                for (var i = 0; i < locs.length; i++) {\n                    result = result || this.contains(locs[i]);\n                }\n\n                return result;\n            },\n\n            include: function(loc) {\n                var nw = this.nw,\n                    se = this.se,\n                    lng = valueOrDefault(loc.lng, loc[1]),\n                    lat = valueOrDefault(loc.lat, loc[0]);\n\n                nw.lng = min(nw.lng, lng);\n                nw.lat = max(nw.lat, lat);\n\n                se.lng = max(se.lng, lng);\n                se.lat = min(se.lat, lat);\n            },\n\n            includeAll: function(locs) {\n                for (var i = 0; i < locs.length; i++) {\n                    this.include(locs[i]);\n                }\n            },\n\n            edges: function() {\n                var nw = this.nw,\n                    se = this.se;\n\n                return { nw: this.nw, ne: new Location(nw.lat, se.lng),\n                        se: this.se, sw: new Location(se.lat, nw.lng) };\n            },\n\n            toArray: function() {\n                var nw = this.nw,\n                    se = this.se;\n\n                return [nw, new Location(nw.lat, se.lng),\n                        se, new Location(se.lat, nw.lng)];\n            },\n\n            overlaps: function(extent) {\n                return this.containsAny(extent.toArray()) ||\n                       extent.containsAny(this.toArray());\n            }\n        });\n\n        Extent.World = new Extent([90, -180], [-90, 180]);\n\n        Extent.create = function(a, b) {\n            if (a instanceof Extent) {\n                return a;\n            } else if (a && b) {\n                return new Extent(a, b);\n            } else if (a && a.length === 4 && !b) {\n                return new Extent([a[0], a[1]], [a[2], a[3]]);\n            }\n        };\n\n        // Exports ================================================================\n        deepExtend(dataviz, {\n            map: {\n                Extent: Extent,\n                Location: Location\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            template = kendo.template,\n\n            util = kendo.drawing.util,\n            valueOrDefault = util.valueOrDefault,\n            defined = util.defined;\n\n        var Attribution = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n                this._initOptions(options);\n                this.items = [];\n                this.element.addClass(\"k-attribution\");\n            },\n\n            options: {\n                name: \"Attribution\",\n                separator: \"&nbsp;|&nbsp;\",\n                itemTemplate: ({ text }) => text\n            },\n\n            filter: function(extent, zoom) {\n                this._extent = extent;\n                this._zoom = zoom;\n                this._render();\n            },\n\n            add: function(item) {\n                if (defined(item)) {\n                    if (typeof item === \"string\") {\n                        item = { text: item };\n                    }\n\n                    this.items.push(item);\n                    this._render();\n                }\n            },\n\n            remove: function(text) {\n                var result = [];\n                for (var i = 0; i < this.items.length; i++) {\n                    var item = this.items[i];\n                    if (item.text !== text) {\n                        result.push(item);\n                    }\n                }\n\n                this.items = result;\n\n                this._render();\n            },\n\n            clear: function() {\n                this.items = [];\n                this.element.empty();\n            },\n\n            _render: function() {\n                var result = [];\n                var itemTemplate = template(this.options.itemTemplate);\n\n                for (var i = 0; i < this.items.length; i++) {\n                    var item = this.items[i];\n                    var text = this._itemText(item);\n                    if (text !== \"\") {\n                        result.push(itemTemplate({\n                            text: text\n                        }));\n                    }\n                }\n\n                if (result.length > 0) {\n                    this.element.empty()\n                        .append(result.join(this.options.separator))\n                        .show();\n                } else {\n                    this.element.hide();\n                }\n            },\n\n            _itemText: function(item) {\n                var text = \"\";\n                var inZoomLevel = this._inZoomLevel(item.minZoom, item.maxZoom);\n                var inArea = this._inArea(item.extent);\n\n                if (inZoomLevel && inArea) {\n                    text += item.text;\n                }\n\n                return text;\n            },\n\n            _inZoomLevel: function(min, max) {\n                var result = true;\n                min = valueOrDefault(min, -Number.MAX_VALUE);\n                max = valueOrDefault(max, Number.MAX_VALUE);\n\n                result = this._zoom > min && this._zoom < max;\n\n                return result;\n            },\n\n            _inArea: function(area) {\n                var result = true;\n\n                if (area) {\n                    result = area.contains(this._extent);\n                }\n\n                return result;\n            }\n        });\n\n        kendo.dataviz.ui.plugin(Attribution);\n    })(window.kendo.jQuery);\n\n    (function($) {\n        var kendo = window.kendo;\n        var Widget = kendo.ui.Widget;\n        var keys = kendo.keys;\n\n        var NS = \".kendoNavigator\";\n\n        // Helper functions =======================================================\n        function button(dir) {\n            const mapIcon = {\n                n: 'up',\n                s: 'down',\n                e: 'right',\n                w: 'left'\n            };\n           return `<button class=\"k-button k-rounded-full k-button-flat k-button-flat-base k-icon-button k-navigator-${dir}\" aria-label=\"move ${mapIcon[dir]}\">` +\n                   kendo.ui.icon({ icon: `caret-alt-${mapIcon[dir]}`, iconClass: \"k-button-icon\" }) +\n               '</button>';\n        }\n\n        var BUTTONS = button(\"n\") + button(\"e\") + button(\"s\") + button(\"w\");\n\n        var Navigator = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n                this._initOptions(options);\n\n                this.element.addClass(\"k-navigator\")\n                            .append(BUTTONS)\n                            .on(\"click\" + NS, \".k-button\", this._click.bind(this));\n\n                var parentElement = this.element.parent().closest(\"[\" + kendo.attr(\"role\") + \"]\");\n                this._keyroot = parentElement.length > 0 ? parentElement : this.element;\n                this._tabindex(this._keyroot);\n\n                this._keydown = this._keydown.bind(this);\n                this._keyroot.on(\"keydown\", this._keydown);\n            },\n\n            options: {\n                name: \"Navigator\",\n                panStep: 1\n            },\n\n            events: [\n                \"pan\"\n            ],\n\n            dispose: function() {\n                this._keyroot.off(\"keydown\", this._keydown);\n            },\n\n            _pan: function(x, y) {\n                var panStep = this.options.panStep;\n                this.trigger(\"pan\", {\n                    x: x * panStep,\n                    y: y * panStep\n                });\n            },\n\n            _click: function(e) {\n                var x = 0;\n                var y = 0;\n                var button = $(e.currentTarget);\n\n                if (button.is(\".k-navigator-n\")) {\n                    y = 1;\n                } else if (button.is(\".k-navigator-s\")) {\n                    y = -1;\n                } else if (button.is(\".k-navigator-e\")) {\n                    x = 1;\n                } else if (button.is(\".k-navigator-w\")) {\n                    x = -1;\n                }\n\n                this._pan(x, y);\n                e.preventDefault();\n            },\n\n            _keydown: function(e) {\n                switch (e.which) {\n                    case keys.UP:\n                        this._pan(0, 1);\n                        e.preventDefault();\n                        break;\n\n                    case keys.DOWN:\n                        this._pan(0, -1);\n                        e.preventDefault();\n                        break;\n\n                    case keys.RIGHT:\n                        this._pan(1, 0);\n                        e.preventDefault();\n                        break;\n\n                    case keys.LEFT:\n                        this._pan(-1, 0);\n                        e.preventDefault();\n                        break;\n                }\n            }\n        });\n\n        // Exports ================================================================\n        kendo.dataviz.ui.plugin(Navigator);\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n        var kendo = window.kendo;\n        var Widget = kendo.ui.Widget;\n        var keys = kendo.keys;\n\n        // Helper functions =======================================================\n        function button(dir, icon) {\n           return `<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button k-zoom-${dir}\" title=\"zoom-${dir}\" aria-label=\"zoom-${dir}\">${kendo.ui.icon({ icon: icon, iconClass: \"k-button-icon\" })}</button>`;\n        }\n\n        var NS = \".kendoZoomControl\";\n        var BUTTONS = button(\"in\", \"plus\") + button(\"out\", \"minus\");\n\n        var PLUS = 187;\n        var MINUS = 189;\n        var FF_PLUS = 61;\n        var FF_MINUS = 173;\n\n\n        var ZoomControl = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n                this._initOptions(options);\n\n                this.element.addClass(\"k-zoom-control k-button-group k-group-horizontal k-button-group-solid\")\n                            .append(BUTTONS)\n                            .on(\"click\" + NS, \".k-button\", this._click.bind(this));\n\n                var parentElement = this.element.parent().closest(\"[\" + kendo.attr(\"role\") + \"]\");\n                this._keyroot = parentElement.length > 0 ? parentElement : this.element;\n\n                this._tabindex(this._keyroot);\n\n                this._keydown = this._keydown.bind(this);\n                this._keyroot.on(\"keydown\", this._keydown);\n            },\n\n            options: {\n                name: \"ZoomControl\",\n                zoomStep: 1\n            },\n\n            events: [\n                \"change\"\n            ],\n\n            _change: function(dir) {\n                var zoomStep = this.options.zoomStep;\n                this.trigger(\"change\", {\n                    delta: dir * zoomStep\n                });\n            },\n\n            _click: function(e) {\n                var button = $(e.currentTarget);\n                var dir = 1;\n\n                if (button.is(\".k-zoom-out\")) {\n                    dir = -1;\n                }\n\n                this._change(dir);\n                e.preventDefault();\n            },\n\n            _keydown: function(e) {\n                switch (e.which) {\n                    case keys.NUMPAD_PLUS:\n                    case PLUS:\n                    case FF_PLUS:\n                        this._change(1);\n                        break;\n\n                    case keys.NUMPAD_MINUS:\n                    case MINUS:\n                    case FF_MINUS:\n                        this._change(-1);\n                        break;\n                }\n            }\n        });\n\n\n        // Exports ================================================================\n        kendo.dataviz.ui.plugin(ZoomControl);\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        // Imports ================================================================\n        var math = Math,\n            atan = math.atan,\n            exp = math.exp,\n            pow = math.pow,\n            sin = math.sin,\n            log = math.log,\n            tan = math.tan,\n\n            kendo = window.kendo,\n            Class = kendo.Class,\n\n            dataviz = kendo.dataviz,\n            deepExtend = kendo.deepExtend,\n\n            g = kendo.geometry,\n            Point = g.Point,\n\n            map = dataviz.map,\n            Location = map.Location,\n\n            util = kendo.drawing.util,\n            rad = util.rad,\n            deg = util.deg,\n            limit = util.limitValue;\n\n        // Constants ==============================================================\n        var PI = math.PI,\n            PI_DIV_2 = PI / 2,\n            PI_DIV_4 = PI / 4,\n            DEG_TO_RAD = PI / 180;\n\n        // Coordinate reference systems ===========================================\n        var WGS84 = {\n            a: 6378137, // Semi-major radius\n            b: 6356752.314245179, // Semi-minor radius\n            f: 0.0033528106647474805, // Flattening\n            e: 0.08181919084262149 // Eccentricity\n        };\n\n        // WGS 84 / World Mercator\n        var Mercator = Class.extend({\n            init: function(options) {\n                this._initOptions(options);\n            },\n\n            MAX_LNG: 180,\n            MAX_LAT: 85.0840590501,\n            INVERSE_ITERATIONS: 15,\n            INVERSE_CONVERGENCE: 1e-12,\n\n            options: {\n                centralMeridian: 0,\n                datum: WGS84\n            },\n\n            forward: function(loc, clamp) {\n                var proj = this,\n                    options = proj.options,\n                    datum = options.datum,\n                    r = datum.a,\n                    lng0 = options.centralMeridian,\n                    lat = limit(loc.lat, -proj.MAX_LAT, proj.MAX_LAT),\n                    lng = clamp ? limit(loc.lng, -proj.MAX_LNG, proj.MAX_LNG) : loc.lng,\n                    x = rad(lng - lng0) * r,\n                    y = proj._projectLat(lat);\n\n                return new Point(x, y);\n            },\n\n            _projectLat: function(lat) {\n                var datum = this.options.datum,\n                    ecc = datum.e,\n                    r = datum.a,\n                    y = rad(lat),\n                    ts = tan(PI_DIV_4 + y / 2),\n                    con = ecc * sin(y),\n                    p = pow((1 - con) / (1 + con), ecc / 2);\n\n                // See:\n                // http://en.wikipedia.org/wiki/Mercator_projection#Generalization_to_the_ellipsoid\n                return r * log(ts * p);\n            },\n\n            inverse: function(point, clamp) {\n                var proj = this,\n                    options = proj.options,\n                    datum = options.datum,\n                    r = datum.a,\n                    lng0 = options.centralMeridian,\n                    lng = point.x / (DEG_TO_RAD * r) + lng0,\n                    lat = limit(proj._inverseY(point.y), -proj.MAX_LAT, proj.MAX_LAT);\n\n                if (clamp) {\n                    lng = limit(lng, -proj.MAX_LNG, proj.MAX_LNG);\n                }\n\n                return new Location(lat, lng);\n            },\n\n            _inverseY: function(y) {\n                var proj = this,\n                    datum = proj.options.datum,\n                    r = datum.a,\n                    ecc = datum.e,\n                    ecch = ecc / 2,\n                    ts = exp(-y / r),\n                    phi = PI_DIV_2 - 2 * atan(ts),\n                    i;\n\n                for (i = 0; i <= proj.INVERSE_ITERATIONS; i++) {\n                    var con = ecc * sin(phi),\n                        p = pow((1 - con) / (1 + con), ecch),\n                        dphi = PI_DIV_2 - 2 * atan(ts * p) - phi;\n\n                    phi += dphi;\n\n                    if (math.abs(dphi) <= proj.INVERSE_CONVERGENCE) {\n                        break;\n                    }\n                }\n\n                return deg(phi);\n            }\n        });\n\n        // WGS 84 / Pseudo-Mercator\n        // Used by Google Maps, Bing, OSM, etc.\n        // Spherical projection of ellipsoidal coordinates.\n        var SphericalMercator = Mercator.extend({\n            MAX_LAT: 85.0511287798,\n\n            _projectLat: function(lat) {\n                var r = this.options.datum.a,\n                    y = rad(lat),\n                    ts = tan(PI_DIV_4 + y / 2);\n\n                return r * log(ts);\n            },\n\n            _inverseY: function(y) {\n                var r = this.options.datum.a,\n                    ts = exp(-y / r);\n\n                return deg(PI_DIV_2 - (2 * atan(ts)));\n            }\n        });\n\n        var Equirectangular = Class.extend({\n            forward: function(loc) {\n                return new Point(loc.lng, loc.lat);\n            },\n\n            inverse: function(point) {\n                return new Location(point.y, point.x);\n            }\n        });\n\n        // TODO: Better (less cryptic name) for this class(es)\n        var EPSG3857 = Class.extend({\n            init: function() {\n                var crs = this,\n                    proj = crs._proj = new SphericalMercator();\n\n                var c = this.c = 2 * PI * proj.options.datum.a;\n\n                // Scale circumference to 1, mirror Y and shift origin to top left\n                this._tm = g.transform().translate(0.5, 0.5).scale(1 / c, -1 / c);\n\n                // Inverse transform matrix\n                this._itm = g.transform().scale(c, -c).translate(-0.5, -0.5);\n            },\n\n            // Location <-> Point (screen coordinates for a given scale)\n            toPoint: function(loc, scale, clamp) {\n                var point = this._proj.forward(loc, clamp);\n\n                return point\n                    .transform(this._tm)\n                    .scale(scale || 1);\n            },\n\n            toLocation: function(point, scale, clamp) {\n                point = point\n                    .clone()\n                    .scale(1 / (scale || 1))\n                    .transform(this._itm);\n\n                return this._proj.inverse(point, clamp);\n            }\n        });\n\n        var EPSG3395 = Class.extend({\n            init: function() {\n                this._proj = new Mercator();\n            },\n\n            toPoint: function(loc) {\n                return this._proj.forward(loc);\n            },\n\n            toLocation: function(point) {\n                return this._proj.inverse(point);\n            }\n        });\n\n        // WGS 84\n        var EPSG4326 = Class.extend({\n            init: function() {\n                this._proj = new Equirectangular();\n            },\n\n            toPoint: function(loc) {\n                return this._proj.forward(loc);\n            },\n\n            toLocation: function(point) {\n                return this._proj.inverse(point);\n            }\n        });\n\n        // Exports ================================================================\n        deepExtend(dataviz, {\n            map: {\n                crs: {\n                    EPSG3395: EPSG3395,\n                    EPSG3857: EPSG3857,\n                    EPSG4326: EPSG4326\n                },\n                datums: {\n                    WGS84: WGS84\n                },\n                projections: {\n                    Equirectangular: Equirectangular,\n                    Mercator: Mercator,\n                    SphericalMercator: SphericalMercator\n                }\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        // Imports ================================================================\n        var kendo = window.kendo,\n            Class = kendo.Class,\n\n            dataviz = kendo.dataviz,\n            deepExtend = kendo.deepExtend,\n\n            Extent = dataviz.map.Extent,\n\n            util = kendo.drawing.util,\n            defined = util.defined;\n\n        // Implementation =========================================================\n        var Layer = Class.extend({\n            init: function(map, options) {\n                this._initOptions(options);\n                this.map = map;\n\n                this.element = $(\"<div class='k-layer'></div>\")\n                   .css({\n                       \"zIndex\": this.options.zIndex,\n                       \"opacity\": this.options.opacity\n                   })\n                   .appendTo(map.scrollElement);\n\n                this._beforeReset = this._beforeReset.bind(this);\n                this._reset = this._reset.bind(this);\n                this._resize = this._resize.bind(this);\n                this._panEnd = this._panEnd.bind(this);\n                this._activate();\n\n                this._updateAttribution();\n            },\n\n            destroy: function() {\n                this._deactivate();\n            },\n\n            show: function() {\n                this.reset();\n                this._activate();\n                this._applyExtent(true);\n            },\n\n            hide: function() {\n                this._deactivate();\n                this._setVisibility(false);\n            },\n\n            reset: function() {\n                this._beforeReset();\n                this._reset();\n            },\n\n            _reset: function() {\n                this._applyExtent();\n            },\n\n            _beforeReset: $.noop,\n\n            _resize: $.noop,\n\n            _panEnd: function() {\n                this._applyExtent();\n            },\n\n            _applyExtent: function() {\n                var options = this.options;\n\n                var zoom = this.map.zoom();\n                var matchMinZoom = !defined(options.minZoom) || zoom >= options.minZoom;\n                var matchMaxZoom = !defined(options.maxZoom) || zoom <= options.maxZoom;\n\n                var extent = Extent.create(options.extent);\n                var inside = !extent || extent.overlaps(this.map.extent());\n\n                this._setVisibility(matchMinZoom && matchMaxZoom && inside);\n            },\n\n            _setVisibility: function(visible) {\n                this.element.css(\"display\", visible ? \"\" : \"none\");\n            },\n\n            _activate: function() {\n                var map = this.map;\n                this._deactivate();\n                map.bind(\"beforeReset\", this._beforeReset);\n                map.bind(\"reset\", this._reset);\n                map.bind(\"resize\", this._resize);\n                map.bind(\"panEnd\", this._panEnd);\n            },\n\n            _deactivate: function() {\n                var map = this.map;\n                map.unbind(\"beforeReset\", this._beforeReset);\n                map.unbind(\"reset\", this._reset);\n                map.unbind(\"resize\", this._resize);\n                map.unbind(\"panEnd\", this._panEnd);\n            },\n\n            _updateAttribution: function() {\n                var attr = this.map.attribution;\n\n                if (attr) {\n                    attr.add(this.options.attribution);\n                }\n            }\n        });\n\n        // Exports ================================================================\n        deepExtend(dataviz, {\n            map: {\n                layers: {\n                    Layer: Layer\n                }\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        // Imports ================================================================\n        var kendo = window.kendo,\n            Class = kendo.Class,\n            DataSource = kendo.data.DataSource,\n\n            dataviz = kendo.dataviz,\n            deepExtend = kendo.deepExtend,\n\n            g = kendo.geometry,\n\n            d = kendo.drawing,\n            Group = d.Group,\n\n            last = d.util.last,\n            defined = d.util.defined,\n\n            map = dataviz.map,\n            Location = map.Location,\n            Layer = map.layers.Layer;\n\n        // Implementation =========================================================\n        var ShapeLayer = Layer.extend({\n            init: function(map, options) {\n\n                this._pan = this._pan.bind(this);\n\n                Layer.fn.init.call(this, map, options);\n\n                this.surface = d.Surface.create(this.element, {\n                    width: map.scrollElement.width(),\n                    height: map.scrollElement.height()\n                });\n\n                this._initRoot();\n\n                this.movable = new kendo.ui.Movable(this.surface.element);\n                this._markers = [];\n\n                this._click = this._handler(\"shapeClick\");\n                this.surface.bind(\"click\", this._click);\n\n                this._mouseenter = this._handler(\"shapeMouseEnter\");\n                this.surface.bind(\"mouseenter\", this._mouseenter);\n\n                this._mouseleave = this._handler(\"shapeMouseLeave\");\n                this.surface.bind(\"mouseleave\", this._mouseleave);\n\n                this._initDataSource();\n            },\n\n            options: {\n                autoBind: true\n            },\n\n            destroy: function() {\n                Layer.fn.destroy.call(this);\n\n                this.surface.destroy();\n                this.dataSource.unbind(\"change\", this._dataChange);\n            },\n\n            setDataSource: function(dataSource) {\n                if (this.dataSource) {\n                    this.dataSource.unbind(\"change\", this._dataChange);\n                }\n\n                this.dataSource = kendo.data.DataSource.create(dataSource);\n                this.dataSource.bind(\"change\", this._dataChange);\n\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n\n            _reset: function() {\n                Layer.fn._reset.call(this);\n                this._translateSurface();\n\n                if (this._data) {\n                    this._load(this._data);\n                }\n            },\n\n            _initRoot: function() {\n                this._root = new Group();\n                this.surface.draw(this._root);\n            },\n\n            _beforeReset: function() {\n                this.surface.clear();\n                this._initRoot();\n            },\n\n            _resize: function() {\n                this.surface.size(this.map.size());\n            },\n\n            _initDataSource: function() {\n                var dsOptions = this.options.dataSource;\n                this._dataChange = this._dataChange.bind(this);\n                this.dataSource = DataSource\n                    .create(dsOptions)\n                    .bind(\"change\", this._dataChange);\n\n                if (dsOptions && this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n\n            _dataChange: function(e) {\n                this._data = e.sender.view();\n                this._load(this._data);\n            },\n\n            _load: function(data) {\n                this._clearMarkers();\n\n                if (!this._loader) {\n                    this._loader = new GeoJSONLoader(this.map, this.options.style, this);\n                }\n\n                var container = new Group();\n                for (var i = 0; i < data.length; i++) {\n                    var shape = this._loader.parse(data[i]);\n                    if (shape) {\n                        container.append(shape);\n                    }\n                }\n\n                this._root.clear();\n                this._root.append(container);\n            },\n\n            shapeCreated: function(shape) {\n                var cancelled = false;\n                if (shape instanceof d.Circle) {\n                    cancelled = defined(this._createMarker(shape));\n                }\n\n                if (!cancelled) {\n                    var args = { layer: this, shape: shape };\n                    cancelled = this.map.trigger(\"shapeCreated\", args);\n                }\n\n                return cancelled;\n            },\n\n            featureCreated: function(e) {\n                e.layer = this;\n                this.map.trigger(\"shapeFeatureCreated\", e);\n            },\n\n            _createMarker: function(shape) {\n                var marker = this.map.markers.bind({\n                    location: shape.location\n                }, shape.dataItem);\n\n                if (marker) {\n                    this._markers.push(marker);\n                }\n\n                return marker;\n            },\n\n            _clearMarkers: function() {\n                for (var i = 0; i < this._markers.length; i++) {\n                    this.map.markers.remove(this._markers[i]);\n                }\n                this._markers = [];\n            },\n\n            _pan: function() {\n                if (!this._panning) {\n                    this._panning = true;\n                    this.surface.suspendTracking();\n                }\n            },\n\n            _panEnd: function(e) {\n                Layer.fn._panEnd.call(this, e);\n                this._translateSurface();\n                this.surface.resumeTracking();\n                this._panning = false;\n            },\n\n            _translateSurface: function() {\n                var map = this.map;\n                var nw = map.locationToView(map.extent().nw);\n\n                if (this.surface.translate) {\n                    this.surface.translate(nw);\n                    this.movable.moveTo({ x: nw.x, y: nw.y });\n                }\n            },\n\n            _handler: function(event) {\n                var layer = this;\n                return function(e) {\n                    if (e.element) {\n                        var args = {\n                            layer: layer,\n                            shape: e.element,\n                            originalEvent: e.originalEvent\n                        };\n\n                        layer.map.trigger(event, args);\n                    }\n                };\n            },\n\n            _activate: function() {\n                Layer.fn._activate.call(this);\n\n                this.map.bind(\"pan\", this._pan);\n            },\n\n            _deactivate: function() {\n                Layer.fn._deactivate.call(this);\n\n                this.map.unbind(\"pan\", this._pan);\n            }\n        });\n\n        var GeoJSONLoader = Class.extend({\n            init: function(locator, defaultStyle, observer) {\n                this.observer = observer;\n                this.locator = locator;\n                this.style = defaultStyle;\n            },\n\n            parse: function(item) {\n                var root = new Group();\n                var unwrap = true;\n\n                if (item.type === \"Feature\") {\n                    unwrap = false;\n                    this._loadGeometryTo(root, item.geometry, item);\n                    this._featureCreated(root, item);\n                } else {\n                    this._loadGeometryTo(root, item, item);\n                }\n\n                if (unwrap && root.children.length < 2) {\n                    root = root.children[0];\n                }\n\n                return root;\n            },\n\n            _shapeCreated: function(shape) {\n                var cancelled = false;\n\n                if (this.observer && this.observer.shapeCreated) {\n                    cancelled = this.observer.shapeCreated(shape);\n                }\n\n                return cancelled;\n            },\n\n            _featureCreated: function(group, dataItem) {\n                if (this.observer && this.observer.featureCreated) {\n                    this.observer.featureCreated({\n                        group: group,\n                        dataItem: dataItem,\n                        properties: dataItem.properties\n                    });\n                }\n            },\n\n            _loadGeometryTo: function(container, geometry, dataItem) {\n                var coords = geometry.coordinates;\n                var i;\n                var path;\n\n                switch (geometry.type) {\n                    case \"LineString\":\n                        path = this._loadPolygon(container, [coords], dataItem);\n                        this._setLineFill(path);\n                        break;\n\n                    case \"MultiLineString\":\n                        for (i = 0; i < coords.length; i++) {\n                            path = this._loadPolygon(container, [coords[i]], dataItem);\n                            this._setLineFill(path);\n                        }\n                        break;\n\n                    case \"Polygon\":\n                        this._loadPolygon(container, coords, dataItem);\n                        break;\n\n                    case \"MultiPolygon\":\n                        for (i = 0; i < coords.length; i++) {\n                            this._loadPolygon(container, coords[i], dataItem);\n                        }\n                        break;\n\n                    case \"Point\":\n                        this._loadPoint(container, coords, dataItem);\n                        break;\n\n                    case \"MultiPoint\":\n                        for (i = 0; i < coords.length; i++) {\n                            this._loadPoint(container, coords[i], dataItem);\n                        }\n                        break;\n                }\n            },\n\n            _setLineFill: function(path) {\n                var segments = path.segments;\n                if (segments.length < 4 || !segments[0].anchor().equals(last(segments).anchor())) {\n                    path.options.fill = null;\n                }\n            },\n\n            _loadShape: function(container, shape) {\n                if (!this._shapeCreated(shape)) {\n                    container.append(shape);\n                }\n\n                return shape;\n            },\n\n            _loadPolygon: function(container, rings, dataItem) {\n                var shape = this._buildPolygon(rings);\n                shape.dataItem = dataItem;\n\n                return this._loadShape(container, shape);\n            },\n\n            _buildPolygon: function(rings) {\n                var type = rings.length > 1 ? d.MultiPath : d.Path;\n                var path = new type(this.style);\n\n                for (var i = 0; i < rings.length; i++) {\n                    for (var j = 0; j < rings[i].length; j++) {\n                        var point = this.locator.locationToView(\n                            Location.fromLngLat(rings[i][j])\n                        );\n\n                        if (j === 0) {\n                            path.moveTo(point.x, point.y);\n                        } else {\n                            path.lineTo(point.x, point.y);\n                        }\n                    }\n                }\n\n                return path;\n            },\n\n            _loadPoint: function(container, coords, dataItem) {\n                var location = Location.fromLngLat(coords);\n                var point = this.locator.locationToView(location);\n\n                var circle = new g.Circle(point, 10);\n                var shape = new d.Circle(circle, this.style);\n                shape.dataItem = dataItem;\n                shape.location = location;\n\n                return this._loadShape(container, shape);\n            }\n        });\n\n        // Exports ================================================================\n        deepExtend(kendo.data, {\n            schemas: {\n                geojson: {\n                    type: \"json\",\n                    data: function(data) {\n                        if (data.type === \"FeatureCollection\") {\n                            return data.features;\n                        }\n\n                        if (data.type === \"GeometryCollection\") {\n                            return data.geometries;\n                        }\n\n                        return data;\n                    }\n                }\n            },\n            transports: {\n                geojson: {\n                    read: {\n                        dataType: \"json\"\n                    }\n                }\n            }\n        });\n\n        deepExtend(dataviz, {\n            map: {\n                layers: {\n                    shape: ShapeLayer,\n                    ShapeLayer: ShapeLayer\n                },\n                GeoJSONLoader: GeoJSONLoader\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        // Imports ================================================================\n        var kendo = window.kendo,\n            getter = kendo.getter,\n\n            dataviz = kendo.dataviz,\n            deepExtend = kendo.deepExtend,\n\n            g = kendo.geometry,\n            d = kendo.drawing,\n\n            util = d.util,\n            defined = util.defined,\n\n            map = dataviz.map,\n            Location = map.Location,\n            ShapeLayer = map.layers.ShapeLayer;\n\n        // Implementation =========================================================\n        var BubbleLayer = ShapeLayer.extend({\n            options: {\n                autoBind: true,\n                locationField: \"location\",\n                valueField: \"value\",\n                minSize: 0,\n                maxSize: 100,\n                scale: \"sqrt\",\n                symbol: \"circle\"\n            },\n\n            _load: function(data) {\n                this.surface.clear();\n\n                if (data.length === 0) {\n                    return;\n                }\n\n                var opt = this.options;\n                var getValue = getter(opt.valueField);\n\n                data = data.slice(0);\n                data.sort(function(a, b) {\n                    return getValue(b) - getValue(a);\n                });\n\n                var scaleType = this._scaleType();\n                var scale;\n                for (var i = 0; i < data.length; i++) {\n                    var dataItem = data[i];\n                    var location = getter(opt.locationField)(dataItem);\n                    var value = getter(opt.valueField)(dataItem);\n\n                    if (defined(location) && defined(value)) {\n                        if (!scale) {\n                            scale = new scaleType([0, value], [opt.minSize, opt.maxSize]);\n                        }\n\n                        location = Location.create(location);\n                        var center = this.map.locationToView(location);\n                        var size = scale.map(value);\n\n                        var symbol = this._createSymbol({\n                            center: center,\n                            size: size,\n                            style: opt.style,\n                            dataItem: dataItem,\n                            location: location\n                        });\n\n                        symbol.dataItem = dataItem;\n                        symbol.location = location;\n                        symbol.value = value;\n\n                        this._drawSymbol(symbol);\n                    }\n                }\n            },\n\n            _scaleType: function() {\n                var scale = this.options.scale;\n\n                if (kendo.isFunction(scale)) {\n                    return scale;\n                }\n\n                return dataviz.map.scales[scale];\n            },\n\n            _createSymbol: function(args) {\n                var symbol = this.options.symbol;\n                if (!kendo.isFunction(symbol)) {\n                    symbol = dataviz.map.symbols[symbol];\n                }\n\n                return symbol(args);\n            },\n\n            _drawSymbol: function(shape) {\n                var args = { layer: this, shape: shape };\n                var cancelled = this.map.trigger(\"shapeCreated\", args);\n                if (!cancelled) {\n                    this.surface.draw(shape);\n                }\n            }\n        });\n\n        var SqrtScale = kendo.Class.extend({\n            init: function(domain, range) {\n                this._domain = domain;\n                this._range = range;\n\n                var domainRange = Math.sqrt(domain[1]) - Math.sqrt(domain[0]);\n                var outputRange = range[1] - range[0];\n                this._ratio = outputRange / domainRange;\n            },\n\n            map: function(value) {\n                var rel = (Math.sqrt(value) - Math.sqrt(this._domain[0])) * this._ratio;\n                return this._range[0] + rel;\n            }\n        });\n\n        var Symbols = {\n            circle: function(args) {\n                var geo = new g.Circle(args.center, args.size / 2);\n                return new d.Circle(geo, args.style);\n            },\n\n            square: function(args) {\n                var path = new d.Path(args.style);\n                var halfSize = args.size / 2;\n                var center = args.center;\n\n                path.moveTo(center.x - halfSize, center.y - halfSize)\n                    .lineTo(center.x + halfSize, center.y - halfSize)\n                    .lineTo(center.x + halfSize, center.y + halfSize)\n                    .lineTo(center.x - halfSize, center.y + halfSize)\n                    .close();\n\n                return path;\n            }\n        };\n\n        // Exports ================================================================\n        deepExtend(dataviz, {\n            map: {\n                layers: {\n                    bubble: BubbleLayer,\n                    BubbleLayer: BubbleLayer\n                },\n                scales: {\n                    sqrt: SqrtScale\n                },\n                symbols: Symbols\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        // Imports ================================================================\n        var math = Math,\n\n            kendo = window.kendo,\n            Class = kendo.Class,\n            template = kendo.template,\n\n            dataviz = kendo.dataviz,\n            deepExtend = kendo.deepExtend,\n\n            g = kendo.geometry,\n            Point = g.Point,\n\n            Layer = dataviz.map.layers.Layer,\n\n            util = kendo.util,\n            renderSize = util.renderSize,\n\n            drawingUtil = kendo.drawing.util,\n            round = drawingUtil.round,\n            limit = drawingUtil.limitValue;\n\n        // Image tile layer =============================================================\n        var TileLayer = Layer.extend({\n            init: function(map, options) {\n                Layer.fn.init.call(this, map, options);\n\n                if (typeof this.options.subdomains === \"string\") {\n                    this.options.subdomains = this.options.subdomains.split(\"\");\n                }\n\n                var viewType = this._viewType();\n                this._view = new viewType(this.element, this.options);\n            },\n\n            destroy: function() {\n                Layer.fn.destroy.call(this);\n\n                this._view.destroy();\n                this._view = null;\n            },\n\n            _beforeReset: function() {\n                var map = this.map;\n                var origin = map.locationToLayer(map.extent().nw).round();\n                this._view.viewOrigin(origin);\n            },\n\n            _reset: function(e) {\n                var tileTitle;\n\n                if (e) {\n                    tileTitle = e.tileTitle;\n                } else {\n                    tileTitle = \"\";\n                }\n\n                Layer.fn._reset.call(this);\n                this._updateView();\n                this._view.reset(tileTitle);\n            },\n\n            _viewType: function() {\n                return TileView;\n            },\n\n            _activate: function() {\n                Layer.fn._activate.call(this);\n\n                if (!kendo.support.mobileOS) {\n                    if (!this._pan) {\n                        this._pan = kendo.throttle(\n                            this._render.bind(this),\n                            100\n                        );\n                    }\n\n                    this.map.bind(\"pan\", this._pan);\n                }\n            },\n\n            _deactivate: function() {\n                Layer.fn._deactivate.call(this);\n\n                if (this._pan) {\n                    this.map.unbind(\"pan\", this._pan);\n                }\n            },\n\n            _updateView: function() {\n                var view = this._view,\n                    map = this.map,\n                    extent = map.extent(),\n                    extentToPoint = {\n                        nw: map.locationToLayer(extent.nw).round(),\n                        se: map.locationToLayer(extent.se).round()\n                    };\n\n                view.center(map.locationToLayer(map.center()));\n                view.extent(extentToPoint);\n                view.zoom(map.zoom());\n            },\n\n            _resize: function() {\n                this._render();\n            },\n\n            _panEnd: function(e) {\n                Layer.fn._panEnd.call(this, e);\n                this._render();\n            },\n\n            _render: function() {\n                this._updateView();\n                this._view.render();\n            }\n        });\n\n        var TileView = Class.extend({\n            init: function(element, options) {\n                this.element = element;\n                this._initOptions(options);\n\n                this.pool = new TilePool();\n            },\n\n            options: {\n                tileSize: 256,\n                subdomains: [\"a\", \"b\", \"c\"],\n                urlTemplate: () => \"\"\n            },\n\n            center: function(center) {\n                this._center = center;\n            },\n\n            extent: function(extent) {\n                this._extent = extent;\n            },\n\n            viewOrigin: function(origin) {\n                this._viewOrigin = origin;\n            },\n\n            zoom: function(zoom) {\n                this._zoom = zoom;\n            },\n\n            pointToTileIndex: function(point) {\n                return new Point(\n                    math.floor(point.x / this.options.tileSize),\n                    math.floor(point.y / this.options.tileSize)\n                );\n            },\n\n            tileCount: function() {\n                var size = this.size(),\n                    firstTileIndex = this.pointToTileIndex(this._extent.nw),\n                    nw = this._extent.nw,\n                    point = this.indexToPoint(firstTileIndex).translate(-nw.x, -nw.y);\n\n                return {\n                    x: math.ceil((math.abs(point.x) + size.width) / this.options.tileSize),\n                    y: math.ceil((math.abs(point.y) + size.height) / this.options.tileSize)\n                };\n            },\n\n            size: function() {\n                var nw = this._extent.nw,\n                    se = this._extent.se,\n                    diff = se.clone().translate(-nw.x, -nw.y);\n\n                return {\n                    width: diff.x,\n                    height: diff.y\n                };\n            },\n\n            indexToPoint: function(index) {\n                var x = index.x, y = index.y;\n\n                return new Point(\n                    x * this.options.tileSize,\n                    y * this.options.tileSize\n                );\n            },\n\n            subdomainText: function() {\n                var subdomains = this.options.subdomains;\n\n                return subdomains[this.subdomainIndex++ % subdomains.length];\n            },\n\n            destroy: function() {\n                this.element.empty();\n                this.pool.empty();\n            },\n\n            reset: function(tileTitle) {\n                this._tileTitle = tileTitle;\n                this.pool.reset();\n                this.subdomainIndex = 0;\n                this.render();\n            },\n\n            render: function() {\n                var size = this.tileCount(),\n                    firstTileIndex = this.pointToTileIndex(this._extent.nw),\n                    tile, x, y;\n\n                for (x = 0; x < size.x; x++) {\n                    for (y = 0; y < size.y; y++) {\n                        tile = this.createTile({\n                            x: firstTileIndex.x + x,\n                            y: firstTileIndex.y + y\n                        });\n\n                        if (!tile.visible) {\n                            tile.show();\n                        }\n                    }\n                }\n            },\n\n            createTile: function(currentIndex) {\n                var options = this.tileOptions(currentIndex);\n                var tile = this.pool.get(this._center, options);\n                if (tile.element.parent().length === 0) {\n                    this.element.append(tile.element);\n                }\n\n                return tile;\n            },\n\n            tileOptions: function(currentIndex) {\n                var index = this.wrapIndex(currentIndex),\n                    point = this.indexToPoint(currentIndex),\n                    origin = this._viewOrigin,\n                    offset = point.clone().translate(-origin.x, -origin.y);\n\n                return {\n                    index: index,\n                    currentIndex: currentIndex,\n                    point: point,\n                    offset: roundPoint(offset),\n                    zoom: this._zoom,\n                    size: this.options.tileSize,\n                    subdomain: this.subdomainText(),\n                    urlTemplate: this.options.urlTemplate,\n                    errorUrlTemplate: this.options.errorUrlTemplate,\n                    tileTitle: this._tileTitle\n                };\n            },\n\n            wrapIndex: function(index) {\n                var boundary = math.pow(2, this._zoom);\n                return {\n                    x: this.wrapValue(index.x, boundary),\n                    y: limit(index.y, 0, boundary - 1)\n                };\n            },\n\n            wrapValue: function(value, boundary) {\n                var remainder = (math.abs(value) % boundary);\n                if (value >= 0) {\n                    value = remainder;\n                } else {\n                    value = boundary - (remainder === 0 ? boundary : remainder);\n                }\n\n                return value;\n            }\n        });\n\n        var ImageTile = Class.extend({\n            init: function(id, options) {\n                this.id = id;\n                this.visible = true;\n\n                this._initOptions(options);\n                this.createElement();\n                this.show();\n            },\n\n            options: {\n                urlTemplate: () => \"\",\n                errorUrlTemplate: () => \"\"\n            },\n\n            createElement: function() {\n                this.element = $(\"<img alt='\" + this.options.tileTitle + \"' />\")\n                                .css({ position: \"absolute\", display: \"block\", width: this.options.size, height: this.options.size })\n                                .on(\"error\", (function(e) {\n                                    if (this.errorUrl()) {\n                                        e.target.setAttribute(\"src\", this.errorUrl());\n                                    } else {\n                                        e.target.removeAttribute(\"src\");\n                                    }\n                                }).bind(this));\n            },\n\n            show: function() {\n                var element = this.element[0];\n                element.style.top = renderSize(this.options.offset.y);\n                element.style.left = renderSize(this.options.offset.x);\n\n                var url = this.url();\n                if (url) {\n                    element.setAttribute(\"src\", url);\n                }\n\n                element.style.visibility = \"visible\";\n                this.visible = true;\n            },\n\n            hide: function() {\n                this.element[0].style.visibility = \"hidden\";\n                this.visible = false;\n            },\n\n            url: function() {\n                var urlResult = template(this.options.urlTemplate);\n\n                return urlResult(this.urlOptions());\n            },\n\n            errorUrl: function() {\n                var urlResult = template(this.options.errorUrlTemplate);\n\n                return urlResult(this.urlOptions());\n            },\n\n            urlOptions: function() {\n                var options = this.options;\n                return {\n                    zoom: options.zoom,\n                    subdomain: options.subdomain,\n                    z: options.zoom,\n                    x: options.index.x,\n                    y: options.index.y,\n                    s: options.subdomain,\n                    quadkey: options.quadkey,\n                    q: options.quadkey,\n                    culture: options.culture,\n                    c: options.culture\n                };\n            },\n\n            destroy: function() {\n                if (this.element) {\n                    this.element.remove();\n                    this.element = null;\n                }\n            }\n        });\n\n        var TilePool = Class.extend({\n            init: function() {\n                this._items = [];\n            },\n\n            options: {\n                maxSize: 100\n            },\n\n            get: function(center, options) {\n                if (this._items.length >= this.options.maxSize) {\n                    this._remove(center);\n                }\n\n                return this._create(options);\n            },\n\n            empty: function() {\n                var items = this._items;\n                for (var i = 0; i < items.length; i++) {\n                    items[i].destroy();\n                }\n\n                this._items = [];\n            },\n\n            reset: function() {\n                var items = this._items;\n                for (var i = 0; i < items.length; i++) {\n                    items[i].hide();\n                }\n            },\n\n            _create: function(options) {\n                var items = this._items;\n                var tile;\n\n                // Build an unique token for the image\n                // This normally would be the URL, but we don't care about subdomains\n                var id = util.hashKey(\n                    options.point.toString() +\n                    options.offset.toString() +\n                    options.zoom +\n                    options.urlTemplate\n                );\n\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].id === id) {\n                        tile = items[i];\n                        break;\n                    }\n                }\n\n                if (tile) {\n                    tile.show();\n                } else {\n                    tile = new ImageTile(id, options);\n                    this._items.push(tile);\n                }\n\n                return tile;\n            },\n\n            _remove: function(center) {\n                var items = this._items;\n                var maxDist = -1;\n                var index = -1;\n\n                for (var i = 0; i < items.length; i++) {\n                    var dist = items[i].options.point.distanceTo(center);\n                    if (dist > maxDist && !items[i].visible) {\n                        index = i;\n                        maxDist = dist;\n                    }\n                }\n\n                if (index !== -1) {\n                    items[index].destroy();\n                    items.splice(index, 1);\n                }\n            }\n        });\n\n        // Methods ================================================================\n        function roundPoint(point) {\n            return new Point(round(point.x), round(point.y));\n        }\n\n        // Exports ================================================================\n        deepExtend(dataviz, {\n            map: {\n                layers: {\n                    tile: TileLayer,\n                    TileLayer: TileLayer,\n\n                    ImageTile: ImageTile,\n                    TilePool: TilePool,\n                    TileView: TileView\n                }\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        // Imports ================================================================\n        var kendo = window.kendo,\n\n            dataviz = kendo.dataviz,\n            deepExtend = kendo.deepExtend,\n            defined = kendo.drawing.util.defined,\n\n            Extent = dataviz.map.Extent,\n            Location = dataviz.map.Location,\n            TileLayer = dataviz.map.layers.TileLayer,\n            TileView = dataviz.map.layers.TileView;\n\n        // Bing tile layer =============================================================\n        var BingLayer = TileLayer.extend({\n            init: function(map, options) {\n                this.options.baseUrl =\n                    this._scheme() +\n                    \"://dev.virtualearth.net/REST/v1/Imagery/Metadata/\";\n\n                TileLayer.fn.init.call(this, map, options);\n\n                this._onMetadata = this._onMetadata.bind(this);\n                this._fetchMetadata();\n            },\n\n            options: {\n                imagerySet: \"road\"\n            },\n\n            _fetchMetadata: function() {\n                var options = this.options;\n\n                if (!options.key) {\n                    throw new Error(\"Bing tile layer: API key is required\");\n                }\n\n                $.ajax({\n                    url: options.baseUrl + options.imagerySet,\n                    data: {\n                        output: \"json\",\n                        include: \"ImageryProviders\",\n                        key: options.key,\n                        uriScheme: this._scheme()\n                    },\n                    type: \"get\",\n                    dataType: \"jsonp\",\n                    jsonp: \"jsonp\",\n                    success: this._onMetadata\n                });\n            },\n\n            _scheme: function(proto) {\n                proto = proto || window.location.protocol;\n                return proto.replace(\":\", \"\") === \"https\" ? \"https\" : \"http\";\n            },\n\n            _onMetadata: function(data) {\n                var that = this;\n                if (data && data.resourceSets.length) {\n                    var resource = that.resource = data.resourceSets[0].resources[0];\n\n                    deepExtend(that._view.options, {\n                        urlTemplate: ({ subdomain, quadkey, culture }) => that.resource.imageUrl\n                            .replace(\"{subdomain}\", subdomain)\n                            .replace(\"{quadkey}\", quadkey)\n                            .replace(\"{culture}\", culture),\n                        subdomains: resource.imageUrlSubdomains\n                    });\n\n                    var options = that.options;\n                    if (!defined(options.minZoom)) {\n                        options.minZoom = resource.zoomMin;\n                    }\n                    if (!defined(options.maxZoom)) {\n                        options.maxZoom = resource.zoomMax;\n                    }\n\n                    that._addAttribution();\n\n                    if (that.element.css(\"display\") !== \"none\") {\n                        that._reset();\n                    }\n                }\n            },\n\n            _viewType: function() {\n                return BingView;\n            },\n\n            _addAttribution: function() {\n                var attr = this.map.attribution;\n                if (attr) {\n                    var items = this.resource.imageryProviders;\n                    if (items) {\n                        for (var i = 0; i < items.length; i++) {\n                            var item = items[i];\n                            for (var y = 0; y < item.coverageAreas.length; y++) {\n                                var area = item.coverageAreas[y];\n                                attr.add({\n                                    text: item.attribution,\n                                    minZoom: area.zoomMin,\n                                    maxZoom: area.zoomMax,\n                                    extent: new Extent(\n                                        new Location(area.bbox[2], area.bbox[1]),\n                                        new Location(area.bbox[0], area.bbox[3])\n                                    )\n                                });\n                            }\n                        }\n                    }\n                }\n            },\n\n            imagerySet: function(value) {\n                if (value) {\n                    this.options.imagerySet = value;\n                    this.map.attribution.clear();\n                    this._fetchMetadata();\n                } else {\n                    return this.options.imagerySet;\n                }\n            }\n        });\n\n        var BingView = TileView.extend({\n            options: {\n                culture: \"en-US\"\n            },\n\n            tileOptions: function(currentIndex) {\n                var options = TileView.fn.tileOptions.call(this, currentIndex);\n\n                options.culture = this.options.culture;\n                options.quadkey = this.tileQuadKey(this.wrapIndex(currentIndex));\n\n                return options;\n            },\n\n            tileQuadKey: function(index) {\n                var quadKey = \"\",\n                    digit, mask, i;\n\n                for (i = this._zoom; i > 0; i--) {\n                    digit = 0;\n                    mask = 1 << (i - 1);\n\n                    if ((index.x & mask) !== 0) {\n                        digit++;\n                    }\n\n                    if ((index.y & mask) !== 0) {\n                        digit += 2;\n                    }\n\n                    quadKey += digit;\n                }\n\n                return quadKey;\n            }\n        });\n\n        // Exports ================================================================\n        deepExtend(dataviz, {\n            map: {\n                layers: {\n                    bing: BingLayer,\n                    BingLayer: BingLayer,\n                    BingView: BingView\n                }\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        // Imports ================================================================\n        var doc = document,\n            math = Math,\n            indexOf = $.inArray,\n\n            kendo = window.kendo,\n            Class = kendo.Class,\n            DataSource = kendo.data.DataSource,\n            Tooltip = kendo.ui.Tooltip,\n\n            dataviz = kendo.dataviz,\n            deepExtend = kendo.deepExtend,\n\n            map = dataviz.map,\n            Location = map.Location,\n            Layer = map.layers.Layer;\n\n        // Implementation =========================================================\n        var MarkerLayer = Layer.extend({\n            init: function(map, options) {\n                Layer.fn.init.call(this, map, options);\n\n                this._markerClick = this._markerClick.bind(this);\n                this.element.on(\"click\", \".k-marker\", this._markerClick);\n\n                this.items = [];\n                this._initDataSource();\n            },\n\n            destroy: function() {\n                Layer.fn.destroy.call(this);\n\n                this.element.off(\"click\", \".k-marker\", this._markerClick);\n\n                this.dataSource.unbind(\"change\", this._dataChange);\n                this.clear();\n            },\n\n            options: {\n                zIndex: 1000,\n                autoBind: true,\n                dataSource: {},\n                locationField: \"location\",\n                titleField: \"title\"\n            },\n\n            add: function(arg) {\n                if (Array.isArray(arg)) {\n                    for (var i = 0; i < arg.length; i++) {\n                        this._addOne(arg[i]);\n                    }\n                } else {\n                    return this._addOne(arg);\n                }\n            },\n\n            remove: function(marker) {\n                marker.destroy();\n\n                var index = indexOf(marker, this.items);\n                if (index > -1) {\n                    this.items.splice(index, 1);\n                }\n            },\n\n            clear: function() {\n                for (var i = 0; i < this.items.length; i++) {\n                    this.items[i].destroy();\n                }\n\n                this.items = [];\n            },\n\n            update: function(marker) {\n                var loc = marker.location();\n                if (loc) {\n                    marker.showAt(this.map.locationToView(loc));\n\n                    var args = { marker: marker, layer: this };\n                    this.map.trigger(\"markerActivate\", args);\n                }\n            },\n\n            _reset: function() {\n                Layer.fn._reset.call(this);\n                var items = this.items;\n                for (var i = 0; i < items.length; i++) {\n                    this.update(items[i]);\n                }\n            },\n\n            bind: function(options, dataItem) {\n                var marker = map.Marker.create(options, this.options);\n                marker.dataItem = dataItem;\n\n                var args = { marker: marker, layer: this };\n                var cancelled = this.map.trigger(\"markerCreated\", args);\n                if (!cancelled) {\n                    this.add(marker);\n                    return marker;\n                }\n            },\n\n            setDataSource: function(dataSource) {\n                if (this.dataSource) {\n                    this.dataSource.unbind(\"change\", this._dataChange);\n                }\n\n                this.dataSource = kendo.data.DataSource.create(dataSource);\n                this.dataSource.bind(\"change\", this._dataChange);\n\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n\n            _addOne: function(arg) {\n                var marker = Marker.create(arg, this.options);\n                marker.addTo(this);\n\n                return marker;\n            },\n\n            _initDataSource: function() {\n                var dsOptions = this.options.dataSource;\n                this._dataChange = this._dataChange.bind(this);\n                this.dataSource = DataSource\n                    .create(dsOptions)\n                    .bind(\"change\", this._dataChange);\n\n                if (dsOptions && this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n\n            _dataChange: function(e) {\n                this._load(e.sender.view());\n            },\n\n            _load: function(data) {\n                this._data = data;\n                this.clear();\n\n                var getLocation = kendo.getter(this.options.locationField);\n                var getTitle = kendo.getter(this.options.titleField);\n                for (var i = 0; i < data.length; i++) {\n                    var dataItem = data[i];\n                    this.bind({\n                        location: getLocation(dataItem),\n                        title: getTitle(dataItem)\n                    }, dataItem);\n                }\n            },\n\n            _markerClick: function(e) {\n                var args = { marker: $(e.currentTarget).data(\"kendoMarker\"), layer: this };\n                this.map.trigger(\"markerClick\", args);\n            }\n        });\n\n        var Marker = Class.extend({\n            init: function(options) {\n                this.options = options || {};\n            },\n\n            addTo: function(parent) {\n                this.layer = parent.markers || parent;\n                this.layer.items.push(this);\n                this.layer.update(this);\n            },\n\n            location: function(value) {\n                if (value) {\n                    this.options.location = Location.create(value).toArray();\n\n                    if (this.layer) {\n                        this.layer.update(this);\n                    }\n\n                    return this;\n                } else {\n                    return Location.create(this.options.location);\n                }\n            },\n\n            showAt: function(point) {\n                this.render();\n                this.element.css({\n                    left: math.round(point.x),\n                    top: math.round(point.y)\n                });\n\n                if (this.tooltip && this.tooltip.popup) {\n                    // TODO: Expose popup/tooltip updatePosition? method\n                    this.tooltip.popup._position();\n                }\n            },\n\n            hide: function() {\n                if (this.element) {\n                    this.element.remove();\n                    this.element = null;\n                }\n\n                if (this.tooltip) {\n                    this.tooltip.destroy();\n                    this.tooltip = null;\n                }\n            },\n\n            destroy: function() {\n                this.layer = null;\n                this.hide();\n            },\n\n            render: function() {\n                if (!this.element) {\n                    let options = this.options;\n                    let layer = this.layer;\n\n                    this.element = $(doc.createElement(\"span\"))\n                        .attr(\"title\", options.title ? kendo.htmlEncode(options.title) : null)\n                        .attr(options.attributes || {})\n                        .data(\"kendoMarker\", this)\n                        .css(\"zIndex\", options.zIndex);\n\n                    if (options.shape) {\n                        if (options.shape === \"pinTarget\") {\n                            kendo.ui.icon(this.element, { icon: \"map-marker-target\", iconClass: \"k-marker\", size: \"xxlarge\" });\n                        } else if (options.shape === \"pin\") {\n                            kendo.ui.icon(this.element, { icon: \"map-marker\", iconClass: \"k-marker\", size: \"xxlarge\" });\n                        } else {\n                            this.element.addClass(\"k-marker k-icon k-i-marker-\" + kendo.toHyphens(options.shape));\n                        }\n                    } else {\n                        kendo.ui.icon(this.element, { icon: \"map-marker\", iconClass: \"k-marker\", size: \"xxlarge\" });\n                    }\n\n                    if (layer) {\n                        layer.element.append(this.element);\n                    }\n\n                    this.renderTooltip();\n                }\n            },\n\n            renderTooltip: function() {\n                var marker = this;\n                var title = marker.options.title;\n                var options = marker.options.tooltip || {};\n\n                if (options && Tooltip) {\n                    var template = options.template;\n                    if (template) {\n                        var contentTemplate = kendo.template(template);\n                        options.content = function(e) {\n                            e.location = marker.location();\n                            e.marker = marker;\n                            return contentTemplate(e);\n                        };\n                    }\n\n                    if (title || options.content || options.contentUrl) {\n                        this.tooltip = new Tooltip(this.element, options);\n                        this.tooltip.marker = this;\n                    }\n                }\n            }\n        });\n\n        Marker.create = function(arg, defaults) {\n            if (arg instanceof Marker) {\n                return arg;\n            }\n\n            return new Marker(deepExtend({}, defaults, arg));\n        };\n\n        // Exports ================================================================\n        deepExtend(dataviz, {\n            map: {\n                layers: {\n                    marker: MarkerLayer,\n                    MarkerLayer: MarkerLayer\n                },\n                Marker: Marker\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        // Imports ================================================================\n        var doc = document,\n            math = Math,\n            min = math.min,\n            pow = math.pow,\n\n            kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            deepExtend = kendo.deepExtend,\n\n            dataviz = kendo.dataviz,\n            ui = dataviz.ui,\n\n            g = kendo.geometry,\n            Point = g.Point,\n\n            map = dataviz.map,\n            Extent = map.Extent,\n            Location = map.Location,\n            EPSG3857 = map.crs.EPSG3857,\n\n            util = kendo.util,\n            renderPos = util.renderPos,\n\n            drawingUtil = kendo.drawing.util,\n\n            defined = drawingUtil.defined,\n            limit = drawingUtil.limitValue,\n            valueOrDefault = drawingUtil.valueOrDefault;\n\n        // Constants ==============================================================\n        var CSS_PREFIX = \"k-\",\n            FRICTION = 0.90,\n            FRICTION_MOBILE = 0.93,\n            MOUSEWHEEL = \"DOMMouseScroll mousewheel\",\n            VELOCITY_MULTIPLIER = 5,\n            DEFAULT_ZOOM_RATE = 1;\n\n        // Map widget =============================================================\n        var Map = Widget.extend({\n            init: function(element, options) {\n                kendo.destroy(element);\n                Widget.fn.init.call(this, element);\n\n                this._initOptions(options);\n                this.bind(this.events, options);\n\n                this.crs = new EPSG3857();\n\n                this.element\n                    .addClass(CSS_PREFIX + this.options.name.toLowerCase())\n                    .css(\"position\", \"relative\")\n                    .empty()\n                    .append(doc.createElement(\"div\"));\n\n                this._viewOrigin = this._getOrigin();\n                this._initScroller();\n                this._initMarkers();\n                this._initControls();\n                this._initLayers();\n                this._reset();\n\n                this.scrollElement.parent().removeClass('km-widget');\n\n                this._mousewheel = this._mousewheel.bind(this);\n                this.element.on(MOUSEWHEEL, this._mousewheel);\n            },\n\n            options: {\n                name: \"Map\",\n                controls: {\n                    attribution: true,\n                    navigator: {\n                        panStep: 100\n                    },\n                    zoom: true\n                },\n                layers: [],\n                layerDefaults: {\n                    shape: {\n                        style: {\n                            fill: {\n                                color: \"#fff\"\n                            },\n                            stroke: {\n                                color: \"#aaa\",\n                                width: 0.5\n                            }\n                        }\n                    },\n                    bubble: {\n                        style: {\n                            fill: {\n                                color: \"#fff\",\n                                opacity: 0.5\n                            },\n                            stroke: {\n                                color: \"#aaa\",\n                                width: 0.5\n                            }\n                        }\n                    },\n                    marker: {\n                        shape: \"pinTarget\",\n                        tooltip: {\n                            position: \"top\"\n                        }\n                    }\n                },\n                center: [0, 0],\n                zoom: 3,\n                minSize: 256,\n                minZoom: 1,\n                maxZoom: 19,\n                markers: [],\n                markerDefaults: {\n                    shape: \"pinTarget\",\n                    tooltip: {\n                        position: \"top\"\n                    }\n                },\n                wraparound: true,\n                messages: {\n                    tileTitle: \"Map tile\"\n                }\n            },\n\n            events: [\n                \"beforeReset\",\n                \"click\",\n                \"markerActivate\",\n                \"markerClick\",\n                \"markerCreated\",\n                \"pan\",\n                \"panEnd\",\n                \"reset\",\n                \"shapeClick\",\n                \"shapeCreated\",\n                \"shapeFeatureCreated\",\n                \"shapeMouseEnter\",\n                \"shapeMouseLeave\",\n                \"zoomEnd\",\n                \"zoomStart\"\n            ],\n\n            destroy: function() {\n                this.scroller.destroy();\n\n                if (this.navigator) {\n                    this.navigator.destroy();\n                }\n\n                if (this.attribution) {\n                    this.attribution.destroy();\n                }\n\n                if (this.zoomControl) {\n                    this.zoomControl.destroy();\n                }\n\n                this.markers.destroy();\n\n                for (var i = 0; i < this.layers.length; i++) {\n                    this.layers[i].destroy();\n                }\n\n                Widget.fn.destroy.call(this);\n            },\n\n            zoom: function(level) {\n                var options = this.options;\n\n                if (defined(level)) {\n                    level = math.round(limit(level, options.minZoom, options.maxZoom));\n                    if (options.zoom !== level) {\n                        options.zoom = level;\n                        this._reset();\n                    }\n\n                    return this;\n                } else {\n                    return options.zoom;\n                }\n            },\n\n            center: function(center) {\n                if (center) {\n                    this.options.center = Location.create(center).toArray();\n                    this._reset();\n\n                    return this;\n                } else {\n                    return Location.create(this.options.center);\n                }\n            },\n\n            extent: function(extent) {\n                if (extent) {\n                    this._setExtent(extent);\n                    return this;\n                } else {\n                    return this._getExtent();\n                }\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n                this._reset();\n            },\n\n            locationToLayer: function(location, zoom) {\n                var clamp = !this.options.wraparound;\n                location = Location.create(location);\n                return this.crs.toPoint(location, this._layerSize(zoom), clamp);\n            },\n\n            layerToLocation: function(point, zoom) {\n                var clamp = !this.options.wraparound;\n                point = Point.create(point);\n                return this.crs.toLocation(point, this._layerSize(zoom), clamp);\n            },\n\n            locationToView: function(location) {\n                location = Location.create(location);\n                var origin = this.locationToLayer(this._viewOrigin);\n                var point = this.locationToLayer(location);\n\n                return point.translateWith(origin.scale(-1));\n            },\n\n            viewToLocation: function(point, zoom) {\n                var origin = this.locationToLayer(this._getOrigin(), zoom);\n                point = Point.create(point);\n                point = point.clone().translateWith(origin);\n                return this.layerToLocation(point, zoom);\n            },\n\n            eventOffset: function(e) {\n                var point;\n                var x;\n                var y;\n                var offset = this.element.offset();\n\n                if (e.x || e.y) {\n                    var field = \"location\";\n                    x = e.x[field] - offset.left;\n                    y = e.y[field] - offset.top;\n                    point = new g.Point(x, y);\n                } else {\n                    var event = e.originalEvent || e;\n                    x = valueOrDefault(event.pageX, event.clientX) - offset.left;\n                    y = valueOrDefault(event.pageY, event.clientY) - offset.top;\n                    point = new g.Point(x, y);\n                }\n\n                return point;\n            },\n\n            eventToView: function(e) {\n                var cursor = this.eventOffset(e);\n                return this.locationToView(this.viewToLocation(cursor));\n            },\n\n            eventToLayer: function(e) {\n                return this.locationToLayer(this.eventToLocation(e));\n            },\n\n            eventToLocation: function(e) {\n                var cursor = this.eventOffset(e);\n                return this.viewToLocation(cursor);\n            },\n\n            viewSize: function() {\n                var element = this.element;\n                var scale = this._layerSize();\n                var width = element.width();\n\n                if (!this.options.wraparound) {\n                    width = min(scale, width);\n                }\n                return {\n                    width: width,\n                    height: min(scale, element.height())\n                };\n            },\n\n            exportVisual: function() {\n                this._reset();\n                return false;\n            },\n\n            _setOrigin: function(origin, zoom) {\n                var size = this.viewSize(),\n                    topLeft;\n\n                origin = this._origin = Location.create(origin);\n                topLeft = this.locationToLayer(origin, zoom);\n                topLeft.x += size.width / 2;\n                topLeft.y += size.height / 2;\n\n                this.options.center = this.layerToLocation(topLeft, zoom).toArray();\n\n                return this;\n            },\n\n            _getOrigin: function(invalidate) {\n                var size = this.viewSize(),\n                    topLeft;\n\n                if (invalidate || !this._origin) {\n                    topLeft = this.locationToLayer(this.center());\n                    topLeft.x -= size.width / 2;\n                    topLeft.y -= size.height / 2;\n\n                    this._origin = this.layerToLocation(topLeft);\n                }\n\n                return this._origin;\n            },\n\n            _setExtent: function(extent) {\n                var raw = Extent.create(extent);\n                var se = raw.se.clone();\n                if (this.options.wraparound && se.lng < 0 && extent.nw.lng > 0) {\n                    se.lng = 180 + (180 + se.lng);\n                }\n\n                extent = new Extent(raw.nw, se);\n                this.center(extent.center());\n\n                var width = this.element.width();\n                var height = this.element.height();\n                for (var zoom = this.options.maxZoom; zoom >= this.options.minZoom; zoom--) {\n                    var topLeft = this.locationToLayer(extent.nw, zoom);\n                    var bottomRight = this.locationToLayer(extent.se, zoom);\n\n                    var layerWidth = math.abs(bottomRight.x - topLeft.x);\n                    var layerHeight = math.abs(bottomRight.y - topLeft.y);\n\n                    if (layerWidth <= width && layerHeight <= height) {\n                        break;\n                    }\n                }\n\n                this.zoom(zoom);\n            },\n\n            _getExtent: function() {\n                var nw = this._getOrigin();\n                var bottomRight = this.locationToLayer(nw);\n                var size = this.viewSize();\n\n                bottomRight.x += size.width;\n                bottomRight.y += size.height;\n\n                var se = this.layerToLocation(bottomRight);\n                return new Extent(nw, se);\n            },\n\n            _zoomAround: function(pivot, level) {\n                this._setOrigin(this.layerToLocation(pivot, level), level);\n                this.zoom(level);\n            },\n\n            _initControls: function() {\n                var controls = this.options.controls;\n\n                if (ui.Attribution && controls.attribution) {\n                    this._createAttribution(controls.attribution);\n                }\n\n                if (!kendo.support.mobileOS) {\n                    if (ui.Navigator && controls.navigator) {\n                        this._createNavigator(controls.navigator);\n                    }\n\n                    if (ui.ZoomControl && controls.zoom) {\n                        this._createZoomControl(controls.zoom);\n                    }\n                }\n            },\n\n            _createControlElement: function(options, defaultPos) {\n                var pos = options.position || defaultPos;\n                var posSelector = \".\" + renderPos(pos).replace(\" \", \".\");\n                var wrap = $(\".k-map-controls\" + posSelector, this.element);\n                if (wrap.length === 0) {\n                    wrap = $(\"<div>\")\n                           .addClass(\"k-map-controls \" + renderPos(pos))\n                           .appendTo(this.element);\n                }\n\n                return $(\"<div>\").appendTo(wrap);\n            },\n\n            _createAttribution: function(options) {\n                var element = this._createControlElement(options, \"bottomRight\");\n                this.attribution = new ui.Attribution(element, options);\n            },\n\n            _createNavigator: function(options) {\n                var element = this._createControlElement(options, \"topLeft\");\n                var navigator = this.navigator = new ui.Navigator(element, options);\n\n                this._navigatorPan = this._navigatorPan.bind(this);\n                navigator.bind(\"pan\", this._navigatorPan);\n\n                this._navigatorCenter = this._navigatorCenter.bind(this);\n                navigator.bind(\"center\", this._navigatorCenter);\n            },\n\n            _navigatorPan: function(e) {\n                var map = this;\n                var scroller = map.scroller;\n\n                var x = scroller.scrollLeft + e.x;\n                var y = scroller.scrollTop - e.y;\n\n                var bounds = this._virtualSize;\n                var height = this.element.height();\n                var width = this.element.width();\n\n                // TODO: Move limits in scroller\n                x = limit(x, bounds.x.min, bounds.x.max - width);\n                y = limit(y, bounds.y.min, bounds.y.max - height);\n\n                map.scroller.one(\"scroll\", function(e) { map._scrollEnd(e); });\n                map.scroller.scrollTo(-x, -y);\n            },\n\n            _navigatorCenter: function() {\n                this.center(this.options.center);\n            },\n\n            _createZoomControl: function(options) {\n                var element = this._createControlElement(options, \"topLeft\");\n                var zoomControl = this.zoomControl = new ui.ZoomControl(element, options);\n\n                this._zoomControlChange = this._zoomControlChange.bind(this);\n                zoomControl.bind(\"change\", this._zoomControlChange);\n            },\n\n            _zoomControlChange: function(e) {\n                if (!this.trigger(\"zoomStart\", { originalEvent: e })) {\n                    this.zoom(this.zoom() + e.delta);\n                    this.trigger(\"zoomEnd\", { originalEvent: e });\n                }\n            },\n\n            _initScroller: function() {\n                var friction = kendo.support.mobileOS ? FRICTION_MOBILE : FRICTION;\n                var zoomable = this.options.zoomable !== false;\n                var scroller = this.scroller = new kendo.mobile.ui.Scroller(\n                    this.element.children(0), {\n                        friction: friction,\n                        velocityMultiplier: VELOCITY_MULTIPLIER,\n                        zoom: zoomable,\n                        mousewheelScrolling: false,\n                        supportDoubleTap: true\n                    });\n\n                scroller.bind(\"scroll\", this._scroll.bind(this));\n                scroller.bind(\"scrollEnd\", this._scrollEnd.bind(this));\n                scroller.userEvents.bind(\"gesturestart\", this._scaleStart.bind(this));\n                scroller.userEvents.bind(\"gestureend\", this._scale.bind(this));\n                scroller.userEvents.bind(\"doubleTap\", this._doubleTap.bind(this));\n                scroller.userEvents.bind(\"tap\", this._tap.bind(this));\n\n                this.scrollElement = scroller.scrollElement;\n            },\n\n            _initLayers: function() {\n                var defs = this.options.layers,\n                    layers = this.layers = [];\n\n                for (var i = 0; i < defs.length; i++) {\n                    var options = defs[i];\n                    var type = options.type || \"shape\";\n                    var defaults = this.options.layerDefaults[type];\n                    var impl = dataviz.map.layers[type];\n\n                    layers.push(new impl(this, deepExtend({}, defaults, options)));\n                }\n            },\n\n            _initMarkers: function() {\n                this.markers = new map.layers.MarkerLayer(this, this.options.markerDefaults);\n                this.markers.add(this.options.markers);\n            },\n\n            _scroll: function(e) {\n                var origin = this.locationToLayer(this._viewOrigin).round();\n                var movable = e.sender.movable;\n\n                var offset = new g.Point(movable.x, movable.y).scale(-1).scale(1 / movable.scale);\n                origin.x += offset.x;\n                origin.y += offset.y;\n\n                this._scrollOffset = offset;\n\n                this._setOrigin(this.layerToLocation(origin));\n                this.trigger(\"pan\", {\n                    originalEvent: e,\n                    origin: this._getOrigin(),\n                    center: this.center()\n                });\n            },\n\n            _scrollEnd: function(e) {\n                if (!this._scrollOffset || !this._panComplete()) {\n                    return;\n                }\n\n                this._scrollOffset = null;\n                this._panEndTS = new Date();\n\n                this.trigger(\"panEnd\", {\n                    originalEvent: e,\n                    origin: this._getOrigin(),\n                    center: this.center()\n                });\n            },\n\n            _panComplete: function() {\n                return new Date() - (this._panEndTS || 0) > 50;\n            },\n\n            _scaleStart: function(e) {\n                if (this.trigger(\"zoomStart\", { originalEvent: e })) {\n                    var touch = e.touches[1];\n                    if (touch) {\n                        touch.cancel();\n                    }\n                }\n            },\n\n            _scale: function(e) {\n                var scale = this.scroller.movable.scale;\n                var zoom = this._scaleToZoom(scale);\n                var gestureCenter = new g.Point(e.center.x, e.center.y);\n                var centerLocation = this.viewToLocation(gestureCenter, zoom);\n                var centerPoint = this.locationToLayer(centerLocation, zoom);\n                var originPoint = centerPoint.translate(-gestureCenter.x, -gestureCenter.y);\n\n                this._zoomAround(originPoint, zoom);\n                this.trigger(\"zoomEnd\", { originalEvent: e });\n            },\n\n            _scaleToZoom: function(scaleDelta) {\n                var scale = this._layerSize() * scaleDelta;\n                var tiles = scale / this.options.minSize;\n                var zoom = math.log(tiles) / math.log(2);\n\n                return math.round(zoom);\n            },\n\n            _reset: function() {\n                if (this.attribution) {\n                    this.attribution.filter(this.center(), this.zoom());\n                }\n\n                this._viewOrigin = this._getOrigin(true);\n                this._resetScroller();\n                this.trigger(\"beforeReset\");\n                this.trigger(\"reset\", {\n                    tileTitle: this.options.messages.tileTitle\n                });\n            },\n\n            _resetScroller: function() {\n                var scroller = this.scroller;\n                var x = scroller.dimensions.x;\n                var y = scroller.dimensions.y;\n                var scale = this._layerSize();\n                var nw = this.extent().nw;\n                var topLeft = this.locationToLayer(nw).round();\n\n                scroller.movable.round = true;\n                scroller.reset();\n                scroller.userEvents.cancel();\n\n                var zoom = this.zoom();\n                scroller.dimensions.forcedMinScale = pow(2, this.options.minZoom - zoom);\n                scroller.dimensions.maxScale = pow(2, this.options.maxZoom - zoom);\n\n                var xBounds = { min: -topLeft.x, max: scale - topLeft.x };\n                var yBounds = { min: -topLeft.y, max: scale - topLeft.y };\n\n                if (this.options.wraparound) {\n                    xBounds.max = 20 * scale;\n                    xBounds.min = -xBounds.max;\n                }\n\n                if (this.options.pannable === false) {\n                    var viewSize = this.viewSize();\n                    xBounds.min = yBounds.min = 0;\n                    xBounds.max = viewSize.width;\n                    yBounds.max = viewSize.height;\n                }\n\n                x.makeVirtual();\n                y.makeVirtual();\n                x.virtualSize(xBounds.min, xBounds.max);\n                y.virtualSize(yBounds.min, yBounds.max);\n\n                this._virtualSize = { x: xBounds, y: yBounds };\n            },\n\n            _renderLayers: function() {\n                var defs = this.options.layers,\n                    layers = this.layers = [],\n                    scrollWrap = this.scrollWrap;\n\n                scrollWrap.empty();\n\n                for (var i = 0; i < defs.length; i++) {\n                    var options = defs[i];\n                    var type = options.type || \"shape\";\n                    var defaults = this.options.layerDefaults[type];\n                    var impl = dataviz.map.layers[type];\n\n                    layers.push(new impl(this, deepExtend({}, defaults, options)));\n                }\n            },\n\n            _layerSize: function(zoom) {\n                zoom = valueOrDefault(zoom, this.options.zoom);\n                return this.options.minSize * pow(2, zoom);\n            },\n\n            _tap: function(e) {\n                if (!this._panComplete()) {\n                    return;\n                }\n\n                var cursor = this.eventOffset(e);\n                this.trigger(\"click\", {\n                    originalEvent: e,\n                    location: this.viewToLocation(cursor)\n                });\n            },\n\n            _doubleTap: function(e) {\n                var options = this.options;\n                if (options.zoomable !== false) {\n                    if (!this.trigger(\"zoomStart\", { originalEvent: e })) {\n                        var toZoom = this.zoom() + DEFAULT_ZOOM_RATE;\n                        var cursor = this.eventOffset(e);\n                        var location = this.viewToLocation(cursor);\n                        var postZoom = this.locationToLayer(location, toZoom);\n                        var origin = postZoom.translate(-cursor.x, -cursor.y);\n                        this._zoomAround(origin, toZoom);\n                        this.trigger(\"zoomEnd\", { originalEvent: e });\n                    }\n                }\n            },\n\n            _mousewheel: function(e) {\n                e.preventDefault();\n                var delta = dataviz.mwDelta(e) > 0 ? -1 : 1;\n                var options = this.options;\n                var fromZoom = this.zoom();\n                var toZoom = limit(fromZoom + delta, options.minZoom, options.maxZoom);\n\n                if (options.zoomable !== false && toZoom !== fromZoom) {\n                    if (!this.trigger(\"zoomStart\", { originalEvent: e })) {\n                        var cursor = this.eventOffset(e);\n                        var location = this.viewToLocation(cursor);\n                        var postZoom = this.locationToLayer(location, toZoom);\n                        var origin = postZoom.translate(-cursor.x, -cursor.y);\n                        this._zoomAround(origin, toZoom);\n\n                        this.trigger(\"zoomEnd\", { originalEvent: e });\n                    }\n                }\n            }\n        });\n\n        // Exports ================================================================\n        dataviz.ui.plugin(Map);\n\n    })(window.kendo.jQuery);\n\n    const __meta__ = {\n            id: \"dataviz.map\",\n            name: \"Map\",\n            category: \"dataviz\",\n            description: \"The Kendo DataViz Map displays spatial data\",\n            depends: [ \"data\", \"userevents\", \"tooltip\", \"dataviz.core\", \"drawing\", \"mobile.scroller\" ]\n        };\n\n        var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}