{"version":3,"sources":["raw-js/kendo.scheduler.agendaview.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","SchedulerAgendaview","this","$","window","ui","encode","htmlEncode","NS","ROLE","EVENT_WRAPPER_TEMPLATE","task","title","replace","attr","uid","resources","color","isException","icon","isRecurring","template","showDelete","messages","destroy","AgendaGroupedView","Class","extend","init","view","_view","_getColumns","groupHeaders","columns","concat","_getGroupsInDay","_getSumOfItemsForDate","_renderTaskGroupsCells","headerCells","groups","taskGroupIndex","taskIndex","length","_renderDateCell","tableRow","tasks","date","tasksGroups","isMobile","_isMobile","push","format","_dateTemplate","_renderDates","_getParents","parentGroups","splice","_getGroupsByDate","_renderTaskGroups","table","items","parents","append","AgendaGroupedByDateView","slice","columnsWithoutDate","_compareDateGroups","currentGroup","prevGroup","index","text","groupsInDay","tasksGroupIdx","itemsIdx","idx","lastItemValue","i","sumOfItemsForDate","groupsRowSpanIndex","_groupTemplate","value","className","sortedArray","_groupsByDate","sort","a","b","array","getTime","dateExists","rowSpan","result","resourceValue","resource","item","valuePrimitive","getter","dataValueField","flattenGroup","shift","apply","call","scheduler","AgendaView","SchedulerView","element","options","fn","_groupedView","_getGroupedView","editable","delete","create","update","_eventTemplate","eventDateTemplate","eventGroupTemplate","_timeTemplate","eventTimeTemplate","on","_renderLayout","refreshLayout","name","_aria","children","find","clearSelection","_isVirtualized","_isGroupedByDate","_mouseenter","e","currentTarget","addClass","_mouseleave","removeClass","_remove","preventDefault","trigger","closest","nextDate","nextDay","startDate","_startDate","endDate","_endDate","previousDate","previousDay","addDays","createLayout","_layout","_footer","time","event","groupedResources","_tasks","events","start","end","isAllDay","getDate","eventStartDate","offsetCompensation","getTimezoneOffset","eventDurationInDays","Math","ceil","MS_PER_DAY","clone","head","day","Date","getFullYear","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","tail","middle","data","Query","field","dir","groupBy","toArray","tableRows","today","isToday","join","eventResources","_startTime","endTime","eventTemplate","render","content","empty","_createGroupConfiguration","_renderGroups","taskGroups","applyStylesFromKendoAttributes","_eventsList","flattenTaskGroups","parent","configuration","dataSource","filter","itemParentValue","dataParentValueField","dataIndex","tmp","operator","groupEqFilter","obj","dataTextField","span","_resourceBySlot","selectionByElement","cell","hasClass","is","select","selection","row","eq","current","move","key","handled","keys","UP","DOWN","moveToEvent","constrainSelection","isInRange","off","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","allDay","toString","MOBILE_EVENT_DATE_TEMPLATE","DESKTOP_EVENT_DATE_TEMPLATE","jQuery","kendo$1","__meta__","id","category","description","depends","hidden","default","Object","defineProperty"],"mappings":"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","file":"kendo.scheduler.agendaview.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.scheduler.view.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.scheduler.view', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.SchedulerAgendaview = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n            id: \"scheduler.agendaview\",\n            name: \"Scheduler Agenda View\",\n            category: \"web\",\n            description: \"The Scheduler Agenda View\",\n            depends: [\"scheduler.view\", \"icons\"],\n            hidden: true\n        };\n\n        (function($) {\n            var kendo = window.kendo,\n                ui = kendo.ui,\n                encode = kendo.htmlEncode,\n                NS = \".kendoAgendaView\",\n                ROLE = \"role\";\n\n            var EVENT_WRAPPER_TEMPLATE = (task) => `<div class=\"k-task\" title=\"${encode((task.title || \"\").replace(/\"/g,\"\\'\"))}\" ${kendo.attr('uid')}=\"${task.uid}\">` +\n                `${task.resources[0] ? `<span class=\"k-scheduler-mark\" ${kendo.attr(\"style-background-color\")}=\"${task.resources[0].color}\"></span>` : ''}` +\n                `${task.isException() ? kendo.ui.icon(\"arrows-no-repeat\") :\n                (task.isRecurring() ? kendo.ui.icon(\"arrow-rotate-cw\") : '')}` +\n                `<span class=\"k-scheduler-task-text\">${kendo.template(task.template)(task)}</span>` +\n                `${task.showDelete ? `<a href=\"#\" class=\"k-link k-event-delete\" title=\"${task.messages.destroy}\" aria-label=\"${task.messages.destroy}\">${kendo.ui.icon(\"x\")}</a>` : ''}` +\n                '</div>';\n\n            var DESKTOP_EVENT_DATE_TEMPLATE = ({ date }) => '<strong class=\"k-scheduler-agendaday\">' +\n                    kendo.toString(date, \"dd\") +\n                '</strong>' +\n                '<em class=\"k-scheduler-agendaweek\">' +\n                    kendo.toString(date,\"dddd\") +\n                '</em>' +\n                '<span class=\"k-scheduler-agendadate\">' +\n                    kendo.toString(date, \"y\") +\n                '</span>';\n\n            var MOBILE_EVENT_DATE_TEMPLATE = ({ date }) => '<div class=\"k-scheduler-datecolumn-wrap\">' +\n                    '<span class=\"k-mobile-scheduler-agendadate\">' +\n                        `<span class=\"k-mobile-scheduler-agendaday\">${kendo.toString(date, \"dd\")}</span>` +\n                        '&nbsp' +\n                        `<span class=\"k-mobile-scheduler-agendamonth\">${kendo.toString(date, \"MMMM\")}</span>` +\n                    '</span>' +\n                    '<span class=\"k-mobile-scheduler-agendaweekday\">' +\n                        kendo.toString(date, \"dddd\") +\n                    '</span>' +\n                '</div>';\n\n            var EVENT_DATE_TEMPLATE = (data) => (data.isMobile ? MOBILE_EVENT_DATE_TEMPLATE(data) : DESKTOP_EVENT_DATE_TEMPLATE(data));\n\n            var EVENT_GROUP_TEMPLATE = ({ isMobile, value }) => (!isMobile ?\n                                            '<strong class=\"k-scheduler-adgendagroup\">' +\n                                                value +\n                                            '</strong>' :\n                                            '<span class=\"k-scheduler-group-text\">' +\n                                                value +\n                                            '</span>');\n\n            var AgendaGroupedView = kendo.Class.extend({\n                init: function(view) {\n                    this._view = view;\n                },\n\n                _getColumns: function(groupHeaders, columns) {\n                    return groupHeaders.concat(columns);\n                },\n                _getGroupsInDay: function() {\n                    return [];\n                },\n\n                _getSumOfItemsForDate: function() {\n                    return 0;\n                },\n\n                _renderTaskGroupsCells: function(headerCells, groups, taskGroupIndex, taskIndex) {\n                    var view = this._view;\n\n                    if (taskGroupIndex === 0 && taskIndex === 0 && groups.length) {\n                        view._renderTaskGroupsCells(headerCells, groups);\n                    }\n                },\n\n                _renderDateCell: function(tableRow, groups, tasks, date, taskGroupIndex, tasksGroups) {\n                    var view = this._view;\n                    var isMobile = view._isMobile();\n\n                    tableRow.push(kendo.format(\n                        '<td class=\"k-scheduler-datecolumn{3}{2}\" rowspan=\"{0}\">{1}</td>',\n                        tasks.length,\n                        view._dateTemplate({ date: date, isMobile: isMobile }),\n                        !groups.length ? \" k-first\" : \"\"\n                    ));\n                },\n\n                _renderDates: function() {\n                    return undefined;\n                },\n\n                _getParents: function(parentGroups) {\n                    return parentGroups.splice(0);\n                },\n\n                _getGroupsByDate: function() {\n                    return undefined;\n                },\n\n                _renderTaskGroups: function(table, items, parents) {\n                    var view = this._view;\n\n                    table.append(view._renderTaskGroups(items, parents));\n                }\n\n            });\n\n            var AgendaGroupedByDateView = kendo.Class.extend({\n                init: function(view) {\n                    this._view = view;\n                },\n\n                _getColumns: function(groupHeaders, columns) {\n                    var view = this._view;\n\n                    if (view._isMobile()) {\n                        return groupHeaders.concat(columns);\n                    } else {\n                        var date = columns.slice(0, 1);\n                        var columnsWithoutDate = columns.slice(1);\n\n                        return date.concat(groupHeaders).concat(columnsWithoutDate);\n                    }\n                },\n\n                _compareDateGroups: function(currentGroup, prevGroup, index) {\n                    if (currentGroup[index].text == prevGroup[index].text) {\n                        if (index === 0) {\n                            return true;\n                        } else {\n                            return this._compareDateGroups(currentGroup, prevGroup, index - 1);\n                        }\n                    }\n\n                    return false;\n                },\n\n                _getGroupsInDay: function(tasksGroups, groups) {\n                    var groupsInDay = [];\n                    var prevGroup = null;\n\n                    for (var tasksGroupIdx = 0; tasksGroupIdx < tasksGroups.length; tasksGroupIdx++) {\n                        for (var itemsIdx = 0; itemsIdx < tasksGroups[tasksGroupIdx].items.length; itemsIdx++) {\n                            var idx = 0;\n\n                            if (groupsInDay.length === 0) {\n                                for (idx; idx < groups[tasksGroupIdx].length; idx++) {\n                                    groupsInDay.push([1]);\n                                }\n                            } else {\n                                for (idx; idx < groups[tasksGroupIdx].length; idx++) {\n\n                                    if (this._compareDateGroups(groups[tasksGroupIdx], prevGroup, idx)) {\n                                        groupsInDay[idx][groupsInDay[idx].length - 1]++;\n                                    } else {\n                                        var lastItemValue = groupsInDay[idx][groupsInDay[idx].length - 1] - 1;\n                                        for (var i = 0; i < lastItemValue; i++) {\n                                            groupsInDay[idx].push(0);\n                                        }\n                                        groupsInDay[idx].push(1);\n                                    }\n                                }\n                            }\n                            prevGroup = groups[tasksGroupIdx];\n                        }\n                    }\n\n                    return groupsInDay;\n                },\n\n                _getSumOfItemsForDate: function(tasksGroups) {\n                    var sumOfItemsForDate = 0;\n\n                    for (var i = 0; i < tasksGroups.length; i++) {\n\n                        sumOfItemsForDate += tasksGroups[i].items.length;\n                    }\n                    return sumOfItemsForDate;\n                },\n\n                _renderTaskGroupsCells: function(headerCells, groups, taskGroupIndex, taskIndex, groupsInDay, sumOfItemsForDate, date, groupsRowSpanIndex) {\n                    var view = this._view;\n                    var isMobile = view._isMobile();\n\n                    if (!isMobile) {\n                        if (taskGroupIndex === 0 && taskIndex === 0) {\n                            headerCells.push(kendo.format(\n                                '<td class=\"k-scheduler-datecolumn k-first\" rowspan=\"{0}\">{1}</td>',\n                                sumOfItemsForDate,\n                                view._dateTemplate({ date: date, isMobile: isMobile })\n                            ));\n                        }\n\n                        for (var idx = 0; idx < groups[taskGroupIndex].length; idx++) {\n                            if (groupsInDay[idx][groupsRowSpanIndex]) {\n                                headerCells.push(kendo.format(\n                                    '<td class=\"k-scheduler-groupcolumn\" rowspan=\"{0}\">{1}</td>',\n                                    groupsInDay[idx][groupsRowSpanIndex],\n                                    view._groupTemplate({ value: groups[taskGroupIndex][idx].text, isMobile: isMobile }),\n                                    groups[taskGroupIndex][idx].className\n                                ));\n                            }\n                        }\n                    } else {\n                        if (taskGroupIndex === 0 && taskIndex === 0 && groups.length) {\n                            view._renderTaskGroupsCells(headerCells, groups);\n                        }\n                    }\n                },\n\n                _renderDateCell: function() {\n                    return undefined;\n                },\n\n                _renderDates: function(table) {\n                    var view = this._view;\n                    var sortedArray = view._groupsByDate.sort(function(a, b) {\n                        return a.array[0].value.getTime() - b.array[0].value.getTime();\n                    });\n\n                    for (var i = 0; i < sortedArray.length; i++) {\n                        table.append(view._renderTaskGroups(sortedArray[i].array, sortedArray[i].groups));\n                    }\n                },\n\n                _getParents: function(parentGroups) {\n                    return parentGroups.slice(0);\n                },\n\n                _getGroupsByDate: function(groups, idx, parents) {\n                    var view = this._view;\n\n                    if (groups[idx].items) {\n                        for (var taskGroupIndex = 0; taskGroupIndex < groups[idx].items.length; taskGroupIndex++) {\n                            var date = groups[idx].items[taskGroupIndex].value;\n                            var dateExists = false;\n\n                            for (var i = 0; i < view._groupsByDate.length; i++) {\n                                if (view._groupsByDate[i].array[0].value.getTime() === date.getTime()) {\n                                    dateExists = true;\n                                    view._groupsByDate[i].array.push(groups[idx].items[taskGroupIndex]);\n                                    view._groupsByDate[i].groups.push(parents);\n                                }\n                            }\n\n                            if (!dateExists) {\n                                view._groupsByDate.push({\n                                    array: [groups[idx].items[taskGroupIndex]],\n                                    groups: [parents]\n                                });\n                            }\n                        }\n                    }\n                },\n\n                _renderTaskGroups: function() {\n                    return undefined;\n                }\n\n            });\n\n            kendo.ui.scheduler.AgendaGroupedView = AgendaGroupedView;\n            kendo.ui.scheduler.AgendaGroupedByDateView = AgendaGroupedByDateView;\n\n\n            ui.AgendaView = ui.SchedulerView.extend({\n                init: function(element, options) {\n                    ui.SchedulerView.fn.init.call(this, element, options);\n\n                    this._groupedView = this._getGroupedView();\n\n                    options = this.options;\n\n                    if (options.editable) {\n                        options.editable = $.extend(\n                            { \"delete\": true },\n                            options.editable,\n                            { create: false, update: false },\n                            { messages: options.messages }\n                        );\n                    }\n\n                    this.title = options.title;\n\n                    this._eventTemplate = kendo.template(EVENT_WRAPPER_TEMPLATE);\n                    this._dateTemplate = kendo.template(options.eventDateTemplate);\n                    this._groupTemplate = kendo.template(options.eventGroupTemplate);\n                    this._timeTemplate = kendo.template(options.eventTimeTemplate);\n\n                    this.element.on(\"mouseenter\" + NS, \".k-scheduler-content tr\", \"_mouseenter\")\n                        .on(\"mouseleave\" + NS, \".k-scheduler-content tr\", \"_mouseleave\")\n                        .on(\"click\" + NS, \".k-scheduler-content .k-link:has(.k-i-x),.k-scheduler-content .k-link:has(.k-svg-i-x)\", \"_remove\");\n\n                    this._renderLayout(options.date);\n                    this.refreshLayout();\n                },\n\n                name: \"agenda\",\n\n                _aria: function() {\n                    var table = this.table;\n\n                    table.attr(ROLE, \"grid\");\n\n                    table.children(\"tbody\").attr(ROLE, \"none\");\n\n                    table.find(\"table\").attr(ROLE, \"none\");\n                    table.find(\"table > tbody\").attr(ROLE, \"rowgroup\");\n                    table.find(\"table tr\").attr(ROLE, \"row\");\n                    table.find(\"table td\").attr(ROLE, \"gridcell\");\n\n                    table.find(\".k-scheduler-header-wrap th\").attr(ROLE, \"columnheader\");\n                    table.find(\".k-scheduler-content .k-scheduler-datecolumn, .k-scheduler-content .k-scheduler-groupcolumn\").attr(ROLE, \"rowheader\");\n                },\n\n                clearSelection: function() {\n                    this.element.find(\".k-selected\").attr(\"aria-selected\", false);\n\n                    kendo.ui.SchedulerView.fn.clearSelection.call(this);\n                },\n\n                _isVirtualized: function() {\n                    return false;\n                },\n                _getGroupedView: function() {\n                    if (this._isGroupedByDate()) {\n                        return new kendo.ui.scheduler.AgendaGroupedByDateView(this);\n                    } else {\n                        return new kendo.ui.scheduler.AgendaGroupedView(this);\n                    }\n                },\n\n                _mouseenter: function(e) {\n                    $(e.currentTarget).addClass(\"k-hover\");\n                },\n\n                _mouseleave: function(e) {\n                    $(e.currentTarget).removeClass(\"k-hover\");\n                },\n\n                _remove: function(e) {\n                    e.preventDefault();\n\n                    this.trigger(\"remove\", {\n                        uid: $(e.currentTarget).closest(\".k-task\").attr(kendo.attr(\"uid\"))\n                    });\n                },\n\n                nextDate: function() {\n                    return kendo.date.nextDay(this.startDate());\n                },\n\n                startDate: function() {\n                    return this._startDate;\n                },\n\n                endDate: function() {\n                    return this._endDate;\n                },\n\n                previousDate: function() {\n                    return kendo.date.previousDay(this.startDate());\n                },\n\n                _renderLayout: function(date) {\n                    this._startDate = date;\n                    this._endDate = kendo.date.addDays(date, 7);\n                    this.createLayout(this._layout());\n                    this._footer();\n                },\n\n                _layout: function() {\n                    var columns = [\n                        { text: this.options.messages.time, className: \"k-scheduler-timecolumn\" },\n                        { text: this.options.messages.event }\n                    ];\n\n                    if (!this._isMobile()) {\n                        columns.splice(0, 0, { text: this.options.messages.date, className: \"k-scheduler-datecolumn\" });\n                    }\n\n                    var resources = this.groupedResources;\n                    if (resources.length) {\n                        var groupHeaders = [];\n                        for (var idx = 0; idx < resources.length; idx++) {\n                            groupHeaders.push({ text: \"\", className: \"k-scheduler-groupcolumn\" });\n                        }\n\n                        columns = this._groupedView._getColumns(groupHeaders, columns);\n                    }\n\n                    return {\n                        columns: columns\n                    };\n                },\n\n                _tasks: function(events) {\n                    var tasks = [];\n\n                    for (var idx = 0; idx < events.length; idx++) {\n                        var event = events[idx];\n                        var start = event.start;\n                        var end = event.isAllDay ? kendo.date.getDate(event.end) : event.end;\n                        var eventStartDate = kendo.date.getDate(start);\n                        var offsetCompensation = (eventStartDate.getTimezoneOffset() - end.getTimezoneOffset()) * 60000;\n\n                        var eventDurationInDays = Math.ceil((end - eventStartDate + offsetCompensation) / kendo.date.MS_PER_DAY);\n\n                        if (event.isAllDay) {\n                            eventDurationInDays += 1;\n                        }\n\n                        var task = event.clone();\n                        task.startDate = kendo.date.getDate(start);\n\n                        if (task.startDate >= this.startDate()) {\n                            tasks.push(task);\n                        }\n\n                        if (eventDurationInDays > 1) {\n                            task.end = kendo.date.nextDay(start);\n                            task.head = true;\n                            for (var day = 1; day < eventDurationInDays; day++) {\n                                start = task.end;\n                                task = event.clone();\n                                task.start = task.startDate = kendo.date.getDate(start);\n                                task.end = kendo.date.nextDay(start);\n                                if (day == eventDurationInDays - 1) {\n                                    task.end = new Date(task.start.getFullYear(), task.start.getMonth(), task.start.getDate(), end.getHours(), end.getMinutes(), end.getSeconds(), end.getMilliseconds());\n                                    task.tail = true;\n                                } else {\n                                    task.isAllDay = true;\n                                    task.middle = true;\n                                }\n\n                                if ((kendo.date.getDate(task.end) <= this.endDate() && task.start >= this.startDate()) || kendo.date.getDate(task.start).getTime() == this.endDate().getTime()) {\n                                    tasks.push(task);\n                                }\n                            }\n                        }\n                    }\n\n                    return new kendo.data.Query(tasks).sort([{ field: \"start\", dir: \"asc\" }, { field: \"end\", dir: \"asc\" }]).groupBy({ field: \"startDate\" }).toArray();\n                },\n\n                _renderTaskGroups: function(tasksGroups, groups) {\n                    var tableRows = [];\n                    var editable = this.options.editable;\n                    var showDelete = editable && editable.destroy !== false && !this._isMobile();\n                    var isMobile = this._isMobile();\n                    var sumOfItemsForDate = this._groupedView._getSumOfItemsForDate(tasksGroups);\n                    var groupsInDay = this._groupedView._getGroupsInDay(tasksGroups, groups);\n                    var groupsRowSpanIndex = 0;\n\n                    for (var taskGroupIndex = 0; taskGroupIndex < tasksGroups.length; taskGroupIndex++) {\n                        var date = tasksGroups[taskGroupIndex].value;\n\n                        var tasks = tasksGroups[taskGroupIndex].items;\n\n                        var today = kendo.date.isToday(date);\n\n                        for (var taskIndex = 0; taskIndex < tasks.length; taskIndex++) {\n                            var task = tasks[taskIndex];\n\n                            var tableRow = [];\n\n                            var headerCells = !isMobile ? tableRow : [];\n\n                            this._groupedView._renderTaskGroupsCells(headerCells, groups, taskGroupIndex, taskIndex, groupsInDay, sumOfItemsForDate, date, groupsRowSpanIndex);\n\n                            groupsRowSpanIndex++;\n                            if (taskIndex === 0) {\n                                if (isMobile) {\n                                    headerCells.push(kendo.format(\n                                        '<td class=\"k-scheduler-datecolumn {1}\" colspan=\"2\">{0}</td>',\n                                        this._dateTemplate({ date: date, isMobile: isMobile }),\n                                        !this.groupedResources.length ? \"k-first\" : \"\"\n                                    ));\n\n                                    tableRows.push('<tr role=\"row\" aria-selected=\"false\"' + (today ? ' class=\"k-today\">' : \">\") + headerCells.join(\"\") + \"</tr>\");\n                                } else {\n                                    this._groupedView._renderDateCell(tableRow, groups, tasks, date, taskGroupIndex, tasksGroups);\n                                }\n                            }\n\n                            if (task.head) {\n                                task.format = \"{0:t}\";\n                            } else if (task.tail) {\n                                task.format = \"{1:t}\";\n                            } else {\n                                task.format = \"{0:t}-{1:t}\";\n                            }\n\n                            task.resources = this.eventResources(task);\n\n                            tableRow.push(kendo.format(\n                                '<td class=\"k-scheduler-timecolumn {4}\"><div>{0}{1}{2}</div></td><td>{3}</td>',\n                                task.tail || task.middle ? kendo.ui.icon(\"caret-alt-left\") : \"\",\n                                this._timeTemplate(task.clone({ start: task._startTime || task.start, end: task.endTime || task.end, messages: this.options.messages })),\n                                task.head || task.middle ? kendo.ui.icon(\"caret-alt-right\") : \"\",\n                                this._eventTemplate(task.clone({ showDelete: showDelete, messages: this.options.messages, template: this.options.eventTemplate })),\n                                !this.groupedResources.length && isMobile ? \"k-first\" : \"\"\n                            ));\n\n                            tableRows.push('<tr role=\"row\" aria-selected=\"false\"' + (today ? ' class=\"k-today\">' : \">\") + tableRow.join(\"\") + \"</tr>\");\n                        }\n                    }\n\n                    return tableRows.join(\"\");\n                },\n\n                _renderTaskGroupsCells: function(headerCells, groups) {\n                    var isMobile = this._isMobile();\n\n                    for (var idx = 0; idx < groups.length; idx++) {\n                        headerCells.push(kendo.format(\n                            '<td class=\"k-scheduler-groupcolumn{2}\" rowspan=\"{0}\">{1}</td>',\n                            groups[idx].rowSpan,\n                            this._groupTemplate({ value: groups[idx].text, isMobile: isMobile }),\n                            groups[idx].className\n                        ));\n                    }\n                },\n\n                render: function(events) {\n                    var table = this.content.find(\"table\").empty();\n                    var groups = [];\n\n                    if (events.length > 0) {\n                        var resources = this.groupedResources;\n\n                        table.append($(\"<tbody>\"));\n\n                        if (resources.length) {\n                            groups = this._createGroupConfiguration(events, resources, null);\n                            this._groupsByDate = [];\n                            this._renderGroups(groups, table.find(\"tbody\"), []);\n                            this._groupedView._renderDates(table.find(\"tbody\"));\n                        } else {\n                            groups = this._tasks(events);\n                            var taskGroups = $(this._renderTaskGroups(groups, []));\n                            kendo.applyStylesFromKendoAttributes(taskGroups, [\"background-color\"]);\n\n                            table.find(\"tbody\").append(taskGroups);\n                        }\n                    }\n\n                    var items = this._eventsList = flattenTaskGroups(groups);\n\n                    this._aria();\n                    this.refreshLayout();\n                    this.trigger(\"activate\");\n                },\n\n                _renderGroups: function(groups, table, parentGroups) {\n                    for (var idx = 0, length = groups.length; idx < length; idx++) {\n                        var parents = this._groupedView._getParents(parentGroups);\n\n                        parents.push(groups[idx]);\n                        this._groupedView._getGroupsByDate(groups, idx, parents);\n\n                        if (groups[idx].groups) {\n                            this._renderGroups(groups[idx].groups, table, parents);\n                        } else {\n                            this._groupedView._renderTaskGroups(table, groups[idx].items, parents);\n                        }\n                    }\n                },\n\n                _createGroupConfiguration: function(events, resources, parent) {\n                    var resource = resources[0];\n                    var configuration = [];\n                    var data = resource.dataSource.view();\n                    var isMobile = this._isMobile();\n\n                    data = data.filter(function(item) {\n                        var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                        return itemParentValue === null || itemParentValue === undefined || (parent && itemParentValue === parent.value);\n                    });\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        var value = resourceValue(resource, data[dataIndex]);\n\n                        var tmp = new kendo.data.Query(events).filter({ field: resource.field, operator: ui.SchedulerView.groupEqFilter(value) }).toArray();\n\n                        if (tmp.length) {\n                            var tasks = this._tasks(tmp);\n                            var className = parent ? \"\" : \" k-first\";\n\n                            var obj = {\n                                text: kendo.getter(resource.dataTextField)(data[dataIndex]),\n                                value: value,\n                                rowSpan: 0,\n                                className: className\n                            };\n\n                            if (resources.length > 1) {\n                                obj.groups = this._createGroupConfiguration(tmp, resources.slice(1), obj);\n                                if (parent) {\n                                    parent.rowSpan += obj.rowSpan;\n                                }\n                            } else {\n                                obj.items = tasks;\n                                var span = rowSpan(obj.items);\n\n                                if (isMobile) {\n                                    span += obj.items.length;\n                                }\n\n                                obj.rowSpan = span;\n                                if (parent) {\n                                    parent.rowSpan += span;\n                                }\n                            }\n                            configuration.push(obj);\n                        }\n                    }\n\n                    return configuration;\n                },\n\n                // TODO: this method for Agenda view has never worked properly\n                // it used to return wrong resources\n                // to be clearer the deficit, it now does not return any resources\n                _resourceBySlot: function() {\n                    return {};\n                },\n\n                selectionByElement: function(cell) {\n                    var index, event;\n                    cell = $(cell);\n                    if (cell.hasClass(\"k-scheduler-datecolumn\") || !this._eventsList.length) {\n                        return;\n                    }\n\n                    if (cell.is(\".k-task\")) {\n                        cell = cell.closest(\"td\");\n                    }\n\n                    if (this._isMobile()) {\n                        var parent = cell.parent();\n                        index = parent.parent().children()\n                            .filter(function() {\n                                return $(this).children(\":not(.k-scheduler-datecolumn, .k-scheduler-groupcolumn)\").length;\n                            })\n                            .index(parent);\n                    } else {\n                        index = cell.parent().index();\n                    }\n\n                    event = this._eventsList[index];\n\n                    return {\n                        index: index,\n                        start: event.start,\n                        end: event.end,\n                        isAllDay: event.isAllDay,\n                        uid: event.uid\n                    };\n                },\n\n                select: function(selection) {\n                    this.clearSelection();\n\n                    var row = this.table\n                        .find(\".k-task\")\n                        .eq(selection.index)\n                        .closest(\"tr\")\n                        .addClass(\"k-selected\")\n                        .attr(\"aria-selected\", true)[0];\n\n                    this.current(row);\n                },\n\n                move: function(selection, key) {\n                    var handled = false;\n                    var index = selection.index;\n\n                    if (key == kendo.keys.UP) {\n                        index--;\n                        handled = true;\n                    } else if (key == kendo.keys.DOWN) {\n                        index++;\n                        handled = true;\n                    }\n\n                    if (handled) {\n                        var event = this._eventsList[index];\n                        if (event) {\n                            selection.start = event.start;\n                            selection.end = event.end;\n                            selection.isAllDay = event.isAllDay;\n                            selection.events = [event.uid];\n                            selection.index = index;\n                        }\n                    }\n\n                    return handled;\n                },\n\n                moveToEvent: function() {\n                    return false;\n                },\n\n                constrainSelection: function(selection) {\n                    var event = this._eventsList[0];\n                    if (event) {\n                        selection.start = event.start;\n                        selection.end = event.end;\n                        selection.isAllDay = event.isAllDay;\n                        selection.events = [event.uid];\n                        selection.index = 0;\n                    }\n                },\n\n                isInRange: function() {\n                    return true;\n                },\n\n                destroy: function() {\n                    if (this.element) {\n                        this.element.off(NS);\n                    }\n\n                    ui.SchedulerView.fn.destroy.call(this);\n                },\n\n                options: {\n                    title: \"Agenda\",\n                    name: \"agenda\",\n                    editable: true,\n                    selectedDateFormat: \"{0:D}-{1:D}\",\n                    selectedShortDateFormat: \"{0:d} - {1:d}\",\n                    selectedMobileDateFormat: \"{0: MMM} {0:dd} - {1:dd}\",\n                    eventTemplate: ({ title }) => encode(title),\n                    eventTimeTemplate: ({ isAllDay, messages, format, start, end }) => (isAllDay ? messages.allDay : kendo.format(format, start, end)),\n                    eventDateTemplate: EVENT_DATE_TEMPLATE,\n                    eventGroupTemplate: EVENT_GROUP_TEMPLATE,\n                    messages: {\n                        event: \"Event\",\n                        date: \"Date\",\n                        time: \"Time\",\n                        allDay: \"all day\"\n                    }\n                }\n            });\n\n            function rowSpan(tasks) {\n                var result = 0;\n\n                for (var idx = 0, length = tasks.length; idx < length; idx++) {\n                    result += tasks[idx].items.length;\n                }\n\n                return result;\n            }\n\n            function resourceValue(resource, item) {\n                if (resource.valuePrimitive) {\n                    item = kendo.getter(resource.dataValueField)(item);\n                }\n                return item;\n            }\n\n            function flattenTaskGroups(groups) {\n                var idx = 0,\n                    length = groups.length,\n                    item,\n                    result = [];\n\n                for (; idx < length; idx++) {\n                    item = groups[idx];\n                    if (item.groups) {\n                        item = flattenGroup(item.groups);\n                        result = result.concat(item);\n                    } else {\n                        result = result.concat(flattenGroup(item.items));\n                    }\n                }\n\n                return result;\n            }\n\n            function flattenGroup(groups) {\n                var items = [].concat(groups),\n                    item = items.shift(),\n                    result = [],\n                    push = [].push;\n                while (item) {\n                    if (item.groups) {\n                        push.apply(items, item.groups);\n                    } else if (item.items) {\n                        push.apply(items, item.items);\n                    } else {\n                        push.call(result, item);\n                    }\n\n                    item = items.shift();\n                }\n\n                return result;\n            }\n\n        })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}