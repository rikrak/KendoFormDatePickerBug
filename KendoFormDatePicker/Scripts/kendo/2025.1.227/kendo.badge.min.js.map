{"version":3,"sources":["raw-js/kendo.badge.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Badge","this","$","undefined$1","window","Widget","ui","iconTemplate","icon","svgIconTemplate","extend","init","element","options","that","fn","call","_content","_appearance","notify","destroy","name","cutoutBorder","data","fillMode","max","Infinity","position","align","rounded","roundings","small","medium","large","full","sizes","size","template","text","themeColor","visible","_classNames","_text","_template","bind","html","_themeColor","_shape","shape","_sizes","_size","_fillMode","_rounded","_roundings","_cutoutBorder","_align","_position","_visible","_updateClassNames","classNames","keepClassNames","sizeAbbr","roundedAbbr","removeClass","index","className","indexOf","push","split","length","replace","addClass","join","setOptions","arguments","toString","iconTemplateFunction","_icon","color","hide","show","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default","Object","defineProperty","value"],"mappings":"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","file":"kendo.badge.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Badge = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"badge\",\n        name: \"Badge\",\n        category: \"web\", // suite\n        description: \"The Badge decorates avatars, navigation menus, or other components in the application when visual notification is needed\",\n        depends: [\"core\", \"icons\"] // dependencies\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo;\n        var Widget = kendo.ui.Widget;\n        var ui = kendo.ui;\n        var HIDDEN = 'k-hidden';\n\n        var iconTemplate = ({ icon }) => kendo.ui.icon($(`<span class='k-badge-icon'></span>`), { icon: icon });\n        var svgIconTemplate = ({ icon }) => `<span class='k-badge-icon k-svg-icon k-icon'>${icon}</span>`;\n\n        var Badge = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._content();\n\n                that._appearance();\n\n                kendo.notify(that);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n            },\n\n            options: {\n                name: 'Badge',\n                cutoutBorder: false,\n                data: {},\n                fillMode: 'solid',\n                icon: '',\n                max: Infinity,\n                position: 'inline',\n                align: '',\n                rounded: 'medium',\n                roundings: {\n                    'small': 'sm',\n                    'medium': 'md',\n                    'large': 'lg',\n                    'full': 'full'\n                },\n                sizes: {\n                    'small': 'sm',\n                    'medium': 'md',\n                    'large': 'lg'\n                },\n                size: 'medium',\n                template: null,\n                text: '',\n                themeColor: 'secondary',\n                visible: true,\n                _classNames: []\n            },\n\n            _content: function() {\n                var that = this;\n                var text = that.options.text;\n                var template = that.options.template;\n                var data = that.options.data;\n                var icon = that.options.icon;\n\n                // Order of precedence\n                // 1) template\n                // 2) icon\n                // 3) text\n                // 4) content\n\n                if (template !== null) {\n                    that._text = text;\n                    that._template = kendo.template(template).bind(that);\n                    that.element.html( that._template(data) );\n\n                    return;\n                }\n\n                if (icon !== '') {\n                    that.icon(icon);\n\n                    return;\n                }\n\n                if (text !== '') {\n                    that.text(text);\n\n                    return;\n                }\n\n                that.text(that.element.html());\n            },\n\n            _appearance: function() {\n                var that = this;\n                that._themeColor = that.options.themeColor;\n                that._shape = that.options.shape;\n                that._sizes = that.options.sizes;\n                that._size = that.options.size;\n                that._fillMode = that.options.fillMode;\n                that._rounded = that.options.rounded;\n                that._roundings = that.options.roundings;\n                that._cutoutBorder = that.options.cutoutBorder;\n                that._align = that.options.align;\n                that._position = that.options.position;\n                that._visible = that.options.visible;\n\n                that._updateClassNames();\n            },\n\n            _updateClassNames: function() {\n                var that = this;\n                var classNames = ['k-badge'];\n                var keepClassNames = that.options._classNames;\n                var themeColor = that._themeColor;\n                var shape = that._shape;\n                var sizes = that._sizes;\n                var size = that._size;\n                var sizeAbbr = sizes[size] === undefined$1 ? size : sizes[size];\n                var fillMode = that._fillMode;\n                var rounded = that._rounded;\n                var roundings = that._roundings;\n                var roundedAbbr = roundings[rounded] === undefined$1 ? rounded : roundings[rounded];\n                var cutoutBorder = that._cutoutBorder;\n                var align = that._align;\n                var position = that._position;\n                var visible = that._visible;\n\n                // Remove all class names\n                that.element.removeClass(function(index, className) {\n                    if (className.indexOf('k-') === 0 && keepClassNames.indexOf(className) === -1) {\n                        that.element.removeClass(className);\n                    }\n                });\n\n                // Fill\n                if (typeof fillMode === 'string' && fillMode !== '') {\n                    classNames.push('k-badge-' + fillMode);\n                }\n\n                // Color\n                if (typeof themeColor === 'string' && themeColor !== '') {\n                    classNames.push('k-badge-' + fillMode + '-' + themeColor);\n                }\n\n                // Size\n                if (typeof size === 'string' && size !== '') {\n                    classNames.push('k-badge-' + sizeAbbr);\n                }\n\n                // Rounded\n                if (typeof rounded === 'string' && rounded !== '') {\n                    classNames.push('k-rounded-' + roundedAbbr);\n                }\n\n                // Shape\n                if (typeof shape === 'string' && shape !== '') {\n                    classNames.push('k-badge-' + shape);\n                }\n\n                // Cutout border\n                if (typeof cutoutBorder === 'boolean' && cutoutBorder === true) {\n                    classNames.push('k-badge-border-cutout');\n                }\n\n                // Position\n                if (typeof position === 'string' && position !== '') {\n                    classNames.push('k-badge-' + position);\n                }\n\n                // Align\n                if (typeof position === 'string' && position !== '' && position !== 'inline' && typeof align === 'string' && align.split(' ').length == 2) {\n                    classNames.push('k-' + align.replace(' ', '-'));\n                }\n\n                // Visibility\n                if (visible === false) {\n                    classNames.push(HIDDEN);\n                }\n\n                // Apply classnames\n                that.element.addClass(classNames.join(' '));\n            },\n\n            setOptions: function(options) {\n                var that = this;\n\n                that.element.removeClass(function(index, className) {\n                    if (className.indexOf('k-') >= 0) {\n                        that.element.removeClass(className);\n                    }\n                });\n\n                Widget.fn.setOptions.call(that, options);\n\n                that._content();\n\n                that._appearance();\n            },\n\n            text: function(text) {\n                var that = this;\n                var max = that.options.max;\n\n                // handle badge.text()\n                if (arguments.length === 0 || text === undefined$1) {\n                    return that._text;\n                }\n\n                that._text = text;\n\n                // handle badge.text(true|false|null)\n                if (text === true || text === false || text === null) {\n                    that.element.html('');\n\n                    return;\n                }\n\n                // handle badge.text('string')\n                if (typeof text === 'string') {\n                    that.element.html(text);\n\n                    return;\n                }\n\n                // handle badge.text(1)\n                if (typeof text === 'number') {\n                    if (text > max) {\n                        that.element.html(max + '+');\n                    } else {\n                        that.element.html(text);\n                    }\n\n                    return;\n                }\n\n                // handle other objects\n                if (typeof text === 'object' && 'toString' in text) {\n                    that.element.html(text.toString());\n\n                    return;\n                }\n\n            },\n\n            icon: function(icon) {\n                var that = this;\n                var iconTemplateFunction;\n\n                // handle badge.icon()\n                if (arguments.length === 0 || icon === undefined$1) {\n                    return that._icon;\n                }\n\n                that._icon = icon;\n\n                // Handle badge.icon(<SVG />)\n                if (icon.indexOf('<svg') === 0) {\n                    iconTemplateFunction = kendo.template(svgIconTemplate);\n                    that.element.html(iconTemplateFunction({ icon: icon }));\n\n                    return;\n                }\n\n                // Handle badge.icon(ICON_NAME)\n                iconTemplateFunction = kendo.template(iconTemplate);\n                that.element.html(iconTemplateFunction({ icon: icon }));\n            },\n\n            themeColor: function(color) {\n                var that = this;\n\n                // handle badge.color()\n                if (arguments.length === 0 || color === undefined$1) {\n                    return that._themeColor;\n                }\n\n                that._themeColor = color;\n                that._updateClassNames();\n            },\n\n            rounded: function(rounded) {\n                var that = this;\n\n                // handle badge.shape()\n                if (arguments.length === 0 || rounded === undefined$1) {\n                    return that._rounded;\n                }\n\n                that._rounded = rounded;\n                that._updateClassNames();\n            },\n\n            hide: function() {\n                var that = this;\n                that._visible = false;\n\n                that._updateClassNames();\n            },\n\n            show: function() {\n                var that = this;\n                that._visible = true;\n\n                that._updateClassNames();\n            }\n        });\n\n        ui.plugin(Badge);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}