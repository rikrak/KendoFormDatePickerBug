{"version":3,"sources":["raw-js/kendo.draggable.cmn.chunk.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","kendo","_globals","DraggableCmnChunk","this","proxy","a","b","e","bind","el","event","callback","addEventListener","unbind","removeEventListener","noop","preventDefault","touchRegExp","normalizeEvent","type","match","pageX","changedTouches","pageY","clientX","clientY","originalEvent","isTouch","offsetX","offsetY","ctrlKey","shiftKey","altKey","Draggable","ref","this$1$1","press","drag","release","mouseOnly","_pressHandler","_dragHandler","_releaseHandler","_ignoreMouse","_mouseOnly","_touchstart","touches","length","_touchmove","_touchend","setTimeout","_restoreMouse","_mousedown","which","document","_mousemove","_mouseup","_pointerdown","isPrimary","button","_pointermove","_pointerup","prototypeAccessors","configurable","supportPointerEvent","window","PointerEvent","get","_element","ownerDocument","prototype","cancelDrag","bindTo","element","_unbindFromCurrent","_bindToCurrent","_usePointers","update","destroy","Object","defineProperties","default","D","__meta__","id","name","category","description","depends","hidden","chunk"],"mappings":"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","file":"kendo.draggable.cmn.chunk.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.DraggableCmnChunk = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"draggable.cmn.chunk\",\n        name: \"DraggableCmnChunk\",\n        category: \"web\",\n        description: \"A reusable outputed chunk of code\",\n        depends: [],\n        hidden: true,\n        chunk: true\n    };\n\n    var proxy = function (a, b) { return function (e) { return b(a(e)); }; };\n\n    var bind = function (el, event, callback) { return el.addEventListener && el.addEventListener(event, callback); };\n\n    var unbind = function (el, event, callback) { return el && el.removeEventListener && el.removeEventListener(event, callback); };\n\n    var noop = function () { /* empty */ };\n\n    var preventDefault = function (e) { return e.preventDefault(); };\n\n    var touchRegExp = /touch/;\n\n    // 300ms is the usual mouse interval;\n    // // However, an underpowered mobile device under a heavy load may queue mouse events for a longer period.\n    var IGNORE_MOUSE_TIMEOUT = 2000;\n\n    function normalizeEvent(e) {\n        if (e.type.match(touchRegExp)) {\n            return {\n                pageX: e.changedTouches[0].pageX,\n                pageY: e.changedTouches[0].pageY,\n                clientX: e.changedTouches[0].clientX,\n                clientY: e.changedTouches[0].clientY,\n                type: e.type,\n                originalEvent: e,\n                isTouch: true\n            };\n        }\n\n        return {\n            pageX: e.pageX,\n            pageY: e.pageY,\n            clientX: e.clientX,\n            clientY: e.clientY,\n            offsetX: e.offsetX,\n            offsetY: e.offsetY,\n            type: e.type,\n            ctrlKey: e.ctrlKey,\n            shiftKey: e.shiftKey,\n            altKey: e.altKey,\n            originalEvent: e\n        };\n    }\n\n    var Draggable = function Draggable(ref) {\n        var this$1$1 = this;\n        var press = ref.press; if ( press === void 0 ) press = noop;\n        var drag = ref.drag; if ( drag === void 0 ) drag = noop;\n        var release = ref.release; if ( release === void 0 ) release = noop;\n        var mouseOnly = ref.mouseOnly; if ( mouseOnly === void 0 ) mouseOnly = false;\n\n        this._pressHandler = proxy(normalizeEvent, press);\n        this._dragHandler = proxy(normalizeEvent, drag);\n        this._releaseHandler = proxy(normalizeEvent, release);\n        this._ignoreMouse = false;\n        this._mouseOnly = mouseOnly;\n\n        this._touchstart = function (e) {\n            if (e.touches.length === 1) {\n                this$1$1._pressHandler(e);\n            }\n        };\n\n        this._touchmove = function (e) {\n            if (e.touches.length === 1) {\n                this$1$1._dragHandler(e);\n            }\n        };\n\n        this._touchend = function (e) {\n            // the last finger has been lifted, and the user is not doing gesture.\n            // there might be a better way to handle this.\n            if (e.touches.length === 0 && e.changedTouches.length === 1) {\n                this$1$1._releaseHandler(e);\n                this$1$1._ignoreMouse = true;\n                setTimeout(this$1$1._restoreMouse, IGNORE_MOUSE_TIMEOUT);\n            }\n        };\n\n        this._restoreMouse = function () {\n            this$1$1._ignoreMouse = false;\n        };\n\n        this._mousedown = function (e) {\n            var which = e.which;\n\n            if ((which && which > 1) || this$1$1._ignoreMouse) {\n                return;\n            }\n\n            bind(this$1$1.document, \"mousemove\", this$1$1._mousemove);\n            bind(this$1$1.document, \"mouseup\", this$1$1._mouseup);\n            this$1$1._pressHandler(e);\n        };\n\n        this._mousemove = function (e) {\n            this$1$1._dragHandler(e);\n        };\n\n        this._mouseup = function (e) {\n            unbind(this$1$1.document, \"mousemove\", this$1$1._mousemove);\n            unbind(this$1$1.document, \"mouseup\", this$1$1._mouseup);\n            this$1$1._releaseHandler(e);\n        };\n\n        this._pointerdown = function (e) {\n            if (e.isPrimary && e.button === 0) {\n                bind(this$1$1.document, \"pointermove\", this$1$1._pointermove);\n                bind(this$1$1.document, \"pointerup\", this$1$1._pointerup);\n                bind(this$1$1.document, \"pointercancel\", this$1$1._pointerup);\n                bind(this$1$1.document, \"contextmenu\", preventDefault);\n\n                this$1$1._pressHandler(e);\n            }\n        };\n\n        this._pointermove = function (e) {\n            if (e.isPrimary) {\n                this$1$1._dragHandler(e);\n            }\n        };\n\n        this._pointerup = function (e) {\n            if (e.isPrimary) {\n                unbind(this$1$1.document, \"pointermove\", this$1$1._pointermove);\n                unbind(this$1$1.document, \"pointerup\", this$1$1._pointerup);\n                unbind(this$1$1.document, \"pointercancel\", this$1$1._pointerup);\n                unbind(this$1$1.document, \"contextmenu\", preventDefault);\n\n                this$1$1._releaseHandler(e);\n            }\n        };\n    };\n\n    var prototypeAccessors = { document: { configurable: true } };\n\n    Draggable.supportPointerEvent = function supportPointerEvent () {\n        return (typeof window !== 'undefined') && window.PointerEvent;\n    };\n\n    prototypeAccessors.document.get = function () {\n        return this._element\n        ? this._element.ownerDocument\n        : document;\n    };\n\n    Draggable.prototype.cancelDrag = function cancelDrag () {\n        unbind(this.document, \"pointermove\", this._pointermove);\n        unbind(this.document, \"pointerup\", this._pointerup);\n        unbind(this.document, \"pointercancel\", this._pointerup);\n    };\n\n    Draggable.prototype.bindTo = function bindTo (element) {\n        if (element === this._element) {\n            return;\n        }\n\n        if (this._element) {\n            this._unbindFromCurrent();\n        }\n\n        this._element = element;\n        this._bindToCurrent();\n    };\n\n    Draggable.prototype._bindToCurrent = function _bindToCurrent () {\n        var element = this._element;\n\n        if (this._usePointers()) {\n            bind(element, \"pointerdown\", this._pointerdown);\n            return;\n        }\n\n        bind(element, \"mousedown\", this._mousedown);\n\n        if (!this._mouseOnly) {\n            bind(element, \"touchstart\", this._touchstart);\n            bind(element, \"touchmove\", this._touchmove);\n            bind(element, \"touchend\", this._touchend);\n        }\n    };\n\n    Draggable.prototype._unbindFromCurrent = function _unbindFromCurrent () {\n        var element = this._element;\n\n        if (this._usePointers()) {\n            unbind(element, \"pointerdown\", this._pointerdown);\n            unbind(this.document, \"pointermove\", this._pointermove);\n            unbind(this.document, \"pointerup\", this._pointerup);\n            unbind(this.document, \"contextmenu\", preventDefault);\n            unbind(this.document, \"pointercancel\", this._pointerup);\n            return;\n        }\n\n        unbind(element, \"mousedown\", this._mousedown);\n\n        if (!this._mouseOnly) {\n            unbind(element, \"touchstart\", this._touchstart);\n            unbind(element, \"touchmove\", this._touchmove);\n            unbind(element, \"touchend\", this._touchend);\n        }\n    };\n\n    Draggable.prototype._usePointers = function _usePointers () {\n        return !this._mouseOnly && Draggable.supportPointerEvent();\n    };\n\n    Draggable.prototype.update = function update (ref) {\n            var press = ref.press; if ( press === void 0 ) press = noop;\n            var drag = ref.drag; if ( drag === void 0 ) drag = noop;\n            var release = ref.release; if ( release === void 0 ) release = noop;\n            var mouseOnly = ref.mouseOnly; if ( mouseOnly === void 0 ) mouseOnly = false;\n\n        this._pressHandler = proxy(normalizeEvent, press);\n        this._dragHandler = proxy(normalizeEvent, drag);\n        this._releaseHandler = proxy(normalizeEvent, release);\n        this._mouseOnly = mouseOnly;\n    };\n\n    Draggable.prototype.destroy = function destroy () {\n        this._unbindFromCurrent();\n        this._element = null;\n    };\n\n    Object.defineProperties( Draggable.prototype, prototypeAccessors );\n\n    // Re-export as \"default\" field to address a bug\n    // where the ES Module is imported by CommonJS code.\n    //\n    // See https://github.com/telerik/kendo-angular/issues/1314\n    Draggable.default = Draggable;\n\n    exports.D = Draggable;\n    exports.__meta__ = __meta__;\n\n}));\n"]}