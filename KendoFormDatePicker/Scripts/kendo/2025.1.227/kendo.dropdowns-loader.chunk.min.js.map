{"version":3,"sources":["raw-js/kendo.dropdowns-loader.chunk.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","DropdownsLoaderChunk","this","$","jQuery","LOADING","SELECTOR","ARIA_BUSY","toggleLoader","toggle","that","loaderIsShown","wrapper","hasClass","inputValuesWrapper","find","isMultiSelect","options","name","toLowerCase","_loading","addClass","_suffixContainer","separators","length","before","_arrow","insertAfter","element","removeClass","remove","showBusyHandler","_focused","attr","_toggleLoader","_hideClear","showBusy","e","isDefaultPrevented","_request","_busy","setTimeout","_showBusyHandler","hideBusy","clearTimeout","_toggleCloseVisibility","_showClear","__meta__","id","category","description","depends","hidden","chunk","i","loader","_showBusy","bind","_hideBusy"],"mappings":";;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,OAAAF,EAAAC,QAAAE,QAAA,kBACA,mBAAAC,QAAAA,OAAAC,IAAAD,OAAA,CAAA,UAAA,kBAAAJ,GACAA,IAAAD,EAAA,oBAAAO,WAAAA,WAAAP,GAAAQ,MAAAC,MAAAT,EAAAS,OAAA,CAAA,EAAAT,EAAAS,MAAAC,SAAAV,EAAAS,MAAAC,UAAA,CAAA,EAAAV,EAAAS,MAAAC,SAAAC,qBAAA,CAAA,GACA,CAJA,CAIAC,MAAA,SAAAV,GAaA,IAAAW,EAAAJ,MAAAK,OAEA,MAAAC,EAAA,YAEAC,EAAA,gBAEAC,EAAA,YAaA,SAAAC,EAAAC,GACA,MAAAC,EAAAR,KACAS,EAAAD,EAAAE,QAAAC,SAAAR,GACAS,EAAAJ,EAAAE,QAAAG,KAAA,mBACAC,EAAA,gBAAAN,EAAAO,QAAAC,KAAAC,cACA,GAAAT,EAAAU,SACA,GAAAX,IAAAE,EAEA,GADAD,EAAAE,QAAAS,SAAAhB,GACAK,EAAAY,iBAAA,CACA,MAAAC,EAAAb,EAAAE,QAAAG,KAAA,sBACAZ,EAAAoB,EAAAA,EAAAC,OAAA,IAAAC,OAAAf,EAAAU,SACA,MAAA,GAAAV,EAAAgB,OACAhB,EAAAgB,OAAAD,OAAAf,EAAAU,eACA,GAAAN,EAAAU,OAAA,GAAAR,EACAN,EAAAU,SAAAO,YAAAb,OACA,CACA,MAAAc,EAAAlB,EAAAkB,QAAAf,SAAAP,GAAAI,EAAAkB,QAAAlB,EAAAE,QAAAG,KAAA,IAAAT,KACAI,EAAAU,SAAAO,YAAAC,EACA,MACAjB,IACAD,EAAAE,QAAAiB,YAAAxB,GACAK,EAAAU,SAAAU,SAGA,CAEA,SAAAC,IACA,MAAArB,EAAAR,KACA,GAAAQ,EAAAsB,SACAtB,EAAAsB,SAAAC,KAAA1B,GAAA,OACA,EACAG,EAAAkB,QAAAf,SAAAP,GAAAI,EAAAkB,QAAAlB,EAAAE,QAAAG,KAAA,IAAAT,MACA2B,KAAA1B,GAAA,EACA,CAEAG,EAAAwB,eAAA,GACAxB,EAAAyB,YACA,CAEA,SAAAC,EAAAC,GACA,MAAA3B,EAAAR,KAEAmC,GAAAA,EAAAC,uBAIA5B,EAAA6B,UAAA,EAEA7B,EAAA8B,QAIA9B,EAAA8B,MAAAC,WAAA/B,EAAAgC,iBAAA,MACA,CAGA,SAAAC,IACA,MAAAjC,EAAAR,KASA,GARA0C,aAAAlC,EAAA8B,OACA9B,EAAAwB,eAAA,GACAxB,EAAA8B,MAAA,KAEA9B,EAAA6B,WACA7B,EAAA6B,UAAA,GAGA7B,EAAAsB,SACAtB,EAAAsB,SAAAC,KAAA1B,GAAA,OACA,EACAG,EAAAkB,QAAAf,SAAAP,GAAAI,EAAAkB,QAAAlB,EAAAE,QAAAG,KAAA,IAAAT,MACA2B,KAAA1B,GAAA,EACA,CAEAG,EAAAmC,uBACAnC,EAAAmC,yBAEAnC,EAAAoC,YAEA,CAEAtD,EAAAuD,SA/GA,CACAC,GAAA,yBACA9B,KAAA,uBACA+B,SAAA,MACAC,YAAA,oCACAC,QAAA,CAAA,QACAC,QAAA,EACAC,OAAA,GAyGA7D,EAAA8D,EA5FA,WACA,MAAA5C,EAAAR,KACAqD,EAAApD,EAAA,iBAAAkB,SAPA,2CAOAY,KAAA,OAAA,gBACAvB,EAAAU,SAAAmC,EAEA7C,EAAA8C,UAAApB,EAAAqB,KAAA/C,GACAA,EAAAgD,UAAAf,EAAAc,KAAA/C,GACAA,EAAAwB,cAAA1B,EAAAiD,KAAA/C,GACAA,EAAAgC,iBAAAX,EAAA0B,KAAA/C,EACA,CAqFA","file":"kendo.dropdowns-loader.chunk.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.DropdownsLoaderChunk = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"dropdowns-loader.chunk\",\n        name: \"DropdownsLoaderChunk\",\n        category: \"web\",\n        description: \"A reusable outputed chunk of code\",\n        depends: ['core'],\n        hidden: true,\n        chunk: true\n    };\n\n\n\n    let $ = kendo.jQuery;\n\n    const LOADING = \"k-loading\",\n          LOADER = \"k-icon k-i-loading k-input-loading-icon\",\n          SELECTOR = \"k-input-inner\",\n          INPUT_VALUES = \"k-input-values\",\n          ARIA_BUSY = \"aria-busy\";\n\n    function initLoader() {\n        const that = this;\n        const loader = $(\"<span></span>\").addClass(LOADER).attr(\"role\", \"presentation\");\n        that._loading = loader;\n\n        that._showBusy = showBusy.bind(that);\n        that._hideBusy = hideBusy.bind(that);\n        that._toggleLoader = toggleLoader.bind(that);\n        that._showBusyHandler = showBusyHandler.bind(that);\n    }\n\n    function toggleLoader(toggle) {\n        const that = this;\n        const loaderIsShown = that.wrapper.hasClass(LOADING);\n        const inputValuesWrapper = that.wrapper.find(`.${INPUT_VALUES}`);\n        const isMultiSelect = that.options.name.toLowerCase() === \"multiselect\";\n        if (that._loading) {\n            if (toggle && !loaderIsShown) {\n                that.wrapper.addClass(LOADING);\n                if (that._suffixContainer) {\n                    const separators = that.wrapper.find('.k-input-separator');\n                    $(separators[separators.length - 1]).before(that._loading);\n                } else if (that._arrow) {\n                    that._arrow.before(that._loading);\n                } else if (inputValuesWrapper.length > 0 && isMultiSelect) {\n                    that._loading.insertAfter(inputValuesWrapper);\n                } else {\n                    const element = that.element.hasClass(SELECTOR) ? that.element : that.wrapper.find(`.${SELECTOR}`);\n                    that._loading.insertAfter(element);\n                }\n            } else if (loaderIsShown) {\n                that.wrapper.removeClass(LOADING);\n                that._loading.remove();\n            }\n        }\n    }\n\n    function showBusyHandler() {\n            const that = this;\n            if (that._focused) {\n                that._focused.attr(ARIA_BUSY, true);\n            } else {\n                const element = that.element.hasClass(SELECTOR) ? that.element : that.wrapper.find(`.${SELECTOR}`);\n                element.attr(ARIA_BUSY, true);\n            }\n\n            that._toggleLoader(true);\n            that._hideClear();\n    }\n\n    function showBusy(e) {\n        const that = this;\n\n        if (e && e.isDefaultPrevented()) {\n            return;\n        }\n\n        that._request = true;\n\n        if (that._busy) {\n            return;\n        }\n\n        that._busy = setTimeout(that._showBusyHandler, 100);\n    }\n\n\n    function hideBusy() {\n        const that = this;\n        clearTimeout(that._busy);\n        that._toggleLoader(false);\n        that._busy = null;\n\n        if (that._request) {\n            that._request = false;\n        }\n\n        if (that._focused) {\n            that._focused.attr(ARIA_BUSY, false);\n        } else {\n            const element = that.element.hasClass(SELECTOR) ? that.element : that.wrapper.find(`.${SELECTOR}`);\n            element.attr(ARIA_BUSY, true);\n        }\n\n        if (that._toggleCloseVisibility) {\n            that._toggleCloseVisibility();\n        } else {\n            that._showClear();\n        }\n    }\n\n    exports.__meta__ = __meta__;\n    exports.i = initLoader;\n\n}));\n"]}