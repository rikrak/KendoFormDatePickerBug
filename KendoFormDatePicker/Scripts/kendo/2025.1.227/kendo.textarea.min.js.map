{"version":3,"sources":["raw-js/kendo.textarea.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Textarea","Core","Floatinglabel","PrefixSuffixContainersChunk","this","kendo_core_js","kendo_floatinglabel_js","kendo_prefixSuffixContainers_chunk_js","$","undefined$1","window","Widget","ui","isPlainObject","NS","CHANGE","DISABLED","READONLY","FOCUSED","STATEDISABLED","STATEREADONLY","ARIA_DISABLED","TextArea","extend","init","element","options","that","fn","call","value","val","readonly","Boolean","attr","enable","placeholder","maxLength","inputMode","replace","length","_wrapper","_label","_editable","disable","_applyAttributes","_applyCssClasses","a","widget","wrapper","floatingLabel","refresh","notify","events","attributes","name","label","resizable","cols","rows","rounded","size","fillMode","resize","overflow","layoutFlow","prefixOptions","separator","suffixOptions","action","cssProperties","getValidClass","propName","property","_value","focus","destroy","_inputLabel","remove","style","cssText","off","unwrap","setOptions","toggleClass","prop","removeClass","on","_focusin","bind","_focusout","floating","labelText","id","content","_floatingLabelContainer","wrap","parent","FloatingLabel","addClass","isFunction","guid","newValue","trigger","DOMElement","width","className","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery","kendo$1","__meta__","category","description","depends","default","Object","defineProperty"],"mappings":"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","file":"kendo.textarea.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.floatinglabel.js'), require('kendo.prefix-suffix-containers.chunk.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.floatinglabel', 'kendo.prefix-suffix-containers.chunk'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Textarea = {}), global.kendo._globals.Core, global.kendo._globals.Floatinglabel, global.kendo._globals.PrefixSuffixContainersChunk));\n})(this, (function (exports, kendo_core_js, kendo_floatinglabel_js, kendo_prefixSuffixContainers_chunk_js) {\n    const __meta__ = {\n        id: \"textarea\",\n        name: \"TextArea\",\n        category: \"web\",\n        description: \"The TextArea widget represents a multi-line plain-text editing control which enables you to style and provide a floating label functionality to textarea elements\",\n        depends: [\"core\", \"floatinglabel\", \"prefix-suffix-containers.chunk\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            ui = kendo.ui,\n            isPlainObject = $.isPlainObject,\n            NS = \".kendoTextArea\",\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            INPUT = \"k-input-inner\",\n            FOCUSED = \"k-focus\",\n            LABELCLASSES = \"k-label k-input-label\",\n            FLOATINGLABELCLASS = \"k-floating-label\",\n            STATEDISABLED = \"k-disabled\",\n            STATEREADONLY = \"k-readonly\",\n            ARIA_DISABLED = \"aria-disabled\",\n            TEXTAREACONTAINER = \"k-textarea-container\";\n\n        var TextArea = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n                options = $.extend(true, {}, options);\n\n                that.options.value = options.value || that.element.val();\n                that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n                that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(that.element.attr(\"disabled\")));\n                that.options.placeholder = options.placeholder || that.element.attr(\"placeholder\");\n                that.options.maxLength = options.maxLength || that.element.attr(\"maxlength\");\n                that.options.inputMode = options.inputMode || that.element.attr(\"inputmode\") || \"text\";\n\n                if (!that.options.value.replace(/\\s/g, '').length) {\n                    that.options.value = '';\n                    that.element.val('');\n                }\n\n                that.value(that.options.value);\n                that._wrapper();\n                that._label();\n                that._editable({\n                    readonly: that.options.readonly,\n                    disable: !(that.options.enable)\n                });\n                that._applyAttributes();\n                that._applyCssClasses();\n                that.element.attr(\"autocomplete\", \"off\");\n                that.element.attr(\"inputmode\", that.options.inputMode);\n\n                kendo_prefixSuffixContainers_chunk_js.a({ widget: that, wrapper: that.wrapper, options: that.options });\n                if (that.floatingLabel) {\n                    that.floatingLabel.refresh();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            attributes: [\n                \"maxLength\",\n                \"rows\",\n                \"placeholder\"\n            ],\n\n            options: {\n                name: 'TextArea',\n                value: '',\n                readonly: false,\n                enable: true,\n                placeholder: '',\n                label: null,\n                resizable: \"none\",\n                maxLength: null,\n                cols: 20,\n                rows: 1,\n                rounded: \"medium\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                resize: \"none\",\n                overflow: \"auto\",\n                layoutFlow: \"vertical\",\n                prefixOptions: {\n                    separator: true\n                },\n                suffixOptions: {\n                    separator: true\n                }\n            },\n\n            _applyCssClasses: function(action) {\n                var that = this,\n                    options = that.options,\n                    resize = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"resize\",\n                        value: options.resize\n                    }),\n                    overflow = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"overflow\",\n                        value: options.overflow\n                    }),\n                    layoutFlow = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"layoutFlow\",\n                        value: options.layoutFlow\n                    });\n\n                Widget.fn._applyCssClasses.call(that);\n\n                if (!resize && options.resize === \"none\") {\n                    resize = \"k-resize-none\";\n                }\n\n                if (overflow) {\n                    overflow = \"!\" + overflow;\n                }\n\n                action = action || \"addClass\";\n\n                that.element[action](resize);\n                that.element[action](overflow);\n                that.element[action](INPUT);\n                that.wrapper[action](layoutFlow);\n                if (options.layoutFlow == \"vertical\") {\n                    that.element[action](\"!k-flex-none\");\n                }\n            },\n\n            _applyAttributes: function() {\n                var that = this;\n                var property;\n                var attributes = {};\n\n                for (property in that.attributes) {\n                    attributes[that.attributes[property]] = that.options[that.attributes[property]];\n                }\n\n                that.element.attr(attributes);\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                that._value = value;\n                that.element.val(value);\n            },\n\n            readonly: function(readonly) {\n                var that = this;\n\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                var that = this;\n\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            focus: function() {\n                var that = this;\n\n                that.element[0].focus();\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that._applyCssClasses(\"removeClass\");\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                }\n\n                if (that._inputLabel) {\n                    that._inputLabel.remove();\n                    that._inputLabel = null;\n                }\n\n                // Move the styles back to the element.\n                that.element[0].style.cssText = that.wrapper[0].style.cssText;\n\n                that.element.off(NS);\n                that.element.unwrap();\n                that.wrapper = null;\n                Widget.fn.destroy.call(that);\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                that.destroy();\n                that.init(that.element, options);\n            },\n\n            _editable: function(options) {\n                var that = this;\n                var element = that.element;\n                var wrapper = that.wrapper;\n                var disable = options.disable;\n                var readonly = options.readonly;\n\n                element.off(NS);\n\n                if (!readonly && !disable) {\n                    element.prop(DISABLED, false)\n                           .prop(READONLY, false)\n                           .attr(ARIA_DISABLED, false);\n\n                    wrapper.removeClass(STATEDISABLED)\n                            .removeClass(STATEREADONLY);\n\n                    element.on(\"focusin\" + NS, that._focusin.bind(that));\n                    element.on(\"focusout\" + NS, that._focusout.bind(that));\n                } else {\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable);\n\n                    wrapper.toggleClass(STATEDISABLED, disable)\n                            .toggleClass(STATEREADONLY, readonly);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var id = element.attr(\"id\");\n                var floating;\n                var labelText;\n\n                if (options.label !== null) {\n                    floating = isPlainObject(options.label) ? options.label.floating : false;\n                    labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                    if (floating) {\n                        that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                        that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                        that._floatingLabelContainer.addClass(TEXTAREACONTAINER);\n                    }\n\n                    if (kendo.isFunction(labelText)) {\n                        labelText = labelText.call(that);\n                    }\n\n                    if (!labelText) {\n                        labelText = \"\";\n                    }\n\n                    if (!id) {\n                        id = options.name + \"_\" + kendo.guid();\n                        element.attr(\"id\", id);\n                    }\n\n                    that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n                }\n            },\n\n            _focusin: function() {\n                var that = this;\n\n                that.wrapper.addClass(FOCUSED);\n            },\n\n            _focusout: function() {\n                var that = this;\n                var value = that._value;\n                var newValue = that.element.val();\n\n                that.wrapper.removeClass(FOCUSED);\n\n                if (value === null) {\n                    value = \"\";\n                }\n\n                if (value !== newValue) {\n                    that._value = newValue;\n\n                    that.trigger(CHANGE);\n                }\n            },\n\n            _wrapper: function() {\n                var that = this;\n                var element = that.element;\n                var DOMElement = element[0];\n                var wrapper;\n\n                wrapper = element.wrap(\"<span class='k-input k-textarea'></span>\").parent();\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = \"\";\n\n                that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"TextArea\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"TextArea\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(TextArea);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}