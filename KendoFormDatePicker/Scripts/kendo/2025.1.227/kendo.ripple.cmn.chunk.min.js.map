{"version":3,"sources":["raw-js/kendo.ripple.cmn.chunk.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","kendo","_globals","RippleCmnChunk","this","once","element","eventName","fn","listener","removeEventListener","remove","addEventListener","activate","containerSelector","options","e","container","target","doc","document","ownerDocument","selector","closest","matches","Element","prototype","el","sel","msMatchesSelector","node","parentElement","test","type","classList","contains","add","_a","ripple","createElement","className","blob","appendChild","createRipple","state_1","animated","released","eventType","focusin","keydown","mousedown","pointerdown","touchdown","animationstart","currentTarget","release","window","getComputedStyle","getPropertyValue","rect","getBoundingClientRect","left","top_1","clientX","clientY","top","width","height","dx","dy","size","Math","sqrt","style","offsetWidth","Error","cssText","setTimeout","finishAnimation","state","deactivate","parentNode","removeChild","transition","opacity","__meta__","id","name","category","description","depends","hidden","chunk","r","root","elements","arr","handlers","map","item","defaultOptions","events","activator","body","forEach","evt","concat","apply"],"mappings":"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","file":"kendo.ripple.cmn.chunk.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.RippleCmnChunk = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"ripple.cmn.chunk\",\n        name: \"RippleCmnChunk\",\n        category: \"web\",\n        description: \"A reusable outputed chunk of code\",\n        depends: [],\n        hidden: true,\n        chunk: true\n    };\n\n    var closest = function (element, selector) {\n        if (element.closest) {\n            return element.closest(selector);\n        }\n        var matches = Element.prototype.matches ?\n            function (el, sel) { return el.matches(sel); }\n            : function (el, sel) { return el.msMatchesSelector(sel); };\n        var node = element;\n        while (node) {\n            if (matches(node, selector)) {\n                return node;\n            }\n            node = node.parentElement;\n        }\n    };\n    var createRipple = function (doc) {\n        var ripple = doc.createElement('div');\n        ripple.className = 'k-ripple';\n        var blob = doc.createElement('div');\n        blob.className = 'k-ripple-blob';\n        ripple.appendChild(blob);\n        return [ripple, blob];\n    };\n    var once = function (element, eventName, fn) {\n        var listener = function () {\n            fn();\n            element.removeEventListener(eventName, listener, false);\n        };\n        var remove = function () { return element.addEventListener(eventName, listener, false); };\n        remove();\n        return { remove: remove };\n    };\n    var activate = function (containerSelector, options) { return function (e) {\n        var target = e.target;\n        var doc = target.document || target.ownerDocument;\n        var container;\n        if (options.container) {\n            container = options.container(target);\n        }\n        else {\n            container = closest(target, containerSelector);\n        }\n        if (!container) {\n            return;\n        }\n        // focus event of ripple container triggers double-focus\n        var doubleFocus = /focus/i.test(e.type) && container.classList.contains(\"k-ripple-target\");\n        if (doubleFocus) {\n            return;\n        }\n        if (!target.classList.contains('k-checkbox') && !target.classList.contains('k-radio')) {\n            // suppress focus when animating ripples\n            container.classList.add(\"k-ripple-target\");\n            var _a = createRipple(doc), ripple = _a[0], blob = _a[1];\n            var state_1 = {\n                animated: false,\n                released: false,\n                blob: blob,\n                container: container,\n                ripple: ripple\n            };\n            var eventType = {\n                'focusin': 'focusout',\n                'keydown': 'keyup',\n                'mousedown': 'mouseup',\n                'pointerdown': 'pointerup',\n                'touchdown': 'touchup',\n                'animationstart': 'animationend'\n            }[e.type];\n            once(e.currentTarget, eventType, function () { return release(state_1); });\n            container.appendChild(ripple);\n            // recalc to allow the effect to animate\n            window.getComputedStyle(ripple).getPropertyValue('opacity');\n            var rect = container.getBoundingClientRect();\n            var left = 0;\n            var top_1 = 0;\n            if ((/mouse|pointer|touch/).test(e.type)) {\n                left = e.clientX - rect.left;\n                top_1 = e.clientY - rect.top;\n            }\n            else {\n                left = rect.width / 2;\n                top_1 = rect.height / 2;\n            }\n            // coordinates of the farthest corner\n            var xMax = left < rect.width / 2 ? rect.width : 0;\n            var yMax = top_1 < rect.height / 2 ? rect.height : 0;\n            // distance to the farthest corner\n            var dx = left - xMax;\n            var dy = top_1 - yMax;\n            // blob size is twice the blob radius\n            var size = 2 * Math.sqrt(dx * dx + dy * dy);\n            var duration = 500;\n            blob.style.width = blob.style.height = size + \"px\";\n            // force reflow for Safari 11 to align ripple blob\n            if (blob.offsetWidth < 0) {\n                throw new Error(\"Inconceivable!\");\n            }\n            blob.style.cssText = \"\\n        width: \" + size + \"px;\\n        height: \" + size + \"px;\\n        transform: translate(-50%, -50%) scale(1);\\n        left: \" + left + \"px;\\n        top: \" + top_1 + \"px;\\n    \";\n            setTimeout(function () { return finishAnimation(state_1); }, duration);\n        }\n        else {\n            e.target.classList.remove('k-ripple-focus');\n            if (e.type !== 'animationend') {\n                e.target.classList.add('k-ripple-focus');\n            }\n        }\n    }; };\n    var finishAnimation = function (state) {\n        state.animated = true;\n        deactivate(state);\n    };\n    var release = function (state) {\n        state.released = true;\n        deactivate(state);\n    };\n    var deactivate = function (state) {\n        // deactivation happens when both\n        // - the activation event has been released (release)\n        // - the ripple has finished animating (finishAnimation)\n        if (!state.released || !state.animated) {\n            return;\n        }\n        var blob = state.blob, ripple = state.ripple, container = state.container;\n        if (container) {\n            once(container, 'blur', function () { return container.classList.remove(\"k-ripple-target\"); });\n        }\n        if (blob) {\n            once(blob, 'transitionend', function () {\n                if (ripple && ripple.parentNode) {\n                    ripple.parentNode.removeChild(ripple);\n                }\n            });\n            blob.style.transition = 'opacity 200ms linear';\n            blob.style.opacity = '0';\n        }\n    };\n    /**\n     * @hidden\n     */\n    var register = function (root, elements) {\n        var flatten = function (arr) { return [].concat.apply([], arr); };\n        var handlers = flatten(elements.map(function (item) {\n            var defaultOptions = {\n                events: ['mousedown', 'touchdown'],\n                global: false\n            };\n            var selector = item.selector, _a = item.options, options = _a === void 0 ? defaultOptions : _a;\n            var activator = activate(selector, options);\n            var events = options.events || defaultOptions.events;\n            var container = options.global ? document.body : root;\n            events.forEach(function (evt) { return container.addEventListener(evt, activator, false); });\n            return { events: events, options: options, activator: activator };\n        }));\n        return function () {\n            if (!root) {\n                return;\n            }\n            var removeListener = function (_a) {\n                var events = _a.events, options = _a.options, activator = _a.activator;\n                var container = options.global ? document.body : root;\n                events.forEach(function (evt) { return container.removeEventListener(evt, activator, false); });\n            };\n            handlers.forEach(removeListener);\n            root = null;\n        };\n    };\n\n    exports.__meta__ = __meta__;\n    exports.r = register;\n\n}));\n"]}