{"version":3,"sources":["raw-js/kendo.common.cmn.chunk.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","kendo","_globals","CommonCmnChunk","this","isWindowAvailable","window","agentRxs","wp","fire","android","iphone","ipad","meego","webos","blackberry","playbook","windows","tizen","sailfish","ffos","osRxs","ios","flat","desktopBrowserRxs","edge","webkit","safari","opera","msie","mozilla","mobileBrowserRxs","omini","omobile","firefox","mobilesafari","ie","chrome","testRx","agent","rxs","dflt","rx","hasOwnProperty","test","undefined","detectMobileOS","ua","minorVersion","match","navigator","os","device","browser","name","majorVersion","replace","substr","flatVersion","Array","length","join","cordova","PhoneGap","appMode","standalone","location","protocol","detectDesktopBrowser","browserInfo","toLowerCase","split","version","parseInt","document","documentMode","userAgent","MSPointerEvent","PointerEvent","getterCache","obj","reComment","reDeclaration","reDoubleQuoted","reSingleQuoted","__meta__","id","category","description","depends","hidden","chunk","a","b","d","p","styleString","property","value","styleObject","input","exec","trim"],"mappings":"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","file":"kendo.common.cmn.chunk.min.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.CommonCmnChunk = {})));\n})(this, (function (exports) {\n  const __meta__ = {\n      id: \"common.cmn.chunk\",\n      name: \"CommonCmnChunk\",\n      category: \"web\",\n      description: \"A reusable outputed chunk of code\",\n      depends: [],\n      hidden: true,\n      chunk: true\n  };\n\n  /**\n   * @hidden\n   */\n  var isWindowAvailable = function () {\n      return typeof window !== 'undefined';\n  };\n\n  /* tslint:disable:object-literal-sort-keys max-line-length */\n  var agentRxs = {\n      wp: /(Windows Phone(?: OS)?)\\s(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      fire: /(Silk)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      android: /(Android|Android.*(?:Opera|Firefox).*?\\/)\\s*(\\d+)(\\.(\\d+(\\.\\d+)?))?/,\n      iphone: /(iPhone|iPod).*OS\\s+(\\d+)[\\._]([\\d\\._]+)/,\n      ipad: /(iPad).*OS\\s+(\\d+)[\\._]([\\d_]+)/,\n      meego: /(MeeGo).+NokiaBrowser\\/(\\d+)\\.([\\d\\._]+)/,\n      webos: /(webOS)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      blackberry: /(BlackBerry|BB10).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      playbook: /(PlayBook).*?Tablet\\s*OS\\s*(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      windows: /(MSIE)\\s+(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      tizen: /(tizen).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/i,\n      sailfish: /(sailfish).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*firefox/i,\n      ffos: /(Mobile).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*Firefox/\n  };\n  var osRxs = {\n      ios: /^i(phone|pad|pod)$/i,\n      android: /^android|fire$/i,\n      blackberry: /^blackberry|playbook/i,\n      windows: /windows/,\n      wp: /wp/,\n      flat: /sailfish|ffos|tizen/i,\n      meego: /meego/\n  };\n  var desktopBrowserRxs = {\n      edge: /(edge)[ \\/]([\\w.]+)/i,\n      webkit: /(chrome)[ \\/]([\\w.]+)/i,\n      safari: /(webkit)[ \\/]([\\w.]+)/i,\n      opera: /(opera)(?:.*version|)[ \\/]([\\w.]+)/i,\n      msie: /(msie\\s|trident.*? rv:)([\\w.]+)/i,\n      mozilla: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n  };\n  var mobileBrowserRxs = {\n      omini: /Opera\\sMini/i,\n      omobile: /Opera\\sMobi/i,\n      firefox: /Firefox|Fennec/i,\n      mobilesafari: /version\\/.*safari/i,\n      ie: /MSIE|Windows\\sPhone/i,\n      chrome: /chrome|crios/i,\n      webkit: /webkit/i\n  };\n  var testRx = function (agent, rxs, dflt) {\n      for (var rx in rxs) {\n          if (rxs.hasOwnProperty(rx) && rxs[rx].test(agent)) {\n              return rx;\n          }\n      }\n      return dflt !== undefined ? dflt : agent;\n  };\n  /**\n   * A function that detects the mobile browser based on the given UserAgent.\n   *\n   * @param ua - The user agent string.\n   * @returns - A browser info object containing the browser type and version.\n   *\n   * @example\n   * ```ts-no-run\n   * const userAgent = 'Mozilla/5.0 (Linux; Android 8.0.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/1.3 Chrome/61.0.3163.81 Mobile Safari/537.36';\n   * detectMobileOS(userAgent); // { android: true };\n   * ```\n   */\n  var detectMobileOS = function (ua) {\n      var minorVersion;\n      var match = [];\n      for (var agent in agentRxs) {\n          if (agentRxs.hasOwnProperty(agent)) {\n              match = ua.match(agentRxs[agent]);\n              if (!match) {\n                  continue;\n              }\n              if (agent === 'windows' && 'plugins' in window.navigator) {\n                  return null;\n              } // Break if not Metro/Mobile Windows\n              var os = {};\n              os.device = agent;\n              os.browser = testRx(ua, mobileBrowserRxs, 'default');\n              os.name = testRx(agent, osRxs);\n              os[os.name] = true;\n              os.majorVersion = match[2];\n              os.minorVersion = match[3] ? match[3].replace('_', '.') : '.0';\n              minorVersion = os.minorVersion.replace('.', '').substr(0, 2);\n              os.flatVersion = os.majorVersion + minorVersion +\n                  (new Array(3 - (minorVersion.length < 3 ? minorVersion.length : 2)).join('0'));\n              os.cordova = typeof window.PhoneGap !== undefined\n                  || typeof window.cordova !== undefined; // Use file protocol to detect appModes.\n              os.appMode = window.navigator.standalone\n                  || (/file|local|wmapp/).test(window.location.protocol)\n                  || os.cordova; // Use file protocol to detect appModes.\n              return os;\n          }\n      }\n      return null;\n  };\n  /**\n   * A function that detects the desktop browser based on the given UserAgent.\n   *\n   * @param ua - The user agent string.\n   * @returns - A browser info object containing the browser type and version.\n   *\n   * @example\n   * ```ts-no-run\n   * const userAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.151 Safari/535.19';\n   * detectDesktopBrowser(userAgent); // { chrome: true, webkit: true };\n   * ```\n   */\n  var detectDesktopBrowser = function (ua) {\n      var browserInfo = null;\n      var match = [];\n      for (var agent in desktopBrowserRxs) {\n          if (desktopBrowserRxs.hasOwnProperty(agent)) {\n              match = ua.match(desktopBrowserRxs[agent]);\n              if (match) {\n                  browserInfo = {};\n                  browserInfo[agent] = true;\n                  browserInfo[match[1].toLowerCase().split(' ')[0].split('/')[0]] = true;\n                  browserInfo.version = parseInt(document.documentMode || match[2], 10);\n                  break;\n              }\n          }\n      }\n      return browserInfo;\n  };\n  var userAgent = isWindowAvailable() && window.navigator ? window.navigator.userAgent : null;\n  /**\n   * A constant holding the desktop browser info. The variable persists the result of the detectDesktopBrowser(window.navigator.userAgent) call.\n   * If no desktop browser is detected, the constant will be `null`.\n   */\n  var browser = userAgent ? detectDesktopBrowser(userAgent) : null;\n  /**\n   * A constant holding the mobile OS info. The variable persists the result of the detectMobileOS(window.navigator.userAgent) call.\n   * If no mobile OS is detected, the constant will be `null`.\n   */\n  var mobileOS = userAgent ? detectMobileOS(userAgent) : null;\n  /**\n   * A constant reporting the browser `touch` events support.\n   */\n  var touch = isWindowAvailable() && 'ontouchstart' in window;\n  /**\n   * @hidden\n   * A constant reporting the browser `msPointers` events support.\n   */\n  var msPointers = browser && !browser.chrome && window.MSPointerEvent;\n  /**\n   * A constant reporting the browser `pointers` events support.\n   */\n  var pointers = browser && !browser.chrome && window.PointerEvent;\n  /**\n   * A constant reporting whether the browser is touch enabled.\n   */\n  var touchEnabled = mobileOS && (touch || msPointers || pointers);\n\n  var FIELD_REGEX = /\\[(?:(\\d+)|['\"](.*?)['\"])\\]|((?:(?!\\[.*?\\]|\\.).)+)/g;\n  /**\n   * @hidden\n   */\n  function fieldList(field) {\n      var fields = [];\n      field.replace(FIELD_REGEX, function (_match, index, indexAccessor, fieldName) {\n          fields.push(index !== undefined ? index : (indexAccessor || fieldName));\n      });\n      return fields;\n  }\n\n  var getterCache = {};\n  // tslint:disable-next-line:no-string-literal\n  getterCache['undefined'] = function (obj) { return obj; };\n  /**\n   * @hidden\n   */\n  function getter(field) {\n      if (getterCache[field]) {\n          return getterCache[field];\n      }\n      var fields = fieldList(field);\n      getterCache[field] = function (obj) {\n          var result = obj;\n          for (var idx = 0; idx < fields.length && result; idx++) {\n              result = result[fields[idx]];\n          }\n          return result;\n      };\n      return getterCache[field];\n  }\n\n  var setterCache = {};\n  // tslint:disable-next-line:no-string-literal\n  setterCache['undefined'] = function (obj) { return obj; };\n  var defaultValue = function (nextField, options) {\n      return options && options.arrays && !isNaN(Number(nextField)) ? [] : {};\n  };\n  /**\n   * @hidden\n   */\n  function setter(field) {\n      if (setterCache[field]) {\n          return setterCache[field];\n      }\n      var fields = fieldList(field);\n      setterCache[field] = function (obj, value, options) {\n          var root = obj;\n          var depth = fields.length - 1;\n          for (var idx = 0; idx < depth && root; idx++) {\n              root = root[fields[idx]] = root[fields[idx]] || defaultValue(fields[idx + 1], options);\n          }\n          root[fields[depth]] = value;\n      };\n      return setterCache[field];\n  }\n\n  var reComment = /\\/\\*[\\s\\S]*?\\*\\//g;\n  /*\n  ([^\\s:;]+?)\\s*:\\s*         # Property name and colon\n  (\n    (?:\n      (?:                    # Begin alternation\n        url\\(                # Match 'url('\n          \\s*\n          (?:\n            (?:[^\"')\\\\]|\\\\.)*  # Content inside url(), excluding quotes and closing parenthesis\n            |\n            \"(?:[^\"\\\\]|\\\\.)*\"  # Double-quoted strings, handling escaped characters\n            |\n            '(?:[^'\\\\]|\\\\.)*'  # Single-quoted strings, handling escaped characters\n          )\n          \\s*\n        \\)\n        |\n        \"(?:[^\"\\\\]|\\\\.)*\"     # Double-quoted strings, handling escaped characters\n        |\n        '(?:[^'\\\\]|\\\\.)*'     # Single-quoted strings, handling escaped characters\n        |\n        [^;\"']                # Any character except ';', double or single quotes\n      )*?                     # Repeat zero or more times, non-greedy\n      \\s*\n    )\n  )\n  (?=;|$)                     # Lookahead for ';' or end of string\n  */\n  var reDeclaration = /([^\\s:;]+?)\\s*:\\s*((?:(?:url\\(\\s*(?:(?:[^\"')\\\\]|\\\\.)*|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')\\s*\\)|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|[^;\"'])*?)\\s*)(?=;|$)/gi;\n  var reDoubleQuoted = /&quot;|&#34;|&#x22;/gi;\n  var reSingleQuoted = /&apos;|&#39;|&#x27;/gi;\n  var doubleQuote = '\"';\n  var singleQuote = \"'\";\n  var empty = '';\n  function replaceQuoteEntities(str) {\n      return str.replace(reDoubleQuoted, doubleQuote)\n          .replace(reSingleQuoted, singleQuote);\n  }\n  /**\n   * Parse inline styles string into object.\n   *\n   * @param styleString - inline styles string\n   * @returns object with styles\n   */\n  function parseInlineStyles(styleString) {\n      var styleObject = {};\n      var input = replaceQuoteEntities((styleString || empty).replace(reComment, empty));\n      var match = reDeclaration.exec(input), property, value;\n      while (match !== null) {\n          property = match[1].trim();\n          value = match[2].trim();\n          styleObject[property] = value;\n          match = reDeclaration.exec(input);\n      }\n      return styleObject;\n  }\n\n  exports.__meta__ = __meta__;\n  exports.a = detectMobileOS;\n  exports.b = browser;\n  exports.d = detectDesktopBrowser;\n  exports.p = parseInlineStyles;\n\n}));\n"]}