{"version":3,"sources":["raw-js/kendo.multicolumncombobox.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Multicolumncombobox","this","window","ui","ComboBox","Select","percentageUnitsRegex","MultiColumnComboBox","extend","init","element","options","fn","call","list","parent","addClass","_allColumnsWidthsAreSet","width","_calculateDropDownWidth","dropDownWidth","name","ns","columns","filterFields","setOptions","_popup","popup","removeClass","length","i","currentWidth","isNaN","parseInt","test","totalWidth","support","scrollbar","_wrapper","wrapper","plugin","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","jQuery","kendo$1","__meta__","id","category","description","depends","features","default","Object","defineProperty","value"],"mappings":";;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,OAAAF,EAAAC,QAAAE,QAAA,sBACA,mBAAAC,QAAAA,OAAAC,IAAAD,OAAA,CAAA,UAAA,kBAAAJ,GACAA,IAAAD,EAAA,oBAAAO,WAAAA,WAAAP,GAAAQ,MAAAC,MAAAT,EAAAS,OAAA,CAAA,EAAAT,EAAAS,MAAAC,SAAAV,EAAAS,MAAAC,UAAA,CAAA,EAAAV,EAAAS,MAAAC,SAAAC,oBAAA,CAAA,GACA,CAJA,CAIAC,MAAA,SAAAV,IAoBA,WACA,IAAAO,EAAAI,OAAAJ,MACAK,EAAAL,EAAAK,GACAC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,OACAC,EAAA,kBAIAC,EAAAH,EAAAI,OAAA,CACAC,KAAA,SAAAC,EAAAC,GACAP,EAAAQ,GAAAH,KAAAI,KAAAZ,KAAAS,EAAAC,GACAV,KAAAa,KAAAC,SAAAC,SALA,wBAOAf,KAAAgB,wBAAAhB,KAAAU,SACAV,KAAAa,KAAAC,SAAAG,MAAAjB,KAAAkB,wBAAAlB,KAAAU,UACAV,KAAAU,QAAAS,eACAnB,KAAAa,KAAAC,SAAAG,MAAAjB,KAAAU,QAAAS,cAEA,EAEAT,QAAA,CACAU,KAAA,sBACAC,GAAA,4BACAC,QAAA,GACAH,cAAA,KACAI,aAAA,IAGAC,WAAA,SAAAd,GACAP,EAAAQ,GAAAa,WAAAZ,KAAAZ,KAAAU,GACAV,KAAAgB,wBAAAN,GACAV,KAAAa,KAAAC,SAAAG,MAAAjB,KAAAkB,wBAAAR,IACAV,KAAAU,QAAAS,eACAnB,KAAAa,KAAAC,SAAAG,MAAAjB,KAAAU,QAAAS,cAEA,EAEAM,OAAA,WACArB,EAAAO,GAAAc,OAAAb,KAAAZ,MACAA,KAAA0B,MAAAjB,QAAAkB,YAAA,mBACA,EAEAX,wBAAA,SAAAN,GACA,IAAAY,EAAAZ,EAAAY,QAEA,IAAAA,IAAAA,EAAAM,OACA,OAAA,EAGA,IAAA,IAAAC,EAAA,EAAAA,EAAAP,EAAAM,OAAAC,IAAA,CACA,IAAAC,EAAAR,EAAAO,GAAAZ,MACA,IAAAa,GAAAC,MAAAC,SAAAF,EAAA,MAAAzB,EAAA4B,KAAAH,GACA,OAAA,CAEA,CAEA,OAAA,CACA,EAEAZ,wBAAA,SAAAR,GAIA,IAHA,IAAAY,EAAAZ,EAAAY,QACAY,EAAArC,EAAAsC,QAAAC,YAEAP,EAAA,EAAAA,EAAAP,EAAAM,OAAAC,IAAA,CACA,IAAAC,EAAAR,EAAAO,GAAAZ,MACAiB,GAAAF,SAAAF,EAAA,GACA,CAEA,OAAAI,CACA,EAEAG,SAAA,WACAlC,EAAAQ,GAAA0B,SAAAzB,KAAAZ,MACAA,KAAAsC,QAAAvB,SApEA,iBAqEA,IAGAb,EAAAqC,OAAAjC,GAEAT,EAAA2C,cAAAC,eAAA,sBAAA,YAEA5C,EAAA2C,cAAAE,eAAA,sBAAA,CAAA,CACAC,KAAA,UACAC,OAAA/C,EAAA2C,cAAAK,cAAAC,OAAA,CAAA,CAAA,OAAA,YAEA,CAtFA,CAsFA7C,OAAAJ,MAAAkD,QACA,IAAAC,EAAAnD,MAEAP,EAAA2D,SA5GA,CACAC,GAAA,sBACA9B,KAAA,sBACA+B,SAAA,MACAC,YAAA,wJACAC,QAAA,CAAA,YACAC,SAAA,CAAA,CACAJ,GAAA,kBACA9B,KAAA,kBACAgC,YAAA,iDACAC,QAAA,CAAA,oBACA,CACAH,GAAA,iBACA9B,KAAA,cACAgC,YAAA,6BACAC,QAAA,CAAA,kBA8FA/D,EAAAiE,QAAAP,EAEAQ,OAAAC,eAAAnE,EAAA,aAAA,CAAAoE,OAAA,GAEA","file":"kendo.multicolumncombobox.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.combobox.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.combobox'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Multicolumncombobox = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"multicolumncombobox\",\n        name: \"MultiColumnComboBox\",\n        category: \"web\",\n        description: \"The MultiColumnComboBox widget allows the selection from pre-defined values or entering a new value where the list popup is rendered in table layout.\",\n        depends: [ \"combobox\" ],\n        features: [ {\n            id: \"mobile-scroller\",\n            name: \"Mobile scroller\",\n            description: \"Support for kinetic scrolling in mobile device\",\n            depends: [ \"mobile.scroller\" ]\n        }, {\n            id: \"virtualization\",\n            name: \"VirtualList\",\n            description: \"Support for virtualization\",\n            depends: [ \"virtuallist\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            ComboBox = ui.ComboBox,\n            Select = ui.Select,\n            percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n            MCCOMBOBOX = \"k-dropdowngrid\",\n            POPUPCLASS = \"k-dropdowngrid-popup\";\n\n        var MultiColumnComboBox = ComboBox.extend({\n            init: function(element, options) {\n                ComboBox.fn.init.call(this, element, options);\n                this.list.parent().addClass(POPUPCLASS);\n\n                if (this._allColumnsWidthsAreSet(this.options)) {\n                    this.list.parent().width(this._calculateDropDownWidth(this.options));\n                } else if (this.options.dropDownWidth) {\n                    this.list.parent().width(this.options.dropDownWidth);\n                }\n            },\n\n            options: {\n                name: \"MultiColumnComboBox\",\n                ns: \".kendoMultiColumnComboBox\",\n                columns: [],\n                dropDownWidth: null,\n                filterFields: []\n            },\n\n            setOptions: function(options) {\n                ComboBox.fn.setOptions.call(this, options);\n                if (this._allColumnsWidthsAreSet(options)) {\n                    this.list.parent().width(this._calculateDropDownWidth(options));\n                } else if (this.options.dropDownWidth) {\n                    this.list.parent().width(this.options.dropDownWidth);\n                }\n            },\n\n            _popup: function() {\n                Select.fn._popup.call(this);\n                this.popup.element.removeClass(\"k-list-container\");\n            },\n\n            _allColumnsWidthsAreSet: function(options) {\n                var columns = options.columns;\n\n                if (!columns || !columns.length) {\n                    return false;\n                }\n\n                for (var i = 0; i < columns.length; i++) {\n                    var currentWidth = columns[i].width;\n                    if (!currentWidth || isNaN(parseInt(currentWidth, 10)) || percentageUnitsRegex.test(currentWidth)) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n\n            _calculateDropDownWidth: function(options) {\n                var columns = options.columns;\n                var totalWidth = kendo.support.scrollbar();\n\n                for (var i = 0; i < columns.length; i++) {\n                    var currentWidth = columns[i].width;\n                    totalWidth = totalWidth + parseInt(currentWidth, 10);\n                }\n\n                return totalWidth;\n            },\n\n            _wrapper: function() {\n                ComboBox.fn._wrapper.call(this);\n                this.wrapper.addClass(MCCOMBOBOX);\n            }\n        });\n\n        ui.plugin(MultiColumnComboBox);\n\n        kendo.cssProperties.registerPrefix(\"MultiColumnComboBox\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"MultiColumnComboBox\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}