{"version":3,"sources":["raw-js/kendo.timepicker.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Timepicker","this","$","undefined$1","window","keys","html","parse","parseDate","encode","htmlEncode","activeElement","_activeElement","extractFormat","_extractFormat","support","browser","mediaQuery","ui","Widget","OPEN","CLOSE","CHANGE","ns","CLICK","DISABLED","READONLY","LI","FOCUSED","HOVER","HOVEREVENTS","MOUSEDOWN","MS_PER_MINUTE","MS_PER_DAY","SELECTED","STATEDISABLED","ARIA_SELECTED","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_DISABLED","ARIA_READONLY","ARIA_ACTIVEDESCENDANT","ID","isArray","Array","extend","DATE","Date","TODAY","MODERN_RENDERING_TEMPLATE","mainSize","messages","buttonSize","renderButton","now","fillMode","size","NEW_RENDERING_FOOTER","set","themeColor","cancel","getFullYear","getMonth","getDate","TimeView","options","that","focusTime","id","_dates","bigScreenMQL","smallScreenMQL","adaptiveMode","onChange","popup","isFunction","fullscreen","mediaQueryList","matches","timeView","list","addTranslate","_updateRanges","_createList","_focusTime","getHours","getMinutes","getSeconds","_timeViewID","_optionID","ul","attr","_heightHandler","_height","bind","_popup","getMilliseconds","date","isInRange","value","min","max","msValue","msMin","msMax","prototype","scroll","_createScrollList","_createClassicRenderingList","templateOptions","getValidCssClass","popupContent","template","on","preventDefault","find","_nowClickHandler","_cancelClickHandler","_setClickHandler","_mouseOverHandler","_scrollerKeyDownHandler","e","key","keyCode","currentTarget","lists","length","index","isRtl","wrapper","itemHeight","getItemHeight","eq","container","RIGHT","LEFT","_focusList","UP","scrollTop","DOWN","ENTER","ESC","removeClass","addClass","trigger","_scrollTop","listParent","css","overflow","kineticScrollNeeded","_click","append","data","current","candidate","active","_current","removeAttribute","_updateTitle","toString","_value","format","culture","applyValue","designator","is12hourFormat","includes","toLowerCase","hours","minutes","seconds","indexAttr","hoursList","minutessList","secondsList","designatorList","_internalScroll","_scrollListToPosition","item","pad","close","destroy","off","open","popupHovered","firstChild","_hovered","setTimeout","dataBind","dates","idx","_html","refresh","interval","today","midnight","noon","offset","getTimezoneOffset","ignoreDST","parsedValue","mergeDateAndTime","msLastTime","setMinutes","msInterval","start","useValueToRender","startDate","_createListContent","splitDateFormat","getDatesInRange","msStart","forEach","_showAllHiddenItems","items","i","show","_updateListBottomOffset","bottomOffset","outerHeight","height","_updateHoursRange","useMax","useMin","minHours","_minHours","maxHours","_maxHours","selectedDesignator","_findSelectedValue","each","_","_validateMin","_validateMax","hide","_updateMinutesRange","minutesList","minMinutes","_minMinutes","maxMinutes","_maxMinutes","selectedHour","_updateSecondsRange","minSeconds","_minSeconds","maxSeconds","selectedMinutes","_updateDesignatorRange","specifiedRange","_currentlySelected","endTime","startTime","validateDate","_maxSeconds","listHeight","translate","transform","_itemClickHandler","_listScrollHandler","change","_scrollingTimeout","clearTimeout","_updateCurrentlySelected","selectedSeconds","is","setHours","setSeconds","firstOccurence","Math","round","originalEvent","result","push","setTime","getTime","maxSet","_ignoreMaxSet","parts","part","values","type","_literalTemplate","_getValues","_itemTemplate","title","shouldPad","end","step","currentStep","isPlainObject","hour12","isDayTimePattern","pattern","innerHTML","unbind","one","select","scrollIntoViewIfNeeded","element","centerIfNeeded","makeRange","coverRange","inner","outer","makePoint","x","y","dX","dY","absolute","elem","pt","offsetLeft","offsetTop","offsetParent","origin","target","extent","offsetWidth","offsetHeight","parentNode","HTMLElement","clientLeft","clientTop","scrollLeft","clientWidth","clientHeight","li","selection","text","grep","childNodes","node","textContent","innerText","_distinctSelection","currentValue","selectionIndex","inArray","children","setOptions","old","toggle","visible","filter","d","_inRange","isDefaultPrevented","dateSeconds","parent","closest","elements","add","scrollHeight","_parse","parseFormats","_adjustListWidth","computedStyle","computedWidth","width","style","anchor","outerWidth","_outerWidth","getComputedStyle","parseFloat","mozilla","msie","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","fontFamily","omitPopup","appendTo","timeDiv","Popup","animation","activate","document","body","ActionSheet","adaptive","focusOnActivate","subtitle","closeButton","move","down","isInput","isModernType","componentType","isPopupOpened","preventInputValueChange","altKey","nextSibling","previousSibling","lastChild","TAB","TimePicker","init","fn","call","inputMode","_specifiedRange","normalize","_initialOptions","_wrapper","_createTimeViewProxy","_update","val","_createTimeView","_icon","_reset","setAttribute","role","autocomplete","parents","enable","readonly","_createDateInput","_old","_oldText","_applyCssClasses","label","_label","removeAttr","notify","name","autoAdjust","dateInput","hour","minute","second","millisecond","rounded","autoCorrectParts","events","componentTypes","classic","modern","isComponentTypeChanged","_arrow","remove","_editable","_inputLabel","_unwrapFloating","_dateInput","DateInput","toggleDayPeriod","disable","arrow","_unbindInput","_toggleHover","_keydown","_blur","_bindInput","labelOptions","content","floatCheck","_hasDateInput","Label","widget","floatingLabel","_form","_resetHandler","_option","_typing","_change","touch","dateChanged","oldValue","valueUpdated","calendar","isEqualDate","textFormatted","_ariaLabel","next","icon","shape","insertAfter","stopImmediatePropagation","option","toggleClass","_toggleMaxSet","flag","wrap","cssText","className","formId","form","defaultValue","getCulture","calendars","standard","patterns","t","splice","time","subStr","returnValue","indexOf","s","String","getBoundingClientRect","cssProperties","registerPrefix","registerValues","prop","roundedValues","concat","plugin","jQuery","kendo$1","__meta__","category","description","depends","default","Object","defineProperty"],"mappings":"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","file":"kendo.timepicker.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.calendar.js'), require('kendo.popup.js'), require('kendo.dateinput.js'), require('kendo.html.button.js'), require('kendo.label.js'), require('kendo.actionsheet.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.calendar', 'kendo.popup', 'kendo.dateinput', 'kendo.html.button', 'kendo.label', 'kendo.actionsheet'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Timepicker = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"timepicker\",\n        name: \"TimePicker\",\n        category: \"web\",\n        description: \"The TimePicker widget allows the end user to select a value from a list of predefined values or to type a new value.\",\n        depends: [ \"calendar\", \"popup\", \"html.button\", \"label\", \"actionsheet\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            keys = kendo.keys,\n            html = kendo.html,\n            parse = kendo.parseDate,\n            encode = kendo.htmlEncode,\n            activeElement = kendo._activeElement,\n            extractFormat = kendo._extractFormat,\n            support = kendo.support,\n            browser = support.browser,\n            mediaQuery = kendo.mediaQuery,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CHANGE = \"change\",\n            ns = \".kendoTimePicker\",\n            CLICK = \"click\" + ns,\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            LI = \"li\",\n            SPAN = \"<span></span>\",\n            FOCUSED = \"k-focus\",\n            HOVER = \"k-hover\",\n            HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n            MOUSEDOWN = \"mousedown\" + ns,\n            DEFAULT_HEIGHT = 200,\n            MS_PER_MINUTE = 60000,\n            MS_PER_DAY = 86400000,\n            SELECTED = \"k-selected\",\n            STATEDISABLED = \"k-disabled\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_READONLY = \"aria-readonly\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            ID = \"id\",\n            isArray = Array.isArray,\n            extend = $.extend,\n            DATE = Date,\n            TODAY = new DATE(),\n            MODERN_RENDERING_TEMPLATE = ({ mainSize, messages, buttonSize }) =>\n            '<div>' +\n                `<div tabindex=\"0\" class=\"k-timeselector ${mainSize}\">` +\n                    '<div class=\"k-time-header\">' +\n                        '<span class=\"k-title\"></span>' +\n                        kendo.html.renderButton(`<button class=\"k-time-now\" title=\"Select now\" aria-label=\"Select now\">${encode(messages.now)}</button>`, {\n                            fillMode: \"flat\",\n                            size: buttonSize\n                        }) +\n                    '</div>' +\n                    '<div class=\"k-time-list-container\">' +\n                        '<span class=\"k-time-highlight\"></span>' +\n                    '</div>' +\n                '</div>' +\n                NEW_RENDERING_FOOTER(buttonSize, messages) +\n            '</div>',\n            NEW_RENDERING_FOOTER = (buttonSize, messages) => '<div class=\"k-time-footer k-actions k-actions-stretched k-actions-horizontal\">' +\n                kendo.html.renderButton(`<button class=\"k-time-accept\" title=\"Set time\" aria-label=\"Set time\">${encode(messages.set)}</button>`, {\n                    size: buttonSize,\n                    themeColor: \"primary\"\n                }) +\n                kendo.html.renderButton(`<button class=\"k-time-cancel\" title=\"Cancel changes\" aria-label=\"Cancel changes\">${encode(messages.cancel)}</button>`, {\n                    size: buttonSize\n                }) +\n            '</div>',\n            HIGHLIGHTCONTAINER = '<span class=\"k-time-highlight\"></span>';\n\n            TODAY = new Date(TODAY.getFullYear(), TODAY.getMonth(), TODAY.getDate(), 0, 0, 0);\n\n        var TimeView = function(options) {\n            var that = this,\n            focusTime = options.focusTime,\n            id = options.id;\n\n            that.options = options;\n            that._dates = [];\n\n            that.bigScreenMQL = mediaQuery(\"large\");\n            that.smallScreenMQL = mediaQuery(\"small\");\n            if (that.options.adaptiveMode == \"auto\") {\n                that.smallScreenMQL.onChange(function() {\n                    if (that.popup && kendo.isFunction(that.popup.fullscreen)) {\n                        that.popup.fullscreen(that.smallScreenMQL.mediaQueryList.matches);\n                        if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                            that.addTranslate();\n                            that._updateRanges();\n                        }\n                    }\n                });\n            }\n\n            that._createList(options.timeView && options.timeView.list === \"scroll\");\n            if (focusTime) {\n                that._focusTime = new DATE(TODAY.getFullYear(), TODAY.getMonth(), TODAY.getDate(), focusTime.getHours(), focusTime.getMinutes(), focusTime.getSeconds());\n            }\n\n            if (id) {\n                that._timeViewID = id + \"_timeview\";\n                that._optionID = id + \"_option_selected\";\n\n                that.ul.attr(ID, that._timeViewID);\n            }\n\n            that._heightHandler = that._height.bind(that);\n            that._popup();\n        };\n\n        TimeView.prototype = {\n            _createList: function(scroll) {\n                if (scroll) {\n                    this._createScrollList();\n                } else {\n                    this._createClassicRenderingList();\n                }\n            },\n            _createScrollList: function() {\n                var size = this.options.adaptiveMode != \"auto\" || this.bigScreenMQL.mediaQueryList.matches ? this.options.size || \"medium\" : \"large\";\n                var templateOptions = $.extend({}, this.options, {\n                    mainSize: kendo.getValidCssClass(\"k-timeselector-\", \"size\", size),\n                    buttonSize: size\n                });\n                this.popupContent = $(kendo.template(MODERN_RENDERING_TEMPLATE)(templateOptions))\n                .on(MOUSEDOWN, preventDefault);\n                this.list = this.popupContent.find(\".k-timeselector\");\n\n                this.ul = this.list.find(\".k-time-list-container\");\n                this.list.on(\"click\" + ns, \".k-time-header button.k-time-now\", this._nowClickHandler.bind(this));\n                this.popupContent.on(\"click\" + ns, \".k-time-footer button.k-time-cancel\", this._cancelClickHandler.bind(this));\n                this.popupContent.on(\"click\" + ns, \".k-time-footer button.k-time-accept\", this._setClickHandler.bind(this));\n                this.list.on(\"mouseover\" + ns, \".k-time-list-wrapper\", this._mouseOverHandler.bind(this));\n                this.list.on(\"keydown\" + ns, this._scrollerKeyDownHandler.bind(this));\n            },\n\n            _scrollerKeyDownHandler: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    list = $(e.currentTarget).find(\".k-time-list-wrapper.k-focus\"),\n                    lists = that.list.find(\".k-time-list-wrapper\"),\n                    length = lists.length,\n                    index = lists.index(list),\n                    isRtl = kendo.support.isRtl(that.wrapper),\n                    itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0)),\n                    container = list.find(\".k-time-container.k-content.k-scrollable\");\n\n                if (!list.length) {\n                    return;\n                }\n\n                if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                    if (index + 1 < length) {\n                        that._focusList(lists.eq(index + 1));\n                    }\n\n                } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                    if (index - 1 >= 0) {\n                        that._focusList(lists.eq(index - 1));\n                    }\n                } else if (key == keys.UP) {\n                    container.scrollTop(container.scrollTop() - itemHeight);\n                    e.preventDefault();\n                } else if (key == keys.DOWN) {\n                    container.scrollTop(container.scrollTop() + itemHeight);\n                    e.preventDefault();\n                } else if (key === keys.ENTER) {\n                    that._setClickHandler(e);\n                } else if (key === keys.ESC) {\n                    that._cancelClickHandler(e);\n                }\n            },\n\n            _mouseOverHandler: function(e) {\n                this._focusList($(e.currentTarget));\n            },\n\n            _focusList: function(list) {\n                this.list.find(\".k-time-list-wrapper\").removeClass(FOCUSED);\n                list.addClass(FOCUSED);\n                this.list.trigger(\"focus\");\n                this._scrollTop = list.find('.k-scrollable').scrollTop();\n            },\n            _createClassicRenderingList: function() {\n                var that = this;\n                var listParent = $('<div class=\"k-list ' + kendo.getValidCssClass(\"k-list-\", \"size\", that.options.size) + '\"><div class=\"k-list-content\"><ul tabindex=\"-1\" role=\"listbox\" aria-hidden=\"true\" unselectable=\"on\" class=\"k-list-ul\"/></div></div>');\n\n                that.ul = listParent.find(\"ul\")\n                    .css({\n                        overflow: support.kineticScrollNeeded ? \"\" : \"auto\"\n                    })\n                    .on(CLICK, LI, that._click.bind(that))\n                    .on(\"mouseenter\" + ns, LI, function() {\n                        $(this).addClass(HOVER);\n                    })\n                    .on(\"mouseleave\" + ns, LI, function() {\n                        $(this).removeClass(HOVER);\n                    });\n\n                that.list = $(\"<div class='k-list-container k-list-scroller' unselectable='on'/>\")\n                    .append(listParent)\n                    .on(MOUSEDOWN, preventDefault);\n\n                that.template = (data) => `<li tabindex=\"-1\" role=\"option\" class=\"k-list-item\" unselectable=\"on\"><span class=\"k-list-item-text\">${data}</span></li>`;\n\n            },\n            current: function(candidate) {\n                var that = this,\n                    active = that.options.active;\n\n                if (candidate !== undefined$1) {\n                    if (that._current) {\n                        that._current\n                            .removeClass(SELECTED);\n                            if (that._current && that._current.length) {\n                                that._current[0].removeAttribute(ID);\n                                that._current[0].removeAttribute(ARIA_SELECTED);\n                            }\n                    }\n\n                    if (candidate) {\n                        candidate = $(candidate).addClass(SELECTED)\n                                                .attr(ID, that._optionID)\n                                                .attr(ARIA_SELECTED, true);\n\n                        that.scroll(candidate[0]);\n                    }\n\n                    that._current = candidate;\n\n                    if (active) {\n                        active(candidate);\n                    }\n                } else {\n                    return that._current;\n                }\n            },\n\n            _updateTitle: function() {\n                this.list.find(\".k-time-header > .k-title\").html(kendo.toString(this._value, this.options.format, this.options.culture));\n            },\n\n            applyValue: function(value) {\n                if (!value) {\n                    return;\n                }\n\n                var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n                var hours = value.getHours();\n                var minutes = value.getMinutes();\n                var seconds = value.getSeconds();\n                var designator;\n                var indexAttr = kendo.attr('index');\n                var hoursList = this.ul.find('[' + indexAttr + '=\"1\"]');\n                var minutessList = this.ul.find('[' + indexAttr + '=\"2\"]');\n                var secondsList = this.ul.find('[' + indexAttr + '=\"3\"]');\n                var designatorList = this.ul.find('[' + indexAttr + '=\"4\"]');\n\n                if (is12hourFormat) {\n                    if (hours >= 12) {\n                        designator = \"PM\";\n                        if (hours > 12) {\n                            hours -= 12;\n                        }\n                    } else {\n                        designator = \"AM\";\n                        if (hours === 0) {\n                            hours = 12;\n                        }\n                    }\n                }\n\n                this._internalScroll = true;\n                if (hoursList.length) {\n                    this._scrollListToPosition(hoursList, hours);\n                }\n\n                if (minutessList.length) {\n                    this._scrollListToPosition(minutessList, minutes);\n                }\n\n                if (secondsList.length) {\n                    this._scrollListToPosition(secondsList, seconds);\n                }\n\n                if (designatorList.length) {\n                    this._scrollListToPosition(designatorList, designator);\n                }\n                this._internalScroll = false;\n            },\n\n            _scrollListToPosition: function(list, value) {\n                var item = list.find('.k-item[data-value=\"' + pad(value) + '\"]');\n                var itemHeight = getItemHeight(item);\n\n                list.scrollTop(list.find(\".k-item:visible\").index(item) * itemHeight);\n            },\n\n            close: function() {\n                if (this.popup) {\n                    this.popup.close();\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.ul.off(ns);\n                that.list.off(ns);\n                if (that.popupContent) {\n                    that.popupContent.off(ns);\n                }\n                if (that.popup) {\n                    that.popup.destroy();\n                }\n\n                if (that.bigScreenMQL) {\n                    that.bigScreenMQL.destroy();\n                }\n\n                if (that.smallScreenMQL) {\n                    that.smallScreenMQL.destroy();\n                }\n            },\n\n            open: function() {\n                var that = this;\n                var popupHovered;\n\n                if (!that.ul[0].firstChild || (that.ul.find(\"li\").length < 1)) {\n                    that.bind();\n                }\n\n                if (that._focusTime) {\n                    that.value(that._focusTime);\n                }\n\n                // In some cases when the popup is opened resize is triggered which will cause it to close\n                // Setting the below flag will prevent this from happening\n                // Reference: https://github.com/telerik/kendo/pull/7553\n                popupHovered = that.popup._hovered;\n                that.popup._hovered = true;\n\n                that.popup.open();\n\n                setTimeout(function() {\n                    that.popup._hovered = popupHovered;\n                }, 1);\n\n                if (that._current) {\n                    that.scroll(that._current[0]);\n                }\n            },\n\n            dataBind: function(dates) {\n                var that = this,\n                    options = that.options,\n                    format = options.format,\n                    toString = kendo.toString,\n                    template = that.template,\n                    length = dates.length,\n                    idx = 0,\n                    date,\n                    html = \"\";\n\n                for (; idx < length; idx++) {\n                    date = dates[idx];\n\n                    if (isInRange(date, options.min, options.max)) {\n                        html += template(toString(date, format, options.culture));\n                    }\n                }\n\n                that._html(html);\n            },\n\n            refresh: function() {\n                var that = this,\n                    options = that.options,\n                    format = options.format,\n                    offset = dst(),\n                    ignoreDST = offset < 0,\n                    value = kendo.parseDate(that._value),\n                    parsedValue = value ? mergeDateAndTime(value, options.min) : mergeDateAndTime(new Date(), options.min),\n                    min = options.min,\n                    max = options.max,\n                    msMin = getMilliseconds(min),\n                    msMax = getMilliseconds(max),\n                    msLastTime = getMilliseconds(lastTimeOption(options.interval)),\n                    msInterval = options.interval * MS_PER_MINUTE,\n                    toString = kendo.toString,\n                    template = that.template,\n                    start = options.useValueToRender ? parsedValue : new Date(+options.min),\n                    startDate = new DATE(start),\n                    msStart,\n                    length,\n                    html = \"\";\n\n                if (ignoreDST) {\n                    length = (MS_PER_DAY + (offset * MS_PER_MINUTE)) / msInterval;\n                } else {\n                    length = MS_PER_DAY / msInterval;\n                }\n\n                if (msMin != msMax || msLastTime === msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n\n                    length = ((msMax - msMin) / msInterval) + 1;\n                }\n\n                if (options.timeView && options.timeView.list === \"scroll\") {\n                    html = that._createListContent(kendo.date.splitDateFormat(format), options.interval);\n                } else {\n                    that.getDatesInRange(msStart, msMax, startDate, max, msInterval, start).forEach(function(date) {\n                        html += template(toString(date, format, options.culture));\n                    });\n                }\n\n                that._html(html);\n            },\n\n            _showAllHiddenItems: function() {\n                var items = this.list.find('.k-time-container');\n                var length = items.length;\n                var item;\n\n                for (var i = 0; i < length; i++) {\n                    item = $(items[i]);\n                    item.find('.k-item:hidden').show();\n                    this._updateListBottomOffset(item);\n                }\n            },\n\n            _updateListBottomOffset: function(list) {\n                var itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0));\n                var listHeight = list.outerHeight();\n                var bottomOffset = listHeight - itemHeight;\n                list.find(\".k-scrollable-placeholder\").css({\n                    height: list.find(\"ul\").height() + bottomOffset\n                });\n            },\n\n            _updateHoursRange: function() {\n                var that = this;\n                var indexAttr = kendo.attr('index');\n                var hoursList = this.ul.find('[' + indexAttr + '=\"1\"]');\n                var minHours = this._minHours;\n                var maxHours = this._maxHours;\n                var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n                var useMax;\n                var useMin;\n                var selectedDesignator = this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"4\"]'));\n\n                if (!hoursList.length) {\n                    return;\n                }\n\n                if (is12hourFormat && selectedDesignator) {\n\n                    if (selectedDesignator === \"AM\") {\n                        if (minHours < 12) {\n                            useMin = true;\n                        }\n\n                        if (maxHours < 12) {\n                            useMax = true;\n                        }\n                    } else if (selectedDesignator === \"PM\") {\n\n                        if (minHours > 12) {\n                            useMin = true;\n                            minHours -= 12;\n                        }\n\n                        if (maxHours > 12) {\n                            useMax = true;\n                            maxHours -= 12;\n                        }\n                    }\n\n                    hoursList.find(\".k-item\").each(function(_, item) {\n                        item = $(item);\n                        var value = +item.attr(\"data-value\");\n                        if ((that._validateMin && useMin && value < minHours) || (that._validateMax && useMax && value > maxHours)) {\n                            item.hide();\n                        } else {\n                            item.show();\n                        }\n                    });\n                } else {\n                    hoursList.find(\".k-item\").each(function(_, item) {\n                        item = $(item);\n                        var value = +item.attr(\"data-value\");\n                        if ((that._validateMin && value < minHours) ||\n                            (that._validateMax && value > maxHours)) {\n                            item.hide();\n                        } else {\n                            item.show();\n                        }\n                    });\n                }\n\n                this._updateListBottomOffset(hoursList);\n            },\n\n            _updateMinutesRange: function() {\n                var that = this;\n                var indexAttr = kendo.attr('index');\n                var minutesList = this.ul.find('[' + indexAttr + '=\"2\"]');\n                var minHours = this._minHours;\n                var maxHours = this._maxHours;\n                var minMinutes = this._minMinutes;\n                var maxMinutes = this._maxMinutes;\n                var selectedHour = +this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"1\"]'));\n                var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n                var selectedDesignator = this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"4\"]'));\n\n                if (is12hourFormat && selectedDesignator === \"PM\") {\n                    selectedHour += 12;\n                }\n\n                if (!minutesList.length) {\n                    return;\n                }\n\n                minutesList.find(\".k-item\").each(function(_, item) {\n                    item = $(item);\n                    var value = +item.attr(\"data-value\");\n                    if ((that._validateMin && value < minMinutes && (minHours && selectedHour) === minHours) ||\n                        (that._validateMax && value > maxMinutes && (maxHours && selectedHour) === maxHours)) {\n                        item.hide();\n                    } else {\n                        item.show();\n                    }\n                });\n\n                this._updateListBottomOffset(minutesList);\n            },\n\n            _updateSecondsRange: function() {\n                var that = this;\n                var indexAttr = kendo.attr('index');\n                var secondsList = this.ul.find('[' + indexAttr + '=\"3\"]');\n                var minSeconds = this._minSeconds;\n                var maxSeconds = this._minSeconds;\n                var minMinutes = this._minMinutes;\n                var maxMinutes = this._maxMinutes;\n                var selectedMinutes = +this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"2\"]'));\n\n                if (!secondsList.length) {\n                    return;\n                }\n\n                secondsList.find(\".k-item\").each(function(_, item) {\n                    item = $(item);\n                    var value = +item.attr(\"data-value\");\n                    if ((that._validateMin && value < minSeconds && minMinutes && selectedMinutes === minMinutes) ||\n                        (that._validateMax && value > maxSeconds && maxMinutes && selectedMinutes === maxMinutes)) {\n                        item.hide();\n                    } else {\n                        item.show();\n                    }\n                });\n\n                this._updateListBottomOffset(secondsList);\n            },\n\n            _updateDesignatorRange: function() {\n                var minHours = this._minHours;\n                var maxHours = this._maxHours;\n                var indexAttr = kendo.attr('index');\n                var designatorList = this.ul.find('[' + indexAttr + '=\"4\"]');\n\n                if (!designatorList.length) {\n                   return;\n                }\n\n                if (this._validateMin && minHours >= 12) {\n                    designatorList.find('.k-item[data-value=\"AM\"]').hide();\n                } else {\n                    designatorList.find('.k-item[data-value=\"AM\"]').show();\n                }\n\n                if (this._validateMax && maxHours < 12) {\n                    designatorList.find('.k-item[data-value=\"PM\"]').hide();\n                } else {\n                    designatorList.find('.k-item[data-value=\"PM\"]').show();\n                }\n            },\n\n\n            _updateRanges: function() {\n                if (!this.options.specifiedRange) {\n                    return;\n                }\n                if (!this._currentlySelected) {\n                    this._currentlySelected = new Date();\n                }\n\n                var max = this.options.endTime ? this.options.endTime : this.options.max;\n                var min = this.options.startTime ? this.options.startTime : this.options.min;\n\n                if (this.options.validateDate) {\n                    if (max.getFullYear() === this._currentlySelected.getFullYear() &&\n                        max.getMonth() === this._currentlySelected.getMonth() &&\n                        max.getDate() === this._currentlySelected.getDate()) {\n                        this._validateMax = true;\n                    } else {\n                        this._validateMax = false;\n                    }\n\n                    if (min.getFullYear() === this._currentlySelected.getFullYear() &&\n                        min.getMonth() === this._currentlySelected.getMonth() &&\n                        min.getDate() === this._currentlySelected.getDate()) {\n                        this._validateMin = true;\n                    } else {\n                        this._validateMin = false;\n                    }\n\n                    if (!this._validateMax && !this._validateMin) {\n                        this._showAllHiddenItems();\n                        return;\n                    }\n                } else {\n                    this._validateMax = true;\n                    this._validateMin = true;\n                }\n\n                this._minMinutes = min.getMinutes();\n                this._maxMinutes = max.getMinutes();\n                this._minHours = min.getHours();\n                this._maxHours = max.getHours();\n                this._minSeconds = min.getSeconds();\n                this._maxSeconds = max.getSeconds();\n\n                this._updateDesignatorRange();\n                this._updateHoursRange();\n                this._updateMinutesRange();\n                this._updateSecondsRange();\n            },\n\n            addTranslate: function() {\n                var lists = this.ul.find(\".k-time-container.k-content.k-scrollable\");\n                var length = lists.length;\n                var list;\n                var itemHeight;\n                var listHeight;\n                var topOffset;\n                var translate;\n                var bottomOffset;\n\n                for (var i = 0; i < length; i++) {\n                    list = lists.eq(i);\n                    itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0));\n                    listHeight = list.outerHeight();\n                    topOffset = (listHeight - itemHeight) / 2;\n                    translate = \"translateY(\" + topOffset + \"px)\";\n                    bottomOffset = listHeight - itemHeight;\n                    list.find(\"ul\").css({\n                        transform: translate,\n                        \"-ms-transform\": translate\n                    });\n                    list.find(\".k-scrollable-placeholder\").css({\n                        height: list.find(\"ul\").height() + bottomOffset\n                    });\n                    list.off(ns)\n                        .on(\"click\" + ns, \".k-item\", this._itemClickHandler.bind(this))\n                        .on(\"scroll\" + ns, this._listScrollHandler.bind(this));\n                }\n            },\n\n            _nowClickHandler: function(e) {\n                e.preventDefault();\n\n                var now = new Date();\n                this.value(now);\n                this.options.change(kendo.toString(now, this.options.format, this.options.culture), true);\n            },\n\n            _cancelClickHandler: function(e) {\n                e.preventDefault();\n                this.value(this._value);\n                if (this.popup) {\n                    this.popup.close();\n                }\n            },\n\n            _setClickHandler: function(e) {\n                e.preventDefault();\n                this._value = new Date(this._currentlySelected);\n\n                this.options.change(kendo.toString(this._currentlySelected, this.options.format, this.options.culture), true);\n                if (this.popup) {\n                    this.popup.close();\n                }\n            },\n\n            _listScrollHandler: function(e) {\n                var that = this;\n                var itemHeight = getItemHeight($(e.currentTarget).find(\".k-item:visible\").eq(0));\n\n                if (that._internalScroll) {\n                    return;\n                }\n\n                if (that._scrollingTimeout) {\n                    clearTimeout(that._scrollingTimeout);\n                }\n\n                that._scrollingTimeout = setTimeout(function() {\n                    if (e.currentTarget.scrollTop % itemHeight > 1) {\n                        e.currentTarget.scrollTop += itemHeight - e.currentTarget.scrollTop % itemHeight;\n                    }\n                    that._scrollTop = e.currentTarget.scrollTop;\n                    that._updateRanges();\n                    that._updateCurrentlySelected();\n                }, 100);\n            },\n\n            _updateCurrentlySelected: function() {\n                var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n                var indexAttr = kendo.attr('index');\n                var hoursList = this.ul.find('[' + indexAttr + '=\"1\"]');\n                var minutesList = this.ul.find('[' + indexAttr + '=\"2\"]');\n                var secondsList = this.ul.find('[' + indexAttr + '=\"3\"]');\n                var designatorList = this.ul.find('[' + indexAttr + '=\"4\"]');\n                var selectedHour;\n                var selectedMinutes;\n                var selectedSeconds;\n                var selectedDesignator;\n\n                if (!this.ul.is(\":visible\")) {\n                    return;\n                }\n\n                if (!this._currentlySelected) {\n                    this._currentlySelected = this._value ? new Date(this._value) : new Date();\n                }\n\n                if (hoursList.length) {\n                    selectedHour = +this._findSelectedValue(hoursList);\n                }\n\n                if (minutesList.length) {\n                    selectedMinutes = +this._findSelectedValue(minutesList);\n                }\n\n                if (secondsList.length) {\n                    selectedSeconds = +this._findSelectedValue(secondsList);\n                }\n\n                if (designatorList.length) {\n                    selectedDesignator = this._findSelectedValue(designatorList);\n                }\n\n                if (is12hourFormat) {\n                    if (selectedDesignator == \"PM\") {\n                        selectedHour += 12;\n                        if (selectedHour == 24) {\n                            selectedHour = 12;\n                        }\n                    }\n\n                    if (selectedDesignator === \"AM\" && selectedHour === 12) {\n                        selectedHour = 0;\n                    }\n                }\n\n                if (selectedHour !== undefined$1) {\n                    this._currentlySelected.setHours(selectedHour);\n                }\n\n                if (selectedMinutes !== undefined$1) {\n                    this._currentlySelected.setMinutes(selectedMinutes);\n                }\n\n                if (selectedSeconds !== undefined$1) {\n                    this._currentlySelected.setSeconds(selectedSeconds);\n                }\n            },\n\n            _findSelectedValue: function(list) {\n               var firstOccurence = firstItemIndex(list.scrollTop(), getItemHeight(list.find(\".k-item:visible\").eq(0)));\n               return list.find(\".k-item:visible\").eq(firstOccurence).attr(\"data-value\");\n            },\n\n            _itemClickHandler: function(e) {\n                var list = $(e.originalEvent.currentTarget);\n                var index = list.find(\".k-item:visible\").index($(e.currentTarget));\n                var itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0));\n\n                list.scrollTop(index * itemHeight);\n            },\n\n            getDatesInRange: function(msStart, msMax, startDate, max, msInterval, start) {\n                var result = [];\n\n                while (true) {\n                    if (msMax && (getMilliseconds(start) >= msMax || startDate.getDate() != start.getDate())) {\n                        msStart = getMilliseconds(start);\n                        if (startDate < start) {\n                            msStart += MS_PER_DAY;\n                        }\n                        if (msStart > msMax) {\n                            start = new DATE(+max);\n                        }\n                        if (getMilliseconds(start) > 0) {\n                            result.push(new Date(start));\n                        }\n                        break;\n                    }\n                    if (startDate.getDate() != start.getDate()) {\n                        break;\n                    }\n                    result.push(new Date(start));\n                    start.setTime(start.getTime() + msInterval);\n                    if (!msMax && this.options.maxSet && !this._ignoreMaxSet) {\n                        break;\n                    }\n                }\n\n                return result;\n            },\n\n            _createListContent: function(parts, interval) {\n                var length = parts.length;\n                var result = \"\";\n                var part;\n                var values;\n\n                for (var i = 0; i < length; i++) {\n                    part = parts[i];\n\n                    if (part.type === \"literal\" || part.type == \"dayperiod\") {\n                        result += this._literalTemplate(part);\n                    } else {\n                        values = this._getValues(part, true, interval);\n                        result += this._itemTemplate(values.values, part, this.options.messages[part.type], values.index);\n                    }\n                }\n\n                return result;\n            },\n\n            _itemTemplate: function(values, part, title, index) {\n                var result = \"\";\n                var length = values.length;\n                var indexAttr = kendo.attr('index');\n\n                result += '<div class=\"k-time-list-wrapper\" role=\"presentation\">' +\n                            '<span class=\"k-title\">' + (title || part.type) + '</span>' +\n                            '<div class=\"k-time-list\">' +\n                                '<div class=\"k-time-container k-content k-scrollable\" role=\"presentation\" ' + indexAttr + '=\"' + index + '\">' +\n                                    '<ul class=\"k-reset\">';\n\n                for ( var i = 0; i < length; i++) {\n                    result += '<li class=\"k-item\" data-value=\"' + values[i] + '\">' +\n                                    '<span>' + values[i] + '</span>' +\n                               '</li>';\n                }\n\n                result += '</ul>' +\n                          '<div class=\"k-scrollable-placeholder\"></div>' +\n                        '</div>' +\n                    '</div>' +\n                '</div>';\n\n                return result;\n            },\n\n            _getValues: function(part, shouldPad, interval) {\n                var result = [];\n                var index;\n                var start = 0;\n                var end;\n                var step = 0;\n                var currentStep = 0;\n\n                if ($.isPlainObject(interval)) {\n                    step = interval[part.type] || 0;\n                }\n\n                if (part.type === \"hour\") {\n                    start = part.hour12 ? 1 : 0;\n                    index = 1;\n                    end = part.hour12 ? 12 : 23;\n                } else if (part.type === \"minute\") {\n                    index = 2;\n                    end = 59;\n                } else if (part.type === \"second\") {\n                    index = 3;\n                    end = 59;\n                }\n\n                for (; start <= end; start++) {\n                    if (step > 0) {\n                        if (start === 0 || (start === 1 && step > 1 && part.type === \"hour\")) {\n                            result.push(shouldPad ? pad(currentStep) : currentStep);\n                        }\n\n                        if (start % step === 0 && currentStep + step <= end) {\n                            currentStep += step;\n                            result.push(shouldPad ? pad(currentStep) : currentStep);\n                        }\n                    } else {\n                        result.push(shouldPad ? pad(start) : start);\n                    }\n                }\n\n                return {\n                    values: result,\n                    index: index\n                };\n            },\n\n            _literalTemplate: function(part) {\n                var isDayTimePattern = part.pattern === \" tt\" || part.pattern === \"aa\";\n                var result = '<div class=\"k-time-separator\">' +\n                    (isDayTimePattern ? ':' : part.pattern) +\n                    '</div>';\n\n                if (isDayTimePattern) {\n                    result += this._itemTemplate([\"AM\", \"PM\"], part, \"AM/PM\", 4);\n                }\n\n                return result;\n            },\n\n            bind: function() {\n                var that = this,\n                    options = that.options,\n                    dates = options.dates;\n\n                if (dates && dates[0] && !(options.timeView && options.timeView.list === \"scroll\")) {\n                    that.dataBind(dates);\n                } else {\n                    that.refresh();\n                    that.addTranslate();\n                    if (that._value) {\n                        that.applyValue(that._value);\n                    }\n                }\n            },\n\n            _html: function(html) {\n                var that = this;\n\n                if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                    html = HIGHLIGHTCONTAINER + html;\n                    that.ul.html(html);\n                } else {\n                    that.ul[0].innerHTML = html;\n                    that.popup.unbind(OPEN, that._heightHandler);\n                    that.popup.one(OPEN, that._heightHandler);\n\n                    that.current(null);\n                    that.select(that._value);\n                }\n            },\n\n            scroll: function(item) {\n                if (!item) {\n                    return;\n                }\n\n                if (item.scrollIntoViewIfNeeded) {\n                    item.scrollIntoViewIfNeeded();\n                } else {\n                    scrollIntoViewIfNeeded(item);\n                }\n            },\n\n            select: function(li) {\n                var that = this,\n                    options = that.options,\n                    current = that._current,\n                    selection;\n\n                if (li instanceof Date) {\n                    li = kendo.toString(li, options.format, options.culture);\n                }\n\n                if (typeof li === \"string\") {\n                    if (!current || current.text() !== li) {\n                        li = $.grep(that.ul[0].childNodes, function(node) {\n                            return (node.textContent || node.innerText) == li;\n                        });\n\n                        li = li[0] ? li : null;\n                    } else {\n                        li = current;\n                    }\n                }\n                selection = that._distinctSelection(li);\n                that.current(selection);\n            },\n\n            _distinctSelection: function(selection) {\n                var that = this,\n                    currentValue,\n                    selectionIndex;\n\n                if (selection && selection.length > 1) {\n                    currentValue = getMilliseconds(that._value);\n                    selectionIndex = $.inArray(currentValue, that._dates);\n                    selection = that.ul.children()[selectionIndex];\n                }\n\n                return selection;\n            },\n\n            setOptions: function(options) {\n                var old = this.options;\n\n                options.min = parse(options.min);\n                options.max = parse(options.max);\n\n                this.options = extend(old, options, {\n                    active: old.active,\n                    change: old.change,\n                    close: old.close,\n                    open: old.open\n                });\n\n                this.bind();\n            },\n\n            toggle: function() {\n                var that = this;\n\n                if (that.popup.visible()) {\n                    that.close();\n                } else {\n                    that.open();\n                }\n            },\n\n            value: function(value) {\n                var that = this;\n\n                that._value = value;\n                if (that.ul[0].firstChild) {\n                    if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                        that.applyValue(value);\n                    } else {\n                        that.select(value);\n                    }\n                }\n            },\n\n            _click: function(e) {\n                let that = this,\n                    li = $(e.currentTarget),\n                    date = li.text(),\n                    dates = that.options.dates,\n                    min = that.options.min,\n                    max = that.options.max;\n\n                if (dates && dates.length > 0) {\n                    if (min.getTime() !== max.getTime()) {\n                        dates = dates.filter(d => that._inRange(d));\n                    }\n                    date = dates[li.index()];\n                }\n\n                if (!e.isDefaultPrevented()) {\n                    that.select(li);\n                    that.options.change(date, true);\n                    that.close();\n                }\n            },\n\n            _inRange(date) {\n                const that = this,\n                    min = that.options.min,\n                    max = that.options.max;\n\n                const dateSeconds = date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds(),\n                    minSeconds = min.getHours() * 3600 + min.getMinutes() * 60 + min.getSeconds(),\n                    maxSeconds = max.getHours() * 3600 + max.getMinutes() * 60 + max.getSeconds();\n\n                return dateSeconds >= minSeconds && dateSeconds <= maxSeconds;\n            },\n\n            _height: function() {\n                var that = this;\n                var list = that.list;\n                var parent = list.parent(\".k-child-animation-container\");\n                var container = parent.closest(\".k-animation-container\");\n                var height = that.options.height;\n                var elements = list.add(container);\n                var ul = that.ul[0];\n\n                if (ul.children.length) {\n                    elements.add(parent).show();\n\n                    list.add(parent)\n                        .height(ul.scrollHeight > height && (that.options.adaptiveMode != \"auto\" || that.bigScreenMQL.mediaQueryList.matches) ? height : \"auto\");\n\n                    elements.hide();\n                }\n            },\n\n            _parse: function(value) {\n                var that = this,\n                    options = that.options,\n                    min = getMilliseconds(options.min) != getMilliseconds(TODAY) ? options.min : null,\n                    max = getMilliseconds(options.max) != getMilliseconds(TODAY) ? options.max : null,\n                    current = that._value || min || max || TODAY;\n\n                if (value instanceof DATE) {\n                    return value;\n                }\n\n                value = parse(value, options.parseFormats, options.culture);\n\n                if (value) {\n                    value = new DATE(current.getFullYear(),\n                                     current.getMonth(),\n                                     current.getDate(),\n                                     value.getHours(),\n                                     value.getMinutes(),\n                                     value.getSeconds(),\n                                     value.getMilliseconds());\n                }\n\n                return value;\n            },\n\n            _adjustListWidth: function() {\n                var that = this,\n                    list = this.list,\n                    width = list[0].style.width,\n                    wrapper = this.options.anchor,\n                    computedStyle, computedWidth,\n                    outerWidth = kendo._outerWidth;\n\n                if (!list.data(\"width\") && width) {\n                    return;\n                }\n\n                computedStyle = window.getComputedStyle ? window.getComputedStyle(wrapper[0], null) : 0;\n                computedWidth = computedStyle ? parseFloat(computedStyle.width) : outerWidth(wrapper);\n\n                if (computedStyle && (browser.mozilla || browser.msie)) { // getComputedStyle returns different box in FF and IE.\n                    computedWidth += parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight) + parseFloat(computedStyle.borderLeftWidth) + parseFloat(computedStyle.borderRightWidth);\n                }\n\n                width = computedWidth - (outerWidth(list) - list.width());\n\n                list.css({\n                    fontFamily: wrapper.css(\"font-family\"),\n                    width: that.options.adaptiveMode != \"auto\" || that.bigScreenMQL.mediaQueryList.matches ? width : \"100%\"\n                })\n                .data(\"width\", width);\n            },\n\n            _popup: function() {\n                var that = this,\n                    list = that.list,\n                    options = that.options,\n                    anchor = options.anchor;\n\n                if (!this.options.omitPopup) {\n                    if (options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches) {\n                        var popupContent = that.popupContent || list;\n                        popupContent.appendTo(document.body);\n\n                        that.popup = new ui.ActionSheet(popupContent, {\n                            adaptive: true,\n                            focusOnActivate: false,\n                            title: \"Set time\",\n                            subtitle: \"00/00/00\",\n                            closeButton: true,\n                            fullscreen: that.smallScreenMQL.mediaQueryList.matches,\n                            popup: extend(options.popup, {\n                                anchor: anchor,\n                                open: options.open,\n                                close: options.close,\n                                animation: options.animation,\n                                isRtl: support.isRtl(options.anchor),\n                            }),\n                            activate: function() {\n                                if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                                    that.addTranslate();\n                                    that._updateRanges();\n                                    if (that._value) {\n                                        that.applyValue(that._value);\n                                    } else {\n                                        that._updateCurrentlySelected();\n                                    }\n                                    that._focusList(that.list.find(\".k-time-list-wrapper\").eq(0));\n                                }\n                            }\n                        });\n\n                        that._updateRanges();\n                        that._updateCurrentlySelected();\n                        popupContent.find(\".k-time-footer\").appendTo(popupContent);\n                    } else {\n                        that.popup = new ui.Popup(that.popupContent || list, extend(options.popup, {\n                            anchor: anchor,\n                            open: options.open,\n                            close: options.close,\n                            animation: options.animation,\n                            isRtl: support.isRtl(options.anchor),\n                            activate: function() {\n                                if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                                    that.addTranslate();\n                                    that._updateRanges();\n                                    if (that._value) {\n                                        that.applyValue(that._value);\n                                    } else {\n                                        that._updateCurrentlySelected();\n                                    }\n                                    that._focusList(that.list.find(\".k-time-list-wrapper\").eq(0));\n                                }\n                            }\n                        }));\n                    }\n\n                } else {\n                    list.appendTo(options.timeDiv);\n                }\n            },\n\n            move: function(e) {\n                const that = this,\n                    key = e.keyCode,\n                    ul = that.ul[0],\n                    down = key === keys.DOWN,\n                    isInput = $(e.target).is('.k-input-inner'),\n                    isModernType = that.options.componentType === 'modern',\n                    isPopupOpened = that.popup.visible();\n\n                let current = that._current;\n\n                const preventInputValueChange = isInput && isModernType && isPopupOpened;\n\n                if (key === keys.UP || down) {\n                    if (e.altKey) {\n                        that.toggle(down);\n                        return;\n                    } else if (preventInputValueChange) {\n                        return;\n                    } else if (down) {\n                        current = current ? current[0].nextSibling : ul.firstChild;\n                    } else {\n                        current = current ? current[0].previousSibling : ul.lastChild;\n                    }\n\n                    if (current) {\n                        that.select(current);\n                    }\n\n                    that.options.change(that._current.text());\n                    e.preventDefault();\n\n                } else if (key === keys.ENTER || key === keys.TAB || key === keys.ESC) {\n                    e.preventDefault();\n                    if (current) {\n                        that.options.change(current.text(), true);\n                    }\n                    that.close();\n                }\n            }\n        };\n\n        function dst() {\n            var today = new DATE(),\n                midnight = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0),\n                noon = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 12, 0, 0);\n\n            return -1 * (midnight.getTimezoneOffset() - noon.getTimezoneOffset());\n        }\n\n        function getMilliseconds(date) {\n            return date.getHours() * 60 * MS_PER_MINUTE + date.getMinutes() * MS_PER_MINUTE + date.getSeconds() * 1000 + date.getMilliseconds();\n        }\n\n        function lastTimeOption(interval) {\n            var date = new Date(2100, 0, 1);\n            date.setMinutes(-interval);\n            return date;\n        }\n\n        function isInRange(value, min, max) {\n            var msMin = getMilliseconds(min),\n                msMax = getMilliseconds(max),\n                msValue;\n\n            if (!value || msMin == msMax) {\n                return true;\n            }\n\n            msValue = getMilliseconds(value);\n\n            if (msMin > msValue) {\n                msValue += MS_PER_DAY;\n            }\n\n            if (msMax < msMin) {\n                msMax += MS_PER_DAY;\n            }\n\n            return msValue >= msMin && msValue <= msMax;\n        }\n\n        TimeView.getMilliseconds = getMilliseconds;\n\n        kendo.TimeView = TimeView;\n\n        var TimePicker = Widget.extend({\n            init: function(element, options) {\n                var that = this, disabled;\n\n                options = options || {};\n                options.componentType = options.componentType || \"classic\";\n\n                if ($.isPlainObject(options.interval) && options.componentType !== \"modern\") {\n                    options.interval = 30; // If an object is passed to the classic picker, fall back to the default interval value.\n                }\n\n                Widget.fn.init.call(that, element, options);\n\n                element = that.element;\n                options = that.options;\n\n                options.min = parse(element.attr(\"min\")) || parse(options.min);\n                options.max = parse(element.attr(\"max\")) || parse(options.max);\n                options.inputMode = options.inputMode || element.attr(\"inputmode\") || \"text\";\n                element.attr(\"inputmode\" , options.inputMode);\n\n                if (+options.max != +TODAY || +options.min != +TODAY) {\n                    this._specifiedRange = true;\n                }\n\n                normalize(options);\n\n                that._initialOptions = extend({}, options);\n\n                that._wrapper();\n\n                if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                    that.options.height = null;\n                }\n\n                that.bigScreenMQL = mediaQuery(\"large\");\n                if (that.options.adaptiveMode == \"auto\") {\n                    that.bigScreenMQL.onChange(()=> {\n                        that._createTimeViewProxy();\n                        that._update(that.element.val());\n                    });\n                }\n\n                that._createTimeView();\n                that._createTimeViewProxy = that._createTimeView.bind(that);\n\n                that._icon();\n                that._reset();\n\n                try {\n                    element[0].setAttribute(\"type\", \"text\");\n                } catch (e) {\n                    element[0].type = \"text\";\n                }\n\n                element.addClass(\"k-input-inner\")\n                       .attr({\n                            \"role\": \"combobox\",\n                            \"aria-expanded\": false,\n                            \"aria-controls\": that.timeView._timeViewID,\n                            \"autocomplete\": \"off\"\n                       });\n\n                disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is(\"[readonly]\"));\n                }\n\n                that._createDateInput();\n                that._old = that._update(options.value || that.element.val());\n                that._oldText = element.val();\n                that._applyCssClasses();\n\n                if (options.label) {\n                    that._label();\n                }\n\n                that.element.removeAttr(\"style\");\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"TimePicker\",\n                autoAdjust: true,\n                min: TODAY,\n                max: TODAY,\n                format: \"\",\n                dates: [],\n                parseFormats: [],\n                focusTime: null,\n                value: null,\n                interval: 30,\n                height: DEFAULT_HEIGHT,\n                animation: {},\n                dateInput: false,\n                messages: {\n                    set: \"Set\",\n                    cancel: \"Cancel\",\n                    hour: \"hour\",\n                    minute: \"minute\",\n                    second: \"second\",\n                    millisecond: \"millisecond\",\n                    now: \"Now\"\n                },\n                adaptiveMode: \"none\",\n                componentType: \"classic\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null,\n                autoCorrectParts: true\n            },\n\n            events: [\n             OPEN,\n             CLOSE,\n             CHANGE\n            ],\n\n            componentTypes: {\n                \"classic\": {\n                    timeView: {\n                        list: \"list\"\n                    }\n                },\n                \"modern\": {\n                    timeView: {\n                        list: \"scroll\"\n                    }\n                }\n            },\n\n            setOptions: function(options) {\n                let that = this,\n                    value = that._value,\n                    isComponentTypeChanged = options.componentType ? true : false;\n\n                Widget.fn.setOptions.call(that, options);\n                options = that.options;\n                if ($.isPlainObject(options.interval) && options.componentType !== \"modern\") {\n                    options.interval = 30; // If an object is passed to the classic picker, fall back to the default interval value.\n                }\n\n\n                if (+options.max != +TODAY || +options.min != +TODAY) {\n                    this._specifiedRange = true;\n                }\n\n                that._arrow.off(ns);\n                that._arrow.remove();\n\n                normalize(options);\n\n\n                if (options.componentType && isComponentTypeChanged) {\n                    options.timeView.list = options.componentType == \"classic\" ? \"list\" : \"scroll\";\n                    that.options.height = options.componentType == \"classic\" ? DEFAULT_HEIGHT : null;\n                    that._createTimeView();\n                    that.timeView._value = value;\n                }\n\n                that.timeView.setOptions(options);\n\n                that._icon();\n                that._editable(options);\n\n                that._createDateInput();\n\n                if (value) {\n                    that.element.val(kendo.toString(value, options.format, options.culture));\n                }\n\n                if (options.label && that._inputLabel) {\n                    that.label.setOptions(options.label);\n                } else if (options.label === false) {\n                    that.label._unwrapFloating();\n                    that._inputLabel.remove();\n                    delete that._inputLabel;\n                } else if (options.label) {\n                    that._label();\n                }\n            },\n\n            dataBind: function(dates) {\n                if (isArray(dates)) {\n                    this.timeView.dataBind(dates);\n                }\n            },\n\n            _createDateInput: function() {\n                const that = this,\n                    options = that.options,\n                    element = that.element;\n\n                if (that._dateInput) {\n                    that._dateInput.destroy();\n                    that._dateInput = null;\n                }\n\n                if (options.dateInput) {\n                    var min = options.min;\n                    var max = options.max;\n                    var today = new DATE();\n                    if (getMilliseconds(min) == getMilliseconds(max)) {\n                        min = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0);\n                        max = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 24, 0, 0);\n                    }\n\n                    that._dateInput = new ui.DateInput(element, {\n                        autoAdjust: options.autoAdjust,\n                        culture: options.culture,\n                        format: options.format,\n                        min: min,\n                        max: max,\n                        value: options.value,\n                        interval: options.interval,\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        rounded: options.rounded,\n                        messages: options.messages.dateInput,\n                        autoCorrectParts: options.autoCorrectParts,\n                        toggleDayPeriod: true,\n                        inputMode: options.inputMode\n                    });\n                }\n            },\n\n            _editable: function(options) {\n                var that = this,\n                    disable = options.disable,\n                    readonly = options.readonly,\n                    arrow = that._arrow.off(ns),\n                    element = that.element.off(ns),\n                    wrapper = that.wrapper.off(ns);\n\n                if (that._dateInput) {\n                    that._dateInput._unbindInput();\n                }\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n\n                    if (element && element.length) {\n                        element[0].removeAttribute(DISABLED);\n                        element[0].removeAttribute(READONLY);\n                    }\n                    element.attr(ARIA_DISABLED, false)\n                           .attr(ARIA_READONLY, false)\n                           .on(\"keydown\" + ns, that._keydown.bind(that))\n                           .on(\"focusout\" + ns, that._blur.bind(that))\n                           .on(\"focus\" + ns, function() {\n                               that.wrapper.addClass(FOCUSED);\n                           });\n\n                    if (that._dateInput) {\n                        that._dateInput._bindInput();\n                    }\n                   arrow.on(CLICK, that._click.bind(that))\n                       .on(MOUSEDOWN, preventDefault);\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable)\n                           .attr(ARIA_READONLY, readonly);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var options = that.options;\n                var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                    content: options.label\n                };\n\n                if (that._dateInput) {\n                    labelOptions.floatCheck = () => {\n\n                        if (!that.value() && (!that._dateInput._hasDateInput() || that.element.val() === \"\") && document.activeElement !== that.element[0]) {\n                            that.element.val(\"\");\n                            return true;\n                        }\n\n                        return false;\n                    };\n                }\n\n                that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                    widget: that\n                }));\n\n                that._inputLabel = that.label.element;\n            },\n\n            readonly: function(readonly) {\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that.timeView.destroy();\n\n                that.element.off(ns);\n                that._arrow.off(ns);\n                that.wrapper.off(ns);\n\n                if (that._form) {\n                    that._form.off(\"reset\", that._resetHandler);\n                }\n\n                if (that.label) {\n                    that.label.destroy();\n                }\n\n                if (that.bigScreenMQL) {\n                    that.bigScreenMQL.destroy();\n                }\n\n                that._createTimeViewProxy = null;\n            },\n\n            close: function() {\n                this.timeView.close();\n            },\n\n            open: function() {\n                this.timeView.open();\n            },\n\n            min: function(value) {\n                if (value) {\n                    this._specifiedRange = true;\n                }\n\n                return this._option(\"min\", value);\n            },\n\n            max: function(value) {\n                if (value && this.timeView) {\n                    this._specifiedRange = true;\n                    this.timeView.options.maxSet = true;\n                } else if (this.timeView) {\n                    this.timeView.options.maxSet = false;\n                }\n                return this._option(\"max\", value);\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                that._old = that._update(value);\n\n                if (that._old === null) {\n                    that.element.val(\"\");\n                }\n\n                that._oldText = that.element.val();\n\n                if (that.label && that.label.floatingLabel) {\n                    that.label.floatingLabel.refresh();\n                }\n            },\n\n            _blur: function() {\n                var that = this,\n                    value = that.element.val();\n                that._typing = false;\n\n                if (!(that.options.timeView && that.options.timeView.list === \"scroll\")) {\n                   that.close();\n               }\n\n                if (value !== that._oldText) {\n                    that._change(value);\n                }\n                that.wrapper.removeClass(FOCUSED);\n            },\n\n            _click: function() {\n                var that = this,\n                    element = that.element;\n\n                that.timeView.toggle();\n\n                if (!support.touch && element[0] !== activeElement() && !(that.options.timeView && that.options.timeView.list === \"scroll\")) {\n                    element.trigger(\"focus\");\n                }\n            },\n\n            _change: function(value) {\n                var that = this,\n                oldValue = that.element.val(),\n                dateChanged;\n\n                value = that._update(value);\n                dateChanged = !kendo.calendar.isEqualDate(that._old, value);\n\n                var valueUpdated = dateChanged && !that._typing;\n                var textFormatted = oldValue !== that.element.val();\n\n                if (valueUpdated || textFormatted) {\n                    that.element.trigger(CHANGE);\n                }\n\n                if (dateChanged) {\n                    that._old = value;\n                    that._oldText = that.element.val();\n\n                    that.trigger(CHANGE);\n                }\n\n                that._typing = false;\n            },\n\n            _createTimeView: function() {\n                var that = this;\n                var options = that.options;\n                var element = that.element;\n                var timeView,\n                    ul;\n\n                if (that.timeView) {\n                    if (that.timeView.popup && that.timeView.popup.wrapper) {\n                        that.timeView.popup.wrapper.remove();\n                    }\n                    that.timeView.destroy();\n                    that.timeView = null;\n                }\n\n                that.timeView = timeView = new TimeView(extend({}, options, {\n                    id: element.attr(ID),\n                    size: options.adaptiveMode != \"auto\" || that.bigScreenMQL.mediaQueryList.matches ? options.size : \"large\",\n                    anchor: that.wrapper,\n                    format: options.format,\n                    change: function(value, trigger) {\n                        if (trigger) {\n                            that._change(value);\n                        } else {\n                            element.val(value);\n                        }\n                        that.timeView._focusTime = null;\n                    },\n                    open: function(e) {\n                        if (that.options.timeView && that.options.timeView.list !== \"scroll\") {\n                            that.timeView._adjustListWidth();\n                        } else {\n                            that.timeView._updateTitle();\n                        }\n\n                        if (that.trigger(OPEN)) {\n                            e.preventDefault();\n                        } else {\n                            element.attr(ARIA_EXPANDED, true);\n                            ul.attr(ARIA_HIDDEN, false);\n\n                            if (timeView.current()) {\n                                element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                            }\n                        }\n                    },\n                    close: function(e) {\n                        if (that.trigger(CLOSE)) {\n                            e.preventDefault();\n                        } else {\n                            element.attr(ARIA_EXPANDED, false);\n                            ul.attr(ARIA_HIDDEN, true);\n                            element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                        }\n                    },\n                    active: function(current) {\n                        if (element && element.length) {\n                            element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                        }\n                        if (current) {\n                            element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                        }\n                    },\n                    specifiedRange: that._specifiedRange,\n                    maxSet: +options.max != +TODAY\n                }));\n\n                ul = timeView.ul;\n\n                that._ariaLabel(ul);\n            },\n\n            _icon: function() {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    arrow;\n\n                arrow = element.next(\"button.k-input-button\");\n\n                if (!arrow[0]) {\n                    arrow = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"select\"></button>', {\n                        icon: \"clock\",\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: \"none\",\n                        rounded: \"none\"\n                    })).insertAfter(element);\n                }\n\n                that._arrow = arrow.attr({\n                    \"role\": \"button\"\n                });\n            },\n\n            _keydown: function(e) {\n                const that = this,\n                    key = e.keyCode,\n                    timeView = that.timeView,\n                    value = that.element.val();\n\n              if (timeView.popup.visible() || e.altKey) {\n                    timeView.move(e);\n                    if (that._dateInput && e.stopImmediatePropagation && that.options.componentType !== 'modern') {\n                        e.stopImmediatePropagation();\n                    }\n                } else if (key === keys.ENTER && value !== that._oldText) {\n                    that._change(value);\n                } else {\n                    that._typing = true;\n                }\n            },\n\n            _option: function(option, value) {\n                var that = this,\n                    options = that.options;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = that.timeView._parse(value);\n\n                if (!value) {\n                    return;\n                }\n\n                value = new DATE(+value);\n\n                options[option] = value;\n                that.timeView.options[option] = value;\n\n                if (that._dateInput) {\n                    that._dateInput[option](value);\n                }\n\n                that.timeView.bind();\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _update: function(value) {\n                var that = this,\n                    options = that.options,\n                    timeView = that.timeView,\n                    date = timeView._parse(value);\n\n                if (!isInRange(date, options.min, options.max)) {\n                    date = null;\n                }\n\n                that._value = date;\n                that._currentlySelected = date;\n                if (that._dateInput && date) {\n                    that._dateInput.value(date || value);\n                } else {\n                    that.element.val(kendo.toString(date || value, options.format, options.culture));\n                }\n                timeView.value(date);\n\n                return date;\n            },\n\n            _toggleMaxSet: function(flag) {\n                if (this.timeView) {\n                    this.timeView._ignoreMaxSet = flag;\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    wrapper;\n\n                wrapper = element.parents(\".k-timepicker\");\n\n                if (!wrapper[0]) {\n                    wrapper = element.wrap(SPAN).parent();\n                }\n\n                wrapper[0].style.cssText = element[0].style.cssText;\n                that.wrapper = wrapper.addClass(\"k-timepicker k-input\")\n                    .addClass(element[0].className);\n\n                element.css({\n                    height: element[0].style.height\n                });\n            },\n\n            _reset: function() {\n                let that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        that._toggleMaxSet(true);\n                        that.value(element[0].defaultValue);\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                        that._toggleMaxSet(false);\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            }\n        });\n\n        function normalize(options) {\n            var parseFormats = options.parseFormats;\n\n            options.format = extractFormat(options.format || kendo.getCulture(options.culture).calendars.standard.patterns.t);\n\n            parseFormats = isArray(parseFormats) ? parseFormats : [parseFormats];\n            parseFormats.splice(0, 0, options.format);\n            options.parseFormats = parseFormats;\n        }\n\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n\n        function mergeDateAndTime(date, time) {\n            return new Date(date.getFullYear(),\n                date.getMonth(),\n                date.getDate(),\n                time.getHours(),\n                time.getMinutes(),\n                time.getSeconds(),\n                time.getMilliseconds());\n        }\n\n        function includes(text, subStr) {\n            var returnValue = false;\n\n            if (text.indexOf(subStr) !== -1) {\n                returnValue = true;\n            }\n\n            return returnValue;\n        }\n\n        function pad(value, size) {\n            var s = String(value);\n            while (s.length < (size || 2)) {\n                s = \"0\" + s;\n            }\n            return s;\n        }\n\n        function firstItemIndex(scrollTop, itemHeight) {\n            return Math.max(Math.round(scrollTop / itemHeight), 0);\n        }\n\n        function getItemHeight(item) {\n            return item.length && item[0].getBoundingClientRect().height;\n        }\n\n        function scrollIntoViewIfNeeded(element, centerIfNeeded) {\n\n            function makeRange(start, length) {\n                return { start: start, length: length, end: start + length };\n            }\n\n            function coverRange(inner, outer) {\n                if (centerIfNeeded === false ||\n                    (outer.start < inner.end && inner.start < outer.end))\n                {\n                    return Math.min(\n                        inner.start, Math.max(outer.start, inner.end - outer.length)\n                    );\n                }\n                return (inner.start + inner.end - outer.length) / 2;\n            }\n\n            function makePoint(x, y) {\n                return {\n                    x: x, y: y,\n                    translate: function translate(dX, dY) {\n                        return makePoint(x + dX, y + dY);\n                    }\n                };\n            }\n\n            function absolute(elem, pt) {\n                while (elem) {\n                    pt = pt.translate(elem.offsetLeft, elem.offsetTop);\n                    elem = elem.offsetParent;\n                }\n                return pt;\n            }\n\n            var target = absolute(element, makePoint(0, 0)),\n                extent = makePoint(element.offsetWidth, element.offsetHeight),\n                elem = element.parentNode,\n                origin;\n\n            while (elem instanceof HTMLElement) {\n                origin = absolute(elem, makePoint(elem.clientLeft, elem.clientTop));\n                elem.scrollLeft = coverRange(\n                    makeRange(target.x - origin.x, extent.x),\n                    makeRange(elem.scrollLeft, elem.clientWidth)\n                );\n                elem.scrollTop = coverRange(\n                    makeRange(target.y - origin.y, extent.y),\n                    makeRange(elem.scrollTop, elem.clientHeight)\n                );\n\n                target = target.translate(-elem.scrollLeft, -elem.scrollTop);\n                elem = elem.parentNode;\n            }\n        }\n\n\n        kendo.cssProperties.registerPrefix(\"TimePicker\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"TimePicker\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(TimePicker);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}