{"version":3,"sources":["raw-js/kendo.stepper.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Stepper","this","$","undefined$1","window","Widget","ui","keys","extend","encode","htmlEncode","STEPPER","CLICK","ACTIVATE","SELECT","DOT","SPACE","VERTICAL","TABINDEX","ARIA_CURRENT","ARIA_DISABLED","ARIA_INVALID","stepStyles","stepperStyles","Step","Class","init","options","_render","label","icon","successIcon","iconTemplate","enabled","error","selected","isFirstStep","isLastStep","indicatorVisible","labelVisible","index","previous","selectable","_indicatorTemplate","indicatorContent","iconClass","_labelTemplate","deselect","_link","_stepClasses","enable","value","select","getEnabled","getIndex","setPrevious","getSelectable","getSelected","setValid","valid","_indicator","stepIndicator","addClass","attr","append","template","element","find","_label","stepLabel","empty","_linkAttributes","link","removeAttr","stepLink","stepClasses","removeClass","that","fn","call","_indicatorAndLabel","_wrapper","steps","length","_processSteps","_progressBar","_attachEvents","_resizeHandler","onResize","resize","orientation","linear","indicator","selectOnFocus","name","events","destroy","progressBar","unbindResize","wrapper","off","setOptions","_addStepList","stepsOptions","forEach","step","idx","insertAt","stepOptions","selectedStep","isNaN","splice","_createSteps","_renderSteps","_resetProgressBar","_calculateDimensions","next","_steps","selectedIndex","_select","removeAt","newSelected","newSelectedIndex","stepIndex","Number","_stepList","on","_selectClickHandler","bind","_wrapperClickHandler","_focusout","_keydown","numberOfSteps","stepList","stepWidth","width","stepHeight","height","progressElement","margin","style","css","support","isRtl","_createStep","stepOpt","_selectablePreviousState","push","e","get","contains","relatedTarget","setTimeout","_leaveStepper","_focusStep","newStep","focusedStep","allStepLinks","focus","_focusNextStep","nextStep","document","activeElement","closest","_focusPreviousStep","previousStep","prev","_focusFirstStep","firstStep","_focusLastStep","lastStep","keyCode","focusedStepIndex","stepsCount","TAB","shiftKey","preventDefault","_tabKey","_navKeys","ENTER","SPACEBAR","_selectHandler","_navKeysSelect","_navKeysFocus","rtl","DOWN","RIGHT","UP","LEFT","HOME","END","targetStep","_selectHandlerOnKey","progressBarOptions","_progressOptions","kendoProgressBar","getKendoProgressBar","max","showStatus","reverse","newOptions","stepsList","_resetStep","i","forward","min","Math","stepElement","target","_preventWrapperClick","currentStep","trigger","sender","originalEvent","shift","focusedStepElement","parent","stepper","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default","Object","defineProperty"],"mappings":"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","file":"kendo.stepper.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.progressbar.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.progressbar', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Stepper = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"stepper\",\n        name: \"Stepper\",\n        category: \"web\",\n        description: \"The Stepper widget displays navigation steps.\",\n        depends: [ \"core\", \"progressbar\", \"icons\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            keys = kendo.keys,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n\n            STEPPER = \".kendoStepper\",\n\n            CLICK = \"click\",\n            ACTIVATE = \"activate\",\n            SELECT = \"select\",\n            KEYDOWN = \"keydown\",\n            FOCUSOUT = \"focusout\",\n\n            DOT = \".\",\n            SPACE = \" \",\n            VERTICAL = \"vertical\",\n            TABINDEX = \"tabindex\",\n\n            ARIA_CURRENT = \"aria-current\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_INVALID = \"aria-invalid\",\n            ARIA_HIDDEN = \"aria-hidden\";\n\n        var stepStyles = {\n            step: \"k-step\",\n            firstStep: \"k-step-first\",\n            lastStep: \"k-step-last\",\n            doneStep: \"k-step-done\",\n            successStep: \"k-step-success\",\n            errorStep: \"k-step-error\",\n            currentStep: \"k-step-current\",\n            focusStep: \"k-focus\",\n            disabledStep: \"k-disabled\",\n            stepLink: \"k-step-link\",\n            stepIndicator: \"k-step-indicator\",\n            stepLabel: \"k-step-label\"\n        };\n\n        var stepperStyles = {\n            widget: \"k-stepper\",\n            stepperLinear: \"k-stepper-linear\",\n            stepList: \"k-step-list\",\n            stepListHorizontal: \"k-step-list-horizontal\",\n            stepListVertical: \"k-step-list-vertical\"\n        };\n\n        var Step = kendo.Class.extend({\n            init: function(options) {\n                this.options = extend({}, this.options, options);\n                this._render();\n            },\n\n            options: {\n                label: \"\",\n                icon: \"\",\n                successIcon: \"\",\n                iconTemplate: null,\n                enabled: true,\n                error: false,\n                selected: false,\n                isFirstStep: false,\n                isLastStep: false,\n                indicatorVisible: true,\n                labelVisible: true,\n                index: 0,\n                previous: false,\n                selectable: true\n            },\n\n            _indicatorTemplate: ({ successIcon, index, icon, previous, error }) => {\n                let indicatorContent;\n                if (successIcon && previous && !error) {\n                    indicatorContent = kendo.ui.icon({ icon: encode(successIcon), iconClass: \"k-step-indicator-icon\" });\n                } else if (icon) {\n                    indicatorContent = kendo.ui.icon({ icon: encode(icon), iconClass: \"k-step-indicator-icon\" });\n                } else if (previous && !error) {\n                    indicatorContent = kendo.ui.icon({ icon: \"check\", iconClass: \"k-step-indicator-icon\" });\n                } else {\n                    indicatorContent = `<span class=\"k-step-indicator-text\">${encode(index + 1)}</span>`;\n                }\n\n                return '<span class=\"k-step-indicator\" aria-hidden=\"true\">' + indicatorContent + '</span>';\n            },\n\n            _labelTemplate: ({ label, indicatorVisible, previous, error }) =>\n            '<span class=\"k-step-label\">' +\n                '<span class=\"k-step-text\">' +\n                    encode(label) +\n                '</span>' +\n                ' ' +\n                ((error || (!indicatorVisible && !error && previous)) ?\n                    kendo.ui.icon($('<span aria-hidden=\"true\"></span>'), {\n                        icon: error ? \"warning-circle\" : \"check-circle\"\n                    })\n                : '') +\n            '</span>',\n\n            deselect: function() {\n                this.options.selected = false;\n                this._link();\n                this._stepClasses();\n            },\n\n            enable: function(value) {\n                if (this.options.enabled !== value) {\n                    this.options.enabled = value;\n                    this.options.selectable = value;\n                    this._link();\n                    this._stepClasses();\n                }\n            },\n\n            select: function() {\n                this.options.selected = true;\n                this._link();\n                this._stepClasses();\n            },\n\n            getEnabled: function() {\n                return this.options.enabled;\n            },\n\n            getIndex: function() {\n                return this.options.index;\n            },\n\n            setPrevious: function(previous) {\n                this.options.previous = previous;\n                this._link();\n                this._stepClasses();\n            },\n\n            getSelectable: function() {\n                return this.options.selectable;\n            },\n\n            getSelected: function() {\n                return this.options.selected;\n            },\n\n            setValid: function(valid) {\n                if (this.options.error === valid) {\n                    this.options.error = !valid;\n                    this._link();\n                    this._stepClasses();\n                }\n            },\n\n            _indicator: function() {\n                var options = this.options,\n                    stepIndicator;\n\n                if (!!options.iconTemplate) {\n                    stepIndicator = $(\"<span>\").addClass(stepStyles.stepIndicator).attr(ARIA_HIDDEN, \"true\");\n                    stepIndicator.append(kendo.template(options.iconTemplate)(options));\n                } else {\n                    stepIndicator = kendo.template(this._indicatorTemplate)(options);\n                }\n\n                this.element.find(DOT + stepStyles.stepLink).append(stepIndicator);\n            },\n\n            _label: function() {\n                var stepLabel = kendo.template(this._labelTemplate)(this.options);\n                this.element.find(DOT + stepStyles.stepLink).append(stepLabel);\n            },\n\n            _link: function() {\n                var options = this.options;\n\n                this.element.find(DOT + stepStyles.stepLink).empty();\n                this._linkAttributes();\n\n                if (options.indicatorVisible) {\n                    this._indicator();\n                }\n                if (options.labelVisible) {\n                    this._label();\n                }\n            },\n\n            _linkAttributes: function() {\n                var options = this.options,\n                    link = this.element.find(DOT + stepStyles.stepLink);\n\n                link.removeAttr(ARIA_DISABLED + SPACE + ARIA_INVALID + SPACE + ARIA_CURRENT + SPACE + TABINDEX);\n\n                if (!options.selected) {\n                    link.attr(TABINDEX, \"-1\");\n                } else {\n                    link.attr(ARIA_CURRENT, \"step\");\n                }\n                if (!options.enabled || !options.selectable) {\n                    link.attr(ARIA_DISABLED, \"true\");\n                }\n                if (options.error) {\n                    link.attr(ARIA_INVALID, \"true\");\n                }\n            },\n\n            _render: function() {\n                var stepLink = $(\"<a href='#'>\").addClass(stepStyles.stepLink).attr(\"title\", this.options.label);\n\n                this.element = $(\"<li>\").append(stepLink);\n\n                this._link();\n                this._stepClasses();\n            },\n\n            _stepClasses: function() {\n                var options = this.options,\n                    stepClasses = stepStyles.step;\n\n                if (options.isFirstStep) {\n                    stepClasses += (SPACE + stepStyles.firstStep);\n                }\n                if (options.isLastStep) {\n                    stepClasses += (SPACE + stepStyles.lastStep);\n                }\n                if (!options.enabled) {\n                    stepClasses += (SPACE + stepStyles.disabledStep);\n                }\n                if (options.error) {\n                    stepClasses += (SPACE + stepStyles.errorStep);\n                }\n                if (options.previous) {\n                    stepClasses += (SPACE + stepStyles.doneStep);\n                    if (!options.error) {\n                        stepClasses += (SPACE + stepStyles.successStep);\n                    }\n                } else if (options.selected) {\n                    stepClasses += (SPACE + stepStyles.currentStep);\n                    stepClasses += (SPACE + stepStyles.focusStep);\n                }\n\n                this.element.removeClass().addClass(stepClasses);\n            }\n        });\n\n        var Stepper = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                options = options || {};\n\n                Widget.fn.init.call(that, element, options);\n\n                that._indicatorAndLabel();\n\n                that._wrapper();\n\n                if (options.steps && options.steps.length) {\n                    that._processSteps(options.steps);\n                    that._progressBar();\n                }\n\n                that._attachEvents();\n\n                that._resizeHandler = kendo.onResize(function() {\n                    that.resize();\n                });\n            },\n\n            options: {\n                orientation: \"horizontal\",\n                linear: true,\n                indicator: true,\n                label: true,\n                selectOnFocus: false,\n                steps: null,\n                name: \"Stepper\"\n            },\n\n            events: [ ACTIVATE, SELECT, \"kendoKeydown\" ],\n\n            destroy: function() {\n                var that = this;\n\n                if (that.progressBar) {\n                    Widget.fn.destroy.call(that.progressBar);\n                }\n\n                Widget.fn.destroy.call(that);\n\n                kendo.unbindResize(that._resizeHandler);\n\n                that.wrapper.off(STEPPER);\n            },\n\n            setOptions: function(options) {\n                var that = this;\n\n                Widget.fn.setOptions.call(that, options);\n\n                if (that.progressBar) {\n                    Widget.fn.destroy.call(that.progressBar);\n                }\n\n                that._indicatorAndLabel();\n\n                that._addStepList();\n\n                if (that.options.steps && that.options.steps.length) {\n                    that._processSteps(that.options.steps);\n                    that._progressBar();\n                }\n            },\n\n            enable: function(value) {\n                var steps = this.steps(),\n                    stepsOptions = this.options.steps;\n\n                var enableStep = function(step, idx) {\n                    step.enable(value);\n                    stepsOptions[idx] = step.options;\n                };\n\n                if (value) {\n                    this.wrapper.removeAttr(ARIA_DISABLED);\n                } else {\n                    this.wrapper.attr(ARIA_DISABLED, \"true\");\n                }\n\n                this.progressBar.enable(value);\n\n                steps.forEach(enableStep);\n            },\n\n            insertAt: function(index, stepOptions) {\n                var steps = this.options.steps,\n                    selectedStep;\n                var findSelectedStep = function(step) {\n                    if (step.selected) {\n                        selectedStep = step;\n                    }\n                };\n\n                if (!stepOptions || isNaN(index)) {\n                    return;\n                }\n                if (index < 0) {\n                    index = steps.length + index;\n                }\n                if (index < 0) {\n                    return;\n                }\n                if (!steps) {\n                    steps = [];\n                }\n\n                if (steps.length === 0 || index >= steps.length) {\n                    index = steps.length;\n                }\n\n                steps.forEach(findSelectedStep);\n\n                if (stepOptions.selected === true) {\n                    selectedStep.selected = false;\n                }\n\n                steps.splice(index, 0, stepOptions);\n\n                this._createSteps();\n                this._renderSteps();\n                this._resetProgressBar();\n                this._calculateDimensions();\n            },\n\n            next: function() {\n                if (!this._steps || this._steps.length <= 1) {\n                    return;\n                }\n\n                var selectedStep = this.selectedStep;\n                var selectedIndex = selectedStep.getIndex();\n\n                if (selectedIndex + 1 === this._steps.length) {\n                    return;\n                } else {\n                    this._select(selectedIndex + 1);\n                }\n            },\n\n            previous: function() {\n                if (!this._steps || this._steps.length <= 1) {\n                    return;\n                }\n\n                var selectedStep = this.selectedStep;\n                var selectedIndex = selectedStep.getIndex();\n\n                if (selectedIndex === 0) {\n                    return;\n                } else {\n                    this._select(selectedIndex - 1);\n                }\n            },\n\n            removeAt: function(index) {\n                var steps = this.options.steps,\n                    removedStep, newSelected, newSelectedIndex;\n\n                if (isNaN(index) || !steps || steps.length < 2 || index >= steps.length) {\n                    return;\n                }\n                if (index < 0) {\n                    index = steps.length + index;\n                }\n                if (index < 0) {\n                    return;\n                }\n\n                removedStep = steps.splice(index, 1)[0];\n\n                if (removedStep.selected === true && steps.length > 0) {\n                    if (index > 0) {\n                        newSelectedIndex = index - 1;\n                    } else {\n                        newSelectedIndex = 0;\n                    }\n\n                    newSelected = steps[newSelectedIndex];\n\n                    if (typeof newSelected === \"string\") {\n                        newSelected = {\n                            label: newSelected\n                        };\n                        steps[newSelectedIndex] = newSelected;\n                    }\n\n                    newSelected.selected = true;\n                    newSelected.previous = false;\n                }\n\n                this._createSteps();\n                this._renderSteps();\n                this._resetProgressBar();\n                this._calculateDimensions();\n            },\n\n            resize: function() {\n                this._calculateDimensions();\n            },\n\n            select: function(stepIndex) {\n                var that = this;\n\n                if (stepIndex === undefined$1 || stepIndex === null || isNaN(stepIndex)) {\n                    return that.selectedStep;\n                }\n\n                if (stepIndex >= that._steps.length || stepIndex < 0) {\n                    return;\n                }\n\n                stepIndex = Number(stepIndex);\n\n                that._select(stepIndex);\n            },\n\n            steps: function(steps) {\n                if (steps === undefined$1) {\n                    return this._steps;\n                }\n\n                this._processSteps(steps);\n                this._resetProgressBar();\n                this._calculateDimensions();\n            },\n\n            _processSteps: function(steps) {\n                var that = this,\n                    selectedStep;\n                var findSelectedStep = function(step) {\n                    if (step.selected) {\n                        selectedStep = step;\n                    }\n                };\n\n                steps.forEach(findSelectedStep);\n\n                if (!selectedStep) {\n                    if (typeof steps[0] === \"string\") {\n                        steps[0] = {\n                            label: steps[0]\n                        };\n                    }\n                    steps[0].selected = true;\n                }\n\n                that.options.steps = steps;\n\n                that._createSteps();\n                that._renderSteps();\n            },\n\n            _addStepList: function() {\n                var that = this;\n\n                that.wrapper.empty().append($(\"<ol />\").addClass(stepperStyles.stepList));\n                that._stepList = that.wrapper.find(DOT + stepperStyles.stepList);\n\n                if (that.options.orientation === VERTICAL) {\n                    that._stepList.addClass(stepperStyles.stepListVertical);\n                } else {\n                    that._stepList.addClass(stepperStyles.stepListHorizontal);\n                }\n            },\n\n            _attachEvents: function() {\n                var that = this;\n\n                that.wrapper\n                    .on(CLICK + STEPPER, DOT + stepStyles.step, that._selectClickHandler.bind(that))\n                    .on(CLICK + STEPPER, that._wrapperClickHandler.bind(that))\n                    .on(FOCUSOUT + STEPPER, that._focusout.bind(that))\n                    .on(KEYDOWN + STEPPER, that, that._keydown.bind(that));\n            },\n\n            _calculateDimensions: function() {\n                if (!this._steps) {\n                    return;\n                }\n                \n                var orientation = this.options.orientation,\n                    numberOfSteps = this._steps.length,\n                    stepList = this._stepList,\n                    steps = stepList.find(DOT + stepStyles.step),\n                    stepWidth = stepList.width() / numberOfSteps,\n                    stepHeight = stepList.height() / numberOfSteps,\n                    progressElement = this.progressBar.element,\n                    margin = \"margin-left\",\n                    style = {};\n\n                if (orientation === VERTICAL) {\n                    steps.css(\"max-height\", 100 / numberOfSteps + \"%\");\n                    progressElement.css({\n                        \"margin-top\": -1 * (stepList.height() - 16),\n                        \"height\": stepHeight * (numberOfSteps - 1)\n                    });\n                } else {\n                    steps.css(\"max-width\", 100 / numberOfSteps + \"%\");\n\n                    if (kendo.support.isRtl(this.wrapper)) {\n                        margin = \"margin-right\";\n                    }\n                    style[margin] = stepWidth / 2;\n                    style.width = stepWidth * (numberOfSteps - 1);\n\n                    progressElement.css(style);\n                }\n            },\n\n            _createStep: function(stepOptions, idx, isLastStep) {\n                var that = this,\n                    isFirstStep = idx === 0,\n                    options = that.options,\n                    indicatorVisible = options.indicator,\n                    labelVisible = options.label;\n\n                stepOptions = extend({}, stepOptions, {\n                    enabled: stepOptions.enabled === false ? false : true\n                });\n\n                stepOptions = extend({}, stepOptions, {\n                    isFirstStep: isFirstStep,\n                    isLastStep: isLastStep,\n                    indicatorVisible: indicatorVisible,\n                    labelVisible: labelVisible,\n                    index: idx\n                });\n\n                return new Step(stepOptions);\n            },\n\n            _createSteps: function() {\n                var that = this,\n                    stepsOptions = that.options.steps,\n                    selected = false,\n                    step, idx, isLastStep, stepOpt;\n\n                that._steps = [];\n\n                for (idx = 0; idx < stepsOptions.length; idx++) {\n                    stepOpt = stepsOptions[idx];\n\n                    if (typeof stepOpt === \"string\") {\n                        stepOpt = {\n                            label: stepOpt\n                        };\n                    }\n\n                    if (stepOpt !== undefined$1) {\n                        isLastStep = idx === stepsOptions.length - 1;\n\n                        if (stepOpt.selected) {\n                            selected = true;\n                        } else {\n                            stepOpt = that._selectablePreviousState(stepOpt, selected, idx);\n                        }\n\n                        step = that._createStep(stepOpt, idx, isLastStep);\n                        that._steps.push(step);\n\n                        if (step.getSelected()) {\n                            that.selectedStep = step;\n                        }\n                    }\n                }\n            },\n\n            _indicatorAndLabel: function() {\n                if (!this.options.indicator && !this.options.label) {\n                    this.options.indicator = true;\n                    this.options.label = true;\n                }\n            },\n\n            _focusout: function(e) {\n                var that = this;\n\n                if (!that.wrapper.get(0).contains(e.relatedTarget)) {\n                    setTimeout(function() {\n                        that._leaveStepper();\n                    });\n                }\n            },\n\n            _focusStep: function(newStep) {\n                var focusedStep = this.wrapper.find(DOT + stepStyles.focusStep),\n                    allStepLinks = this.wrapper.find(DOT + stepStyles.stepLink);\n\n                if (newStep.length > 0) {\n                    focusedStep.removeClass(stepStyles.focusStep);\n                    allStepLinks.attr(TABINDEX, \"-1\");\n                    newStep.find(DOT + stepStyles.stepLink).removeAttr(TABINDEX)[0].focus();\n                }\n            },\n\n            _focusNextStep: function() {\n                var focusedStep = $(document.activeElement).closest(DOT + stepStyles.step),\n                    nextStep = focusedStep.next();\n\n                this._focusStep(nextStep);\n            },\n\n            _focusPreviousStep: function() {\n                var focusedStep = $(document.activeElement).closest(DOT + stepStyles.step),\n                    previousStep = focusedStep.prev();\n\n                this._focusStep(previousStep);\n            },\n\n            _focusFirstStep: function() {\n                var wrapper = this.wrapper,\n                    firstStep = wrapper.find(DOT + stepStyles.firstStep);\n\n                this._focusStep(firstStep);\n            },\n\n            _focusLastStep: function() {\n                var wrapper = this.wrapper,\n                    lastStep = wrapper.find(DOT + stepStyles.lastStep);\n\n                this._focusStep(lastStep);\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    keyCode = e.keyCode,\n                    focusedStepElement = $(document.activeElement).closest(DOT + stepStyles.step),\n                    focusedStepIndex = focusedStepElement.index(),\n                    stepsCount = that.steps().length;\n\n                if (keyCode === keys.TAB) {\n                    if (e.shiftKey && focusedStepIndex > 0) {\n                        e.preventDefault();\n                        that._tabKey(e, -1);\n                    } else if (!e.shiftKey && focusedStepIndex < stepsCount - 1) {\n                        e.preventDefault();\n                        that._tabKey(e, +1);\n                    }\n                } else if (keyCode > 34 && keyCode < 41) {\n                    e.preventDefault();\n                    that._navKeys(e);\n                } else if (keyCode === keys.ENTER || keyCode === keys.SPACEBAR) {\n                    e.preventDefault();\n                    that._selectHandler(e, $(document.activeElement).closest(DOT + stepStyles.step));\n                } else {\n                    e.preventDefault();\n                }\n            },\n\n            _leaveStepper: function() {\n                var selectedStep = this.wrapper.find(DOT + stepStyles.currentStep),\n                    allStepLinks = this.wrapper.find(DOT + stepStyles.stepLink);\n\n                allStepLinks.removeClass(stepStyles.focusStep).attr(TABINDEX, \"-1\");\n\n                selectedStep.addClass(stepStyles.focusStep);\n                selectedStep.find(DOT + stepStyles.stepLink).removeAttr(TABINDEX);\n            },\n\n            _navKeys: function(e) {\n                var selectOnFocus = this.options.selectOnFocus;\n\n                if (selectOnFocus) {\n                    this._navKeysSelect(e);\n                } else {\n                    this._navKeysFocus(e);\n                }\n            },\n\n            _navKeysFocus: function(e) {\n                var keyCode = e.keyCode,\n                    rtl = kendo.support.isRtl(this.wrapper),\n                    orientation = this.options.orientation;\n\n                switch (keyCode) {\n                    case keys.DOWN:\n                        if (rtl && orientation !== VERTICAL) {\n                            this._focusPreviousStep();\n                        } else {\n                            this._focusNextStep();\n                        }\n                        break;\n                    case keys.RIGHT:\n                        if (rtl) {\n                            this._focusPreviousStep();\n                        } else {\n                            this._focusNextStep();\n                        }\n                        break;\n                    case keys.UP:\n                        if (rtl && orientation !== VERTICAL) {\n                            this._focusNextStep();\n                        } else {\n                            this._focusPreviousStep();\n                        }\n                        break;\n                    case keys.LEFT:\n                        if (rtl) {\n                            this._focusNextStep();\n                        } else {\n                            this._focusPreviousStep();\n                        }\n                        break;\n                    case keys.HOME:\n                        this._focusFirstStep();\n                        break;\n                    case keys.END:\n                        this._focusLastStep();\n                        break;\n                }\n            },\n\n            _navKeysSelect: function(e) {\n                var keyCode = e.keyCode,\n                    focusedStepIndex = $(document.activeElement).closest(DOT + stepStyles.step).index(),\n                    rtl = kendo.support.isRtl(this.wrapper),\n                    steps = this.steps(),\n                    orientation = this.options.orientation,\n                    targetStep;\n\n                switch (keyCode) {\n                    case keys.DOWN:\n                        if (rtl && orientation !== VERTICAL) {\n                            targetStep = steps[focusedStepIndex - 1];\n                        } else {\n                            targetStep = steps[focusedStepIndex + 1];\n                        }\n                        break;\n                    case keys.RIGHT:\n                        if (rtl) {\n                            targetStep = steps[focusedStepIndex - 1];\n                        } else {\n                            targetStep = steps[focusedStepIndex + 1];\n                        }\n                        break;\n                    case keys.UP:\n                        if (rtl && orientation !== VERTICAL) {\n                            targetStep = steps[focusedStepIndex + 1];\n                        } else {\n                            targetStep = steps[focusedStepIndex - 1];\n                        }\n                        break;\n                    case keys.LEFT:\n                        if (rtl) {\n                            targetStep = steps[focusedStepIndex + 1];\n                        } else {\n                            targetStep = steps[focusedStepIndex - 1];\n                        }\n                        break;\n                    case keys.HOME:\n                        targetStep = steps[0];\n                        break;\n                    case keys.END:\n                        targetStep = steps[steps.length - 1];\n                        break;\n                }\n\n                if (targetStep) {\n                    this._focusStep(targetStep.element);\n                    this._selectHandlerOnKey(e, targetStep.element);\n                }\n            },\n\n            _progressBar: function() {\n                var wrapper = this.wrapper,\n                    progressBarOptions = this._progressOptions();\n\n                this.progressBar = $(\"<div>\").kendoProgressBar(progressBarOptions).getKendoProgressBar();\n\n                // TODO: for 2021 R2 the following line must be removed!\n                this.progressBar.element.css(\"position\", \"absolute\");\n\n                this._calculateDimensions();\n\n                wrapper.append(this.progressBar.element);\n            },\n\n            _progressOptions: function() {\n                var options = this.options,\n                    orientation = options.orientation,\n                    stepsOptions = options.steps,\n                    numberOfSteps, progressBarOptions;\n\n                if (!stepsOptions || stepsOptions.length === 0) {\n                    return;\n                } else {\n                    numberOfSteps = stepsOptions.length;\n                }\n\n                progressBarOptions = {\n                    max: numberOfSteps - 1,\n                    value: this.select().getIndex(),\n                    orientation: orientation,\n                    showStatus: false\n                };\n\n                if (orientation === VERTICAL) {\n                    progressBarOptions.reverse = true;\n                }\n\n                return progressBarOptions;\n            },\n\n            _resetProgressBar: function() {\n                var progressBar = this.progressBar,\n                    newOptions;\n\n                if (!progressBar) {\n                    return;\n                }\n\n                newOptions = this._progressOptions();\n                progressBar.setOptions(newOptions);\n            },\n\n            _renderSteps: function() {\n                var steps = this._steps,\n                    stepsList = this._stepList,\n                    step, idx;\n\n                stepsList.empty();\n\n                for (idx = 0; idx < steps.length; idx++) {\n                    step = steps[idx];\n                    stepsList.append(step.element);\n                }\n            },\n\n            _resetStep: function(i, index, forward) {\n                var step = this._steps[i];\n\n                if (i === index) {\n                    step.options.previous = false;\n                    step.options.selected = true;\n                } else if ((forward || i > index) && (!forward || i < index)) {\n                    step.options.selected = false;\n                    step.options.previous = forward;\n                }\n\n                if (this.options.linear && (i < index - 1 || i > index + 1)) {\n                    step.options.selectable = false;\n                } else {\n                    step.options.selectable = true;\n                }\n\n                step._link();\n                step._stepClasses();\n                this.options.steps[i] = step.options;\n            },\n\n            _select: function(index) {\n                var options = this.options,\n                    linear = options.linear,\n                    selectedStep = this.select(),\n                    selectedIndex = selectedStep.getIndex(),\n                    stepsOptions = options.steps,\n                    targetStep = this._steps[index],\n                    forward, i, min, max;\n\n                if (!targetStep || !targetStep.getEnabled()) {\n                    return;\n                }\n\n                if (index > selectedIndex) {\n                    forward = true;\n\n                    if (linear) {\n                        min = Math.max(selectedIndex - 1, 0);\n                        max = Math.min(index + 1, stepsOptions.length - 1);\n                    } else {\n                        min = selectedIndex;\n                        max = index;\n                    }\n                } else {\n                    forward = false;\n\n                    if (linear) {\n                        min = Math.max(index - 1, 0);\n                        max = Math.min(selectedIndex + 1, stepsOptions.length - 1);\n                    } else {\n                        min = index;\n                        max = selectedIndex;\n                    }\n                }\n\n                for (i = min; i <= max; i ++) {\n                    this._resetStep(i, index, forward);\n                }\n\n                this.selectedStep = targetStep;\n                this.progressBar.value(index);\n            },\n\n            _selectablePreviousState: function(stepOpt, selected, idx) {\n                var stepsOptions = this.options.steps,\n                    linear = this.options.linear;\n\n                if (!selected) {\n                    stepOpt.previous = true;\n                    if (linear && !stepsOptions[idx + 1].selected) {\n                        stepOpt.selectable = false;\n                    } else {\n                        stepOpt.selectable = true;\n                    }\n                } else if (linear && !stepsOptions[idx - 1].selected) {\n                    stepOpt.selectable = false;\n                } else {\n                    stepOpt.selectable = true;\n                }\n\n                return stepOpt;\n            },\n\n            _selectClickHandler: function(e) {\n                var stepElement = $(e.target).closest(DOT + stepStyles.step);\n\n                e.preventDefault();\n                this._preventWrapperClick = true;\n                this._selectHandler(e, stepElement);\n            },\n\n            _selectHandler: function(e, stepElement) {\n                var that = this,\n                    step = that._steps[stepElement.index()],\n                    currentStep = this.select();\n\n                if (!step || step.getIndex() === currentStep.getIndex() || !step.getEnabled() || !step.getSelectable()) {\n                    that._focusStep(currentStep.element);\n\n                    return;\n                }\n\n                if (!that.trigger(SELECT, { sender: that, originalEvent: e, step: step })) {\n                    that._select(step.getIndex());\n                    stepElement.find(DOT + stepStyles.stepLink)[0].focus();\n                    that.trigger(ACTIVATE, { sender: that, originalEvent: e, step: step });\n                }\n            },\n\n            _selectHandlerOnKey: function(e, stepElement) {\n                var that = this,\n                    step = that._steps[stepElement.index()];\n\n                if (!step.getEnabled() || !step.getSelectable()) {\n                    return;\n                }\n\n                if (!that.trigger(SELECT, { sender: that, originalEvent: e, step: step })) {\n                    that._select(step.getIndex());\n                    stepElement.find(DOT + stepStyles.stepLink)[0].focus();\n                    that.trigger(ACTIVATE, { sender: that, originalEvent: e, step: step });\n                }\n            },\n\n            _tabKey: function(e, shift) {\n                var selectOnFocus = this.options.selectOnFocus,\n                    focusedStepElement = $(document.activeElement).closest(DOT + stepStyles.step),\n                    focusedStepIndex = focusedStepElement.index(),\n                    targetStep = $(focusedStepElement.parent().find(DOT + stepStyles.step)[focusedStepIndex + shift]);\n\n                this._focusStep(targetStep);\n\n                if (selectOnFocus) {\n                    this._selectHandlerOnKey(e, targetStep);\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element;\n\n                that.wrapper = element;\n                that.wrapper.addClass(stepperStyles.widget);\n\n                if (that.options.linear) {\n                    that.wrapper.addClass(stepperStyles.stepperLinear);\n                }\n\n                this._addStepList();\n            },\n\n            _wrapperClickHandler: function(e) {\n                var currentStep = this.select();\n\n                if (!this._preventWrapperClick) {\n                    e.preventDefault();\n                    this._focusStep(currentStep.element);\n                } else {\n                    this._preventWrapperClick = false;\n                }\n            }\n        });\n\n        kendo.stepper = {\n            Step: Step\n        };\n\n        kendo.ui.plugin(Stepper);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}