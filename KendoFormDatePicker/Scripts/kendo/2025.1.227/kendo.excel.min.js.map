{"version":3,"sources":["raw-js/kendo.excel.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Excel","Core","Data","OoxmlCmnChunk","this","kendo_core_js","kendo_data_js","kendo_ooxml_cmn_chunk_js","$","extend","convertedExporter","ConvertClass","E","T","register","compile","template","ExcelExporter","Class","init","options","dataSource","data","DataSource","filter","undefined","constructor","page","allPages","pageSize","groupPaging","total","sort","group","aggregate","isExcelExportRequest","length","hierarchy","i","expanded","shouldRestoreExpandedState","_data","transport","_isServerGrouped","create","_hierarchy","level","itemLevel","item","view","depth","idx","_restoreExpandedState","workbook","Deferred","d","fetch","then","groups","aggregates","resolve","bind","promise","window","excel","TemplateService","jQuery","ExcelMixin","proto","events","push","saveAsExcel","proxyURL","filterable","fileName","collapsible","deferred","exporter","columns","book","trigger","ooxml","Workbook","skipCustomHeight","toDataURLAsync","dataURI","saveAs","forceProxy","__meta__","id","name","category","advanced","mixin","depends"],"mappings":"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","file":"kendo.excel.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.data.js'), require('kendo.ooxml.cmn.chunk.js'), require('kendo.ooxml.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.data', 'kendo.ooxml.cmn.chunk', 'kendo.ooxml'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Excel = {}), global.kendo._globals.Core, global.kendo._globals.Data, global.kendo._globals.OoxmlCmnChunk));\n})(this, (function (exports, kendo_core_js, kendo_data_js, kendo_ooxml_cmn_chunk_js) {\n    (function($, kendo) {\n\n        var extend = $.extend;\n        let convertedExporter = kendo.ConvertClass(kendo_ooxml_cmn_chunk_js.E);\n\n        kendo_ooxml_cmn_chunk_js.T.register({\n            compile: kendo.template\n        });\n\n        kendo.ExcelExporter = kendo.Class.extend({\n            init: function(options) {\n                this.options = options;\n                var dataSource = options.dataSource;\n\n                if (dataSource instanceof kendo.data.DataSource) {\n\n                    if (!dataSource.filter()) {\n                        dataSource.options.filter = undefined;\n                    }\n\n                    this.dataSource = new dataSource.constructor(extend(\n                        {},\n                        dataSource.options,\n                        {\n                            page: options.allPages ? 0 : dataSource.page(),\n                            filter: dataSource.filter(),\n                            pageSize: (options.allPages || options.groupPaging) ? dataSource.total() : dataSource.pageSize() || dataSource.total(),\n                            sort: dataSource.sort(),\n                            group: dataSource.group(),\n                            aggregate: dataSource.aggregate(),\n                            isExcelExportRequest: true\n                        }));\n\n                    var data = dataSource.data();\n\n                    if (data.length > 0) {\n                        if (options.hierarchy) {\n                            for (var i = 0; i < data.length; i++) {\n                                if (data[i].expanded === false || data[i].expanded === undefined) {\n                                    data[i].expanded = true;\n                                    data[i].shouldRestoreExpandedState = true;\n                                }\n                            }\n                        }\n                        // Avoid toJSON() for perf and avoid data() to prevent reparenting.\n                        this.dataSource._data = data;\n\n                        var transport = this.dataSource.transport;\n                        if (dataSource._isServerGrouped() && transport.options && transport.options.data) { // clear the transport data when using aspnet-mvc transport\n                            transport.options.data = null;\n                        }\n                    }\n\n                } else {\n                    this.dataSource = kendo.data.DataSource.create(dataSource);\n                }\n            },\n\n            _hierarchy: function() {\n                var hierarchy = this.options.hierarchy;\n                var dataSource = this.dataSource;\n\n                if (hierarchy && dataSource.level) {\n                    hierarchy = {\n                        itemLevel: function(item) {\n                            return dataSource.level(item);\n                        }\n                    };\n\n                    var view = dataSource.view();\n                    var depth = 0;\n                    var level;\n\n                    for (var idx = 0; idx < view.length; idx++) {\n                        level = dataSource.level(view[idx]);\n\n                        if (level > depth) {\n                            depth = level;\n                        }\n                    }\n\n                    hierarchy.depth = depth + 1;\n                } else {\n                    hierarchy = false;\n                }\n\n                return {\n                    hierarchy: hierarchy\n                };\n            },\n\n            _restoreExpandedState: function() {\n                var options = this.options,\n                    dataSource = options.dataSource,\n                    data = dataSource.data(),\n                    hierarchy = options.hierarchy;\n\n                if (data.length > 0) {\n                    if (hierarchy) {\n                        for (var i = 0; i < data.length; i++) {\n                            if (data[i].shouldRestoreExpandedState) {\n                                data[i].expanded = false;\n                                delete data[i].shouldRestoreExpandedState;\n                            }\n                        }\n                    }\n                }\n            },\n\n            workbook: function() {\n                return $.Deferred((function(d) {\n                    this.dataSource.fetch()\n                        .then((function() {\n\n                            var workbook = new convertedExporter(extend({}, this.options, this._hierarchy(), {\n                                data: this.dataSource.view(),\n                                groups: this.dataSource.group(),\n                                aggregates: this.dataSource.aggregates()\n                            })).workbook();\n\n                            d.resolve(workbook, this.dataSource.view());\n                        }).bind(this));\n                }).bind(this)).promise();\n            }\n        });\n\n        window.kendo.excel = window.kendo.excel || {};\n        window.kendo.excel.ExcelExporter = convertedExporter;\n        window.kendo.excel.TemplateService = kendo_ooxml_cmn_chunk_js.T;\n\n    })(kendo.jQuery, kendo);\n\n    (function($, kendo) {\n\n\n    kendo.ExcelMixin = {\n        extend: function(proto) {\n           proto.events.push(\"excelExport\");\n           proto.options.excel = $.extend(proto.options.excel, this.options);\n           proto.saveAsExcel = this.saveAsExcel;\n        },\n        options: {\n            proxyURL: \"\",\n            allPages: false,\n            filterable: false,\n            fileName: \"Export.xlsx\",\n            collapsible: false\n        },\n        saveAsExcel: function(deferred) {\n            var excel = this.options.excel || {};\n\n            var exporter = new kendo.ExcelExporter({\n                columns: this.columns,\n                dataSource: this.dataSource,\n                allPages: excel.allPages,\n                filterable: excel.filterable,\n                hierarchy: excel.hierarchy,\n                collapsible: excel.collapsible\n            });\n\n            exporter.workbook().then((function(book, data) {\n                if (!this.trigger(\"excelExport\", { workbook: book, data: data })) {\n                    var workbook = new kendo.ooxml.Workbook(book);\n\n                    if (!workbook.options) {\n                        workbook.options = {};\n                    }\n                    workbook.options.skipCustomHeight = true;\n\n                    workbook.toDataURLAsync().then(function(dataURI) {\n                        kendo.saveAs({\n                            dataURI: dataURI,\n                            fileName: book.fileName || excel.fileName,\n                            proxyURL: excel.proxyURL,\n                            forceProxy: excel.forceProxy\n                        });\n\n                        if (exporter._restoreExpandedState) {\n                            exporter._restoreExpandedState();\n                        }\n\n                        if (deferred) {\n                            deferred.resolve();\n                        }\n                    });\n                } else if (deferred) {\n                    deferred.resolve();\n                }\n            }).bind(this));\n        }\n    };\n\n    })(kendo.jQuery, kendo);\n\n    const __meta__ = {\n        id: \"excel\",\n        name: \"Excel export\",\n        category: \"framework\",\n        advanced: true,\n        mixin: true,\n        depends: [\"data\", \"ooxml\", \"ooxml.cmn.chunk\"]\n    };\n\n    exports.__meta__ = __meta__;\n\n}));\n"]}