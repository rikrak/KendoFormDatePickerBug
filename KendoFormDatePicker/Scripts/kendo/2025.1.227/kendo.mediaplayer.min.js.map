{"version":3,"sources":["raw-js/kendo.mediaplayer.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Mediaplayer","this","$","window","END","PAUSE","PLAY","READY","TIMECHANGE","VOLUMECHANGE","FULLSCREEN_ENTER","FULLSCREEN_EXIT","MUTE","LOW_VOLUME","HIGH_VOLUME","VIDEO_QUALITY","STATE_PLAY","STATE_PAUSE","TITLEBAR","TOOLBAR","SLIDER","VOLUME_SLIDER","MEDIA","OVERLAY","YTPLAYER","DOT","STATE_PLAY_SELECTOR","FULLSCREEN_ENTER_SELECTOR","FULLSCREEN_EXIT_SELECTOR","MUTE_SELECTOR","LOW_VOLUME_SELECTOR","HIGH_VOLUME_SELECTOR","SLIDER_SELECTED_STATE","ui","ns","baseTime","Date","timeZoneSec","getTimezoneOffset","Widget","isArray","Array","timeFormats","template","keys","templates","htmlPlayer","titleBar","toolBar","youtubePlayer","toolBarTime","slider","volumeSlider","qualityDropDown","toolTip","value","toString","MediaPlayer","extend","init","element","options","wrapper","fn","call","addClass","_currentIndex","_createTitlebar","_createToolbar","_createDropDown","_createSlider","_createVolumeSlider","_timers","_aria","_navigatable","fullScreen","media","notify","events","name","autoPlay","autoRepeat","volume","mute","navigatable","forwardSeek","messages","pause","play","unmute","quality","fullscreen","_msToTime","ms","time","getTime","setSeconds","_timeToSec","_titleBar","find","length","append","sliderElement","_slider","_sliderDragChangeHandler","_sliderDragChange","bind","_sliderDraggingHandler","_sliderDragging","Slider","smallStep","tickPlacement","showButtons","change","slide","tooltip","dragHandleTitle","volumeSliderElement","_volumeSlider","_volumeDraggingHandler","_volumeDragging","_volumeChangeHandler","_volumeChange","width","min","max","enabled","_resetTime","_youTubeVideo","_ytmedia","seekTo","_media","currentTime","_mediaTimeUpdate","grep","_toolBar","items","e","_currentUrl","source","url","_isYouTubeUrl","match","_setPlayerUrl","oldPlayer","stop","toggle","initialized","_initializePlayer","_videoOverlay","hide","loadVideoById","_getMediaId","_playStateToggle","cueVideoById","show","remove","attr","toolBarElement","_toolbarClickHandler","_toolbarClick","ToolBar","click","resizable","type","attributes","class","icon","fillMode","off","before","_volumeButton","_fullscreenButton","_currentTimeElement","_durationElement","_playButton","_playButtonSpan","support","cssFlexbox","wrapAll","hdIcon","dropDownElement","data","_dropDownSelectHandler","_dropDownSelect","_dropDown","DropDownList","dataTextField","dataValueField","popup","position","origin","appendTo","animation","open","effects","duration","select","setDataSource","replaceWith","list","item","index","target","children","first","isPaused","is","_isInFullScreen","muted","_isDragging","that","sender","tzOffset","_sliderChangeFired","_seekBarLastPosition","setTimeout","trigger","_preventPlay","_changeVolumeButtonImage","volumeButton","volumeElement","getCurrentTime","timeInMs","text","_timeFormat","isPlaying","_mediaEnded","_mediaPlay","_mediaReady","_mediaDurationChange","durationTime","getDuration","getHours","setOptions","_isFirstRun","_createYoutubePlayer","_mediaTimeUpdateHandler","_mediaDurationChangeHandler","prepend","_ytPlayer","css","height","YT","Player","_configurePlayer","onYouTubeIframeAPIReadyRegister","getScript","onYouTubeIframeAPIReady","i","_youtubeApiReady","_poll","callback","interval","context","clearTimeout","callLater","vars","autoplay","wmode","controls","rel","showinfo","_onYouTubePlayerReady","onYouTubePlayerReady","_onPlayerStateChangeHandler","_onPlayerStateChange","onPlayerStateChange","videoId","playerVars","onReady","onStateChange","event","getIframe","style","_updateTitle","titlebar","title","_paused","setVolume","_uiDisplay","result","_mouseClick","_mouseMoveHandler","_mouseMove","_mouseInHandler","_mouseIn","_mouseOutHandler","_mouseOut","on","_createHtmlPlayer","_mouseClickHanlder","_mediaEndedHandler","_mediaCanPlayHandler","_mediaPlayHandler","after","ontimeupdate","ondurationchange","oncanplay","onplay","onended","loop","_shownOnKeydown","_mouseIdle","state","speed","animationSpeed","uiElements","add","parent","fadeIn","fadeOut","destroy","_keyDownHandler","_fullscreenHandler","_youtubeApiReadyHandler","src","_mouseMoveTimer","seek","seconds","playVideo","mobileOS","stopVideo","pauseVideo","toolbar","dropdown","enterFullScreen","get","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","document","cancelFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msCancelFullscreen","exitFullscreen","msExitFullscreen","removeClass","resize","_volume","currentState","isMuted","unMute","getVolume","isEnded","getPlayerState","ended","_mediaData","_fullscreen","_keyDown","isFullScreen","mozFullScreen","webkitIsFullScreen","fullscreenSpan","_keyIdle","preventDefault","fsButton","keyCode","SPACEBAR","ENTER","ESC","LEFT","RIGHT","_sliderKeyNav","UP","DOWN","ctrlKey","_qualityDropDownKeyNav","_error","_progress","_setValueInRange","_keyMap","operation","dataSource","field","currentSelected","selectedIndex","at","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default","Object","defineProperty"],"mappings":"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","file":"kendo.mediaplayer.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.slider.js'), require('kendo.toolbar.js'), require('kendo.dropdownlist.js'), require('kendo.tooltip.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.slider', 'kendo.toolbar', 'kendo.dropdownlist', 'kendo.tooltip', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Mediaplayer = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n            id: \"mediaplayer\",\n            name: \"MediaPlayer\",\n            category: \"web\",\n            description: \"\",\n            depends: [\"slider\", \"toolbar\", \"dropdownlist\", \"tooltip\", \"icons\"]\n        };\n\n        (function($, undefined$1) {\n            var kendo = window.kendo,\n                END = \"end\",\n                PAUSE = \"pause\",\n                PLAY = \"play\",\n                READY = \"ready\",\n                TIMECHANGE = \"timeChange\",\n                VOLUMECHANGE = \"volumeChange\",\n                FULLSCREEN_ENTER = \"fullscreen\",\n                FULLSCREEN_EXIT = \"fullscreen-exit\",\n                MUTE = \"volume-mute\",\n                LOW_VOLUME = \"volume-down\",\n                HIGH_VOLUME = \"volume-up\",\n                VIDEO_QUALITY = \"k-mediaplayer-quality\",\n                STATE_PLAY = \"play\",\n                STATE_PAUSE = \"pause\",\n                TITLEBAR = \"k-mediaplayer-titlebar\",\n                TITLE = \"k-title\",\n                TOOLBARWRAP = \"k-mediaplayer-toolbar-wrap\",\n                TOOLBAR = \"k-mediaplayer-toolbar\",\n                SLIDER = \"k-mediaplayer-seekbar\",\n                VOLUME_SLIDER = \"k-mediaplayer-volume\",\n                MEDIA = \"k-mediaplayer-media\",\n                OVERLAY = \"k-mediaplayer-overlay\",\n                YTPLAYER = \"k-mediaplayer-yt\",\n                DOT = \".\",\n                STATE_PLAY_SELECTOR = 'span[class*=\"i-' + STATE_PLAY + '\"]',\n                STATE_PAUSE_SELECTOR = 'span[class*=\"i-' + STATE_PAUSE + '\"]',\n                FULLSCREEN_ENTER_SELECTOR = 'span[class*=\"i-' + FULLSCREEN_ENTER + '\"]',\n                FULLSCREEN_EXIT_SELECTOR = 'span[class*=\"i-' + FULLSCREEN_EXIT + '\"]',\n                MUTE_SELECTOR = 'span[class*=\"i-' + MUTE + '\"]',\n                LOW_VOLUME_SELECTOR = 'span[class*=\"i-' + LOW_VOLUME + '\"]',\n                HIGH_VOLUME_SELECTOR = 'span[class*=\"i-' + HIGH_VOLUME + '\"]',\n                SLIDER_SELECTED_STATE = '.k-draghandle.k-selected',\n                ui = kendo.ui,\n                ns = \".kendoMediaPlayer\",\n                baseTime = new Date(1970, 0, 1),\n                timeZoneSec = baseTime.getTimezoneOffset() * 60,\n                Widget = kendo.ui.Widget,\n                isArray = Array.isArray,\n                timeFormats = {\n                    shortTime: \"mm:ss\",\n                    longTime: \"HH:mm:ss\"\n                },\n                template = kendo.template,\n                keys = kendo.keys,\n                templates = {\n                    htmlPlayer: () => \"<video class='\" + MEDIA + \"'> </video>\",\n                    titleBar: template(() => \"<div class='\" + TITLEBAR + \"'><span class='\" + TITLE + \"'>Video Title</span></div>\"),\n                    toolBar: () => \"<div class='\" + TOOLBARWRAP + \"'><div class='\" + TOOLBAR + \"'></div></div>\",\n                    youtubePlayer: () => \"<div class='\" + YTPLAYER + \"'> </div>\",\n                    toolBarTime: () => \"<span class='k-mediaplayer-currenttime'>00:00:00</span> / <span class='k-mediaplayer-duration'>00:00:00</span>\",\n                    slider: () => \"<input class='\" + SLIDER + \"' value='0' title='seekbar' />\",\n                    volumeSlider: () => \"<input class='\" + VOLUME_SLIDER + \"' title='volume'/>\",\n                    qualityDropDown: () => \"<input class='\" + VIDEO_QUALITY + \"' title='video quality' />\",\n                    toolTip: ({ value }) => `${kendo.toString(new Date(value), 'HH:mm:ss')}`\n                };\n\n            var MediaPlayer = Widget.extend({\n                init: function(element, options) {\n                    this.wrapper = $(element);\n\n                    Widget.fn.init.call(this, element, options);\n\n                    this.wrapper.addClass(\"k-mediaplayer k-widget\");\n\n                    options = this.options;\n\n                    this._currentIndex = 0;\n\n                    this._createTitlebar();\n\n                    this._createToolbar();\n\n                    this._createDropDown();\n\n                    this._createSlider();\n\n                    this._createVolumeSlider();\n\n                    this._timers = {};\n\n                    this._aria();\n\n                    this._navigatable();\n\n                    if (options.fullScreen) {\n                        this.fullScreen(true);\n                    }\n\n                    if (options.media) {\n                        this.media(this.options.media);\n                    }\n\n                    kendo.notify(this);\n                },\n\n                events: [\n                    END,\n                    PAUSE,\n                    PLAY,\n                    READY,\n                    TIMECHANGE,\n                    VOLUMECHANGE\n                ],\n\n                options: {\n                    name: \"MediaPlayer\",\n                    autoPlay: false,\n                    autoRepeat: false,\n                    volume: 100,\n                    fullScreen: false,\n                    mute: false,\n                    navigatable: false,\n                    forwardSeek: true,\n                    media: null,\n                    messages: {\n                        \"pause\": \"Pause\",\n                        \"play\": \"Play\",\n                        \"mute\": \"Mute\",\n                        \"unmute\": \"Unmute\",\n                        \"quality\": \"Quality\",\n                        \"fullscreen\": \"Full Screen\"\n                    }\n                },\n\n                _msToTime: function(ms) {\n                    var time = new Date(baseTime.getTime());\n                    time.setSeconds(ms);\n                    return time;\n                },\n\n                _timeToSec: function(time) {\n                    var curTime = new Date(time).getTime();\n                    return curTime / 1000;\n                },\n\n                _createTitlebar: function() {\n                    this._titleBar = this.wrapper.find(DOT + TITLEBAR);\n                    if (this._titleBar.length === 0) {\n                        this.wrapper.append(templates.titleBar);\n                        this._titleBar = this.wrapper.find(DOT + TITLEBAR);\n                    }\n                },\n\n                _createSlider: function() {\n                    var sliderElement = this.wrapper.find(DOT + SLIDER);\n                    if (!this._slider) {\n                        this._sliderDragChangeHandler = this._sliderDragChange.bind(this);\n                        this._sliderDraggingHandler = this._sliderDragging.bind(this);\n                        sliderElement = this.wrapper.find(DOT + SLIDER);\n\n                        this._slider = new ui.Slider(sliderElement[0], {\n                            smallStep: 1000,\n                            tickPlacement: \"none\",\n                            showButtons: false,\n                            change: this._sliderDragChangeHandler,\n                            slide: this._sliderDraggingHandler,\n                            tooltip: {\n                                template: templates.toolTip\n                            },\n                            dragHandleTitle: this.options.messages.time\n                        });\n                    }\n                },\n\n                _createVolumeSlider: function() {\n                    var volumeSliderElement = this.wrapper.find(DOT + VOLUME_SLIDER);\n                    if (!this._volumeSlider) {\n                        this._volumeDraggingHandler = this._volumeDragging.bind(this);\n                        this._volumeChangeHandler = this._volumeChange.bind(this);\n                        volumeSliderElement.width(87);\n                        this._volumeSlider = new ui.Slider(volumeSliderElement[0], {\n                            smallStep: 1,\n                            min: 0,\n                            max: 100,\n                            value: this.options.volume,\n                            slide: this._volumeDraggingHandler,\n                            change: this._volumeChangeHandler,\n                            tickPlacement: \"none\",\n                            showButtons: false,\n                            tooltip: { enabled: false },\n                            dragHandleTitle: this.options.messages.volume\n                        });\n                    }\n                },\n\n                _resetTime: function() {\n                    if (this._youTubeVideo) {\n                        this._ytmedia.seekTo(0, true);\n                    } else {\n                        this._media.currentTime = 0;\n                    }\n\n                    this._mediaTimeUpdate();\n                    $.grep(this._toolBar.options.items, function(e) { return !!e.template; }).template = templates.toolBarTime;\n                },\n\n                _currentUrl: function() {\n                    var media = this.media();\n                    return isArray(media.source) ? media.source[this._currentIndex].url : media.source;\n                },\n\n                _isYouTubeUrl: function() {\n                    return !!this._currentUrl().match(\"youtube.com/|youtu.be/\");\n                },\n\n                _setPlayerUrl: function() {\n                    var oldPlayer = this._youTubeVideo;\n                    this.stop();\n\n                    this._youTubeVideo = this._isYouTubeUrl();\n\n                    if (oldPlayer !== this._youTubeVideo) {\n                        this.wrapper.find(DOT + YTPLAYER).toggle();\n                        this.wrapper.find(DOT + MEDIA).toggle();\n                    }\n\n                    var initialized = this._media || this._ytmedia;\n\n                    this._initializePlayer();\n\n                    if (initialized) { //mute and volume settings should be persisted when switching between html and youtube players\n                        this.mute(this.mute());\n                        this.volume(this.volume());\n                    }\n\n                    if (!this._youTubeVideo) {\n                        this._videoOverlay.show();\n                        this.wrapper.find(DOT + MEDIA + \" > source\").remove();\n                        this.wrapper.find(DOT + MEDIA).attr(\"src\", this._currentUrl());\n\n                        if (this.options.autoPlay) {\n                            this.play();\n                        }\n                    }\n                    else if (this._ytmedia) {\n                        if (this._videoOverlay) {\n                            this._videoOverlay.hide();\n                        }\n                        if (this.options.autoPlay) {\n                            this._ytmedia.loadVideoById(this._getMediaId());\n                            this._playStateToggle(true);\n                        }\n                        else {\n                            this._ytmedia.cueVideoById(this._getMediaId());\n                            this._playStateToggle(true);\n                        }\n                    }\n                },\n\n                _createToolbar: function() {\n                    var toolBarElement = this.wrapper.find(DOT + TOOLBAR);\n                    if (toolBarElement.length === 0) {\n                        this._toolbarClickHandler = this._toolbarClick.bind(this);\n                        this.wrapper.append(templates.toolBar);\n                        toolBarElement = this.wrapper.find(DOT + TOOLBAR);\n                        toolBarElement.width(this.wrapper.find(DOT + MEDIA).width());\n                        this._toolBar = new ui.ToolBar(toolBarElement, {\n                            click: this._toolbarClickHandler,\n                            resizable: false,\n                            items: [\n                                {\n                                    type: \"button\",\n                                    attributes: { \"class\": \"k-play-button\" },\n                                    icon: \"play\",\n                                    fillMode: \"flat\"\n                                },\n                                {\n                                    template: templates.toolBarTime,\n                                    attributes: { \"class\": \"k-mediaplayer-currenttime-wrap\" }\n                                },\n                                {\n                                    type: \"spacer\"\n                                },\n                                {\n                                    type: \"button\",\n                                    attributes: { \"class\": \"k-volume-button\" },\n                                    icon: \"volume-up\",\n                                    fillMode: \"flat\"\n                                },\n                                {\n                                    template: templates.volumeSlider,\n                                    attributes: { \"class\": \"k-mediaplayer-volume-wrap\" }\n                                },\n                                {\n                                    template: templates.qualityDropDown,\n                                    attributes: { \"class\": \"k-mediaplayer-quality-wrap\" }\n                                },\n                                {\n                                    type: \"button\",\n                                    attributes: { \"class\": \"k-fullscreen-button\" },\n                                    icon: \"fullscreen\",\n                                    fillMode: \"flat\"\n                                }\n                            ]\n                        });\n\n                        this._toolBar.wrapper.off(\"keydown\");\n                        toolBarElement.before(templates.slider);\n\n                        this._volumeButton = toolBarElement.find(\".k-volume-button\");\n                        this._fullscreenButton = toolBarElement.find(\".k-fullscreen-button\");\n                        this._volumeButton.attr(\"title\", this.options.mute ? this.options.messages.unmute : this.options.messages.mute);\n                        this._volumeButton.attr(\"aria-label\", this.options.mute ? this.options.messages.unmute : this.options.messages.mute);\n                        this._fullscreenButton.attr(\"title\", this.options.messages.fullscreen);\n                        this._fullscreenButton.attr(\"aria-label\", this.options.messages.fullscreen);\n\n                        toolBarElement.width(\"auto\");\n                        this._currentTimeElement = toolBarElement.find(\".k-mediaplayer-currenttime\");\n                        this._durationElement = toolBarElement.find(\".k-mediaplayer-duration\");\n                        this._playButton = toolBarElement.find(\".k-play-button\");\n                        this._playButtonSpan = this._playButton.find(STATE_PLAY_SELECTOR);\n\n                        if (this.options.autoPlay) {\n                            this._playStateToggle(true);\n                        }\n\n                        if ( kendo.support.cssFlexbox === false ) {\n                            $([\n                                this._volumeButton[0],\n                                toolBarElement.find(\".k-mediaplayer-volume-wrap\")[0],\n                                toolBarElement.find(\".k-mediaplayer-quality-wrap\")[0],\n                                this._fullscreenButton[0]\n                            ]).wrapAll(\"<div class='k-align-right' />\");\n                        }\n                    }\n                },\n\n                _createDropDown: function() {\n                    var hdIcon = kendo.ui.icon(\"hd\");\n                    var dropDownElement = this.wrapper.find(DOT + VIDEO_QUALITY);\n                    var media = this.media();\n                    if (typeof dropDownElement.data(\"kendoDropDownList\") === \"undefined\") {\n                        this._dropDownSelectHandler = this._dropDownSelect.bind(this);\n                        this._dropDown = new ui.DropDownList(dropDownElement, {\n                            dataTextField: \"quality\",\n                            dataValueField: \"url\",\n                            popup: {\n                                position: \"bottom\",\n                                origin: \"top\",\n                                appendTo: this.wrapper\n                            },\n                            animation: {\n                                open: {\n                                    effects: \"slideIn:up\",\n                                    duration: 1\n                                }\n                            },\n                            select: this._dropDownSelectHandler\n                        });\n\n                        if (media && isArray(media.source)) {\n                            this._dropDown.setDataSource(media.source);\n                            this._dropDown.select(0);\n                        }\n\n                        this._dropDown.wrapper.addClass(\"k-button k-button-md k-rounded-md k-button-flat k-button-flat-base\");\n                        this._dropDown.wrapper.attr(\"title\", this.options.messages.quality).hide();\n                        this._dropDown.wrapper.find('span[class*=\"i-caret-alt-down\"]')\n                            .replaceWith(hdIcon);\n                        this._dropDown.list.addClass(\"k-quality-list\");\n                    }\n                },\n\n                _dropDownSelect: function(e) {\n                    if (this._currentIndex !== e.item.index()) {\n                        this._currentIndex = e.item.index();\n                        this._setPlayerUrl();\n                    }\n                },\n\n                _toolbarClick: function(e) {\n                    var target = $(e.target).children().first();\n                    var isPaused = target.is(STATE_PLAY_SELECTOR);\n\n                    if (!this.media()) {\n                        return;\n                    }\n\n                    if (target.is(STATE_PLAY_SELECTOR) || target.is(STATE_PAUSE_SELECTOR)) {\n                        if (isPaused) {\n                            this.play();\n                        }\n                        else {\n                            this.pause();\n                        }\n                    }\n\n                    if (target.is(FULLSCREEN_ENTER_SELECTOR) || target.is(FULLSCREEN_EXIT_SELECTOR)) {\n                        if (this._isInFullScreen) {\n                            kendo.ui.icon(target, { icon: FULLSCREEN_ENTER });\n                            this.fullScreen(false);\n                        } else {\n                            kendo.ui.icon(target, { icon: FULLSCREEN_EXIT });\n                            this.fullScreen(true);\n                        }\n                    }\n\n                    if (target.is(MUTE_SELECTOR) || target.is(LOW_VOLUME_SELECTOR) || target.is(HIGH_VOLUME_SELECTOR)) {\n                        var muted = this.mute();\n                        this.mute(!muted);\n                    }\n                },\n\n                _sliderDragging: function() {\n                    if (!this.media()) {\n                        return;\n                    }\n\n                    this._isDragging = true;\n                },\n\n                _sliderDragChange: function(e) {\n                    var that = this;\n                    var slider = e.sender;\n                    var tzOffset = timeZoneSec * 1000;\n\n                    if (!this.media()) {\n                        return;\n                    }\n\n                    that._sliderChangeFired = true;\n                    that._isDragging = false;\n\n                    if (!this.options.forwardSeek && slider.value() > this._seekBarLastPosition) {\n                        setTimeout(function() {\n                            slider.value(that._seekBarLastPosition);\n                        }, 1);\n                    } else if (this._youTubeVideo) {\n                        that._ytmedia.seekTo(that._timeToSec(e.value - tzOffset));\n                    } else {\n                        that._media.currentTime = that._timeToSec(e.value - tzOffset);\n                    }\n                    that.trigger(TIMECHANGE);\n                    that._preventPlay = true;\n                },\n\n                _changeVolumeButtonImage: function(volume) {\n                    var volumeButton = this._volumeButton;\n                    var volumeElement = volumeButton.find(\"span\");\n\n                    if (volume === 0) {\n                        kendo.ui.icon(volumeElement, { icon: MUTE });\n                        volumeButton.attr(\"title\", this.options.messages.unmute);\n                        volumeButton.attr(\"aria-label\", this.options.messages.unmute);\n                    } else if (volume > 0 && volume < 51) {\n                        kendo.ui.icon(volumeElement, { icon: LOW_VOLUME });\n                        volumeButton.attr(\"title\", this.options.messages.mute);\n                        volumeButton.attr(\"aria-label\", this.options.messages.mute);\n                    } else {\n                        kendo.ui.icon(volumeElement, { icon: HIGH_VOLUME });\n                        volumeButton.attr(\"title\", this.options.messages.mute);\n                        volumeButton.attr(\"aria-label\", this.options.messages.mute);\n                    }\n                },\n\n                _volumeDragging: function(e) {\n                    if (!this.media()) {\n                        return;\n                    }\n                    this.volume(e.value);\n                    this._changeVolumeButtonImage(e.value);\n                    this.trigger(VOLUMECHANGE);\n                },\n\n                _volumeChange: function(e) {\n                    if (!this.media()) {\n                        return;\n                    }\n                    this.volume(e.value);\n                    this._changeVolumeButtonImage(e.value);\n                    this.trigger(VOLUMECHANGE);\n                },\n\n                _mediaTimeUpdate: function() {\n                    var currentTime = (this._youTubeVideo) ? this._ytmedia.getCurrentTime() : this._media.currentTime;\n                    currentTime = currentTime ? currentTime : 0;\n                    var timeInMs = this._msToTime(currentTime);\n                    this._currentTimeElement.text(kendo.toString(timeInMs, this._timeFormat));\n                    if (!this._isDragging) {\n                        this._seekBarLastPosition = (currentTime + timeZoneSec) * 1000;\n                        this._slider.value(this._seekBarLastPosition);\n                    }\n\n                    return this.isPlaying();\n                },\n\n                _playStateToggle: function(play) {\n                    if (typeof play === \"undefined\") {\n                        play = this._playButtonSpan.is(STATE_PLAY_SELECTOR);\n                    }\n\n                    if (play) {\n                        kendo.ui.icon(this._playButtonSpan, { icon: STATE_PAUSE });\n                        this._playButton.attr(\"title\", this.options.messages.pause);\n                        this._playButton.attr(\"aria-label\", this.options.messages.pause);\n                    }\n                    else {\n                        kendo.ui.icon(this._playButtonSpan, { icon: STATE_PLAY });\n                        this._playButton.attr(\"title\", this.options.messages.play);\n                        this._playButton.attr(\"aria-label\", this.options.messages.play);\n                    }\n                },\n\n                _mediaEnded: function() {\n                    this._playStateToggle(false);\n                    this._currentTimeElement.text(kendo.toString(this._msToTime(0), this._timeFormat));\n                    this._slider.value((0 + timeZoneSec) * 1000);\n                    this.trigger(END);\n                },\n\n                _mediaPlay: function() {\n                    this.trigger(PLAY);\n                },\n\n                _mediaReady: function() {\n                    this.trigger(READY);\n                },\n\n                _mediaDurationChange: function() {\n                    var durationTime = this._msToTime((this._youTubeVideo) ? this._ytmedia.getDuration() : this._media.duration);\n\n                    this._timeFormat = durationTime.getHours() === 0 ? timeFormats.shortTime : timeFormats.longTime;\n\n                    this._durationElement.text(kendo.toString(durationTime, this._timeFormat));\n                    this._slider.setOptions({\n                        min: baseTime.getTime(),\n                        max: durationTime.getTime()\n                    });\n\n                    if (!this._isFirstRun) {\n                        this._resetTime();\n                        this._isFirstRun = true;\n                    }\n                },\n\n                _createYoutubePlayer: function() {\n                    this._mediaTimeUpdateHandler = this._mediaTimeUpdate.bind(this);\n                    this._mediaDurationChangeHandler = this._mediaDurationChange.bind(this);\n\n                    this.wrapper.prepend(templates.youtubePlayer);\n                    this._ytPlayer = this.wrapper.find(DOT + YTPLAYER)[0];\n                    $(this._ytPlayer)\n                        .css({\n                            width: this.wrapper.width(),\n                            height: this.wrapper.height()\n                        });\n\n                    if (!window.YT || !window.YT.Player) {\n                        if (!window.onYouTubeIframeAPIReadyRegister) {\n                            window.onYouTubeIframeAPIReadyRegister = [];\n                            $.getScript(\"https://www.youtube.com/iframe_api\");\n                            window.onYouTubeIframeAPIReady =\n                                function() {\n                                    if (window.onYouTubeIframeAPIReadyRegister) {\n                                        for (var i = 0; i < window.onYouTubeIframeAPIReadyRegister.length; i++) {\n                                            window.onYouTubeIframeAPIReadyRegister[i]._youtubeApiReady();\n                                        }\n                                    }\n                                    window.onYouTubeIframeAPIReadyRegister.length = 0;\n                                    window.onYouTubeIframeAPIReadyRegister = undefined$1;\n                                };\n                        }\n                        window.onYouTubeIframeAPIReadyRegister[window.onYouTubeIframeAPIReadyRegister.length] = this;\n                    }\n                    else {\n                        this._configurePlayer();\n                    }\n                },\n\n                _poll: function(name, callback, interval, context) {\n                    var that = this;\n\n                    if (that._timers[name] !== null) {\n                        clearTimeout(that._timers[name]);\n                    }\n\n                    that._timers[name] = setTimeout((function(context) {\n                        return function callLater() {\n                            if (callback.call(context)) {\n                                that._timers[name] = setTimeout(callLater, interval);\n                            }\n                        };\n                    })(context), interval);\n\n                    return that._timers[name];\n                },\n\n                _youtubeApiReady: function() {\n                    this._configurePlayer();\n                },\n\n                _configurePlayer: function() {\n                    var vars = {\n                        'autoplay': +this.options.autoPlay,\n                        'wmode': 'transparent',\n                        'controls': 0,\n                        'rel': 0,\n                        'showinfo': 0\n                    };\n\n                    this._onYouTubePlayerReady = this._onYouTubePlayerReady.bind(this);\n                    window.onYouTubePlayerReady = this._onYouTubePlayerReady;\n                    this._onPlayerStateChangeHandler = this._onPlayerStateChange.bind(this);\n                    window.onPlayerStateChange = this._onPlayerStateChange;\n\n\n                    var player = new window.YT.Player(this.wrapper.find(DOT + YTPLAYER)[0], {\n                        height: this.wrapper.height(),\n                        width: this.wrapper.width(),\n                        videoId: this._getMediaId(),\n                        playerVars: vars,\n                        events: {\n                            'onReady': this._onYouTubePlayerReady,\n                            'onStateChange': this._onPlayerStateChangeHandler\n                        }\n                    });\n                },\n\n                _onYouTubePlayerReady: function(event) {\n                    this._ytmedia = event.target;\n                    this._ytmedia.getIframe().style.width = \"100%\";\n                    this._ytmedia.getIframe().style.height = \"100%\";\n                    this._youTubeVideo = true;\n                    this._mediaDurationChangeHandler();\n\n                    if (this.options.autoPlay) {\n                        this._playStateToggle(true);\n                        this._ytmedia.loadVideoById(this._getMediaId());\n                    }\n                    else {\n                        this._ytmedia.cueVideoById(this._getMediaId());\n                    }\n\n                    if (this.options.mute) {\n                        this.mute(true);\n                    }\n\n                    this.trigger(READY);\n                },\n\n                _updateTitle: function() {\n                    this.titlebar().text(this.media().title || this.media().source);\n                },\n\n                _onPlayerStateChange: function(event) {\n\n                    if (event.data === 0) {\n                        this._slider.value(0);\n                        this._paused = false;\n                        this._playStateToggle(true);\n                        this.trigger(END);\n                        if (this.options.autoRepeat) {\n                            this.play();\n                        }\n                    }\n                    else if (event.data === 1) {\n                        this._mediaDurationChange();\n                        this._ytmedia.setVolume(this.volume());\n                        if (this._sliderChangeFired) {\n                            this._sliderChangeFired = false;\n                        } else {\n                            this._uiDisplay(false);\n                        }\n                        this.trigger(PLAY);\n                        this._playStateToggle(true);\n\n                        this._poll(\"progress\", this._mediaTimeUpdate, 500, this);\n                        this._paused = false;\n                    }\n                    else if (event.data === 2) {\n                        if (!this._paused) {\n                            this._uiDisplay(true);\n                            this._playStateToggle(false);\n                            this.trigger(PAUSE);\n                            this._paused = true;\n                        }\n                    }\n                },\n\n                _getMediaId: function() {\n                    var result = this._currentUrl();\n                    var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\n                    var match = result.match(regExp);\n\n                    if (match && match[7].length === 11) {\n                        result = match[7];\n                    }\n\n                    return result;\n                },\n\n                _mouseClick: function() {\n                    if (this.isPaused()) {\n                        this.play();\n                    } else {\n                        this.pause();\n                    }\n                },\n\n                _initializePlayer: function() {\n                    if (!this._mouseMoveHandler) {\n                        this._mouseMoveHandler = this._mouseMove.bind(this);\n                        this._mouseInHandler = this._mouseIn.bind(this);\n                        this._mouseOutHandler = this._mouseOut.bind(this);\n\n                        $(this.wrapper)\n                            .on(\"mouseenter\" + ns, this._mouseInHandler)\n                            .on(\"mouseleave\" + ns, this._mouseOutHandler)\n                            .on(\"mousemove\" + ns, this._mouseMoveHandler);\n                    }\n\n                    if (!this._ytmedia && this._youTubeVideo) {\n                        this._createYoutubePlayer();\n                    }\n                    else if (!this._media && !this._youTubeVideo) {\n                        this._createHtmlPlayer();\n                    }\n                },\n\n                _createHtmlPlayer: function() {\n                    if (!this._videoOverlay) {\n                        this._mouseClickHanlder = this._mouseClick.bind(this);\n                        this.wrapper.append(\"<div class='\" + OVERLAY + \"'></div>\");\n                        this._videoOverlay = this.wrapper.find(\".k-mediaplayer-overlay\")\n                            .on(\"click\" + ns, this._mouseClickHanlder);\n                    }\n\n                    this._mediaTimeUpdateHandler = this._mediaTimeUpdate.bind(this);\n                    this._mediaDurationChangeHandler = this._mediaDurationChange.bind(this);\n                    this._mediaEndedHandler = this._mediaEnded.bind(this);\n                    this._mediaCanPlayHandler = this._mediaReady.bind(this);\n                    this._mediaPlayHandler = this._mediaPlay.bind(this);\n                    this._videoOverlay.after(templates.htmlPlayer);\n                    this._media = this.wrapper.find(DOT + MEDIA)[0];\n                    $(this._media)\n                        .css({\n                            width: \"100%\",\n                            height: \"100%\"\n                        });\n\n                    if (this.options.mute) {\n                        this.mute(true);\n                    }\n\n                    this._media.ontimeupdate = this._mediaTimeUpdateHandler;\n                    this._media.ondurationchange = this._mediaDurationChangeHandler;\n                    this._media.oncanplay = this._mediaCanPlayHandler;\n                    this._media.onplay = this._mediaPlayHandler;\n                    this._media.onended = this._mediaEndedHandler;\n                    this._media.loop = this.options.autoRepeat;\n                },\n\n                _mouseIn: function() {\n                    if (!this._shownOnKeydown) {\n                        this._uiDisplay(true);\n                    }\n                },\n\n                _mouseOut: function() {\n                    if (!this._shownOnKeydown) {\n                        this._poll(\"mouseIdle\", this._mouseIdle, 3000, this);\n                    }\n                },\n\n                _mouseIdle: function() {\n                    if (!this._shownOnKeydown) {\n                        this._uiDisplay(false);\n                    }\n                    return false;\n                },\n\n                _mouseMove: function() {\n                    if (!(this._titleBar.is(':animated') || this._toolBar.element.is(':animated') || this._slider.wrapper.is(':animated'))) {\n                        this._uiDisplay(true);\n                    }\n                    this._poll(\"mouseIdle\", this._mouseIdle, 3000, this);\n                },\n\n                _uiDisplay: function(state, speed) {\n                    var animationSpeed = speed ? speed : 'slow';\n                    var uiElements = this._titleBar\n                        .add(this._toolBar.element.parent());\n\n                    if (state) {\n                        uiElements.fadeIn(animationSpeed);\n                    }\n                    else {\n                        uiElements.fadeOut(animationSpeed);\n                        if (this.options.navigatable) {\n                            this.wrapper.trigger(\"focus\");\n                        }\n                    }\n                },\n\n                setOptions: function(options) {\n                    Widget.fn.setOptions.call(this, options);\n                },\n\n                destroy: function() {\n                    Widget.fn.destroy.call(this);\n\n                    if (!this.isPaused()) {\n                        this.pause();\n                    }\n\n                    this.element.off(ns);\n                    this.element.find(DOT + OVERLAY).off(ns);\n                    this._timers = null;\n                    this._mouseMoveHandler = null;\n                    this._mouseOutHandler = null;\n                    this._mouseInHandler = null;\n                    this._mouseClickHanlder = null;\n                    this._keyDownHandler = null;\n                    this._fullscreenHandler = null;\n\n                    this._toolbarClickHandler = null;\n                    this._sliderDragChangeHandler = null;\n                    this._sliderDraggingHandler = null;\n                    this._volumeDraggingHandler = null;\n                    this._volumeChangeHandler = null;\n                    this._youtubeApiReadyHandler = null;\n                    this._onYouTubePlayerReady = null;\n                    this._onPlayerStateChangeHandler = null;\n                    this._dropDownSelectHandler = null;\n\n                    if (this._youTubeVideo) {\n                        this._ytmedia.destroy();\n                    }\n                    else {\n                        this._media.ontimeupdate = this._mediaTimeUpdateHandler = null;\n                        this._media.ondurationchange = this._mediaDurationChangeHandler = null;\n                        this._media.oncanplay = this._mediaCanPlayHandler = null;\n                        this._media.onplay = this._mediaPlayHandler = null;\n                        this._media.onended = this._mediaEndedHandler = null;\n                        this._media.src = \"\";\n                        this._media.remove();\n                    }\n\n                    this._mouseMoveTimer = null;\n                    clearTimeout(this._mouseMoveTimer);\n\n                    kendo.destroy(this.element);\n                },\n\n                seek: function(ms) {\n                    if (typeof ms === 'undefined') {\n                        return 1000 * (this._youTubeVideo) ? this._ytmedia.getCurrentTime() : (this._media ? this._media.currentTime : 0);\n                    }\n                    var seconds = ms / 1000;\n                    if (this._youTubeVideo) {\n                        if (seconds + 3 >= this._ytmedia.getDuration() | 0) {\n                            //avoid infinite bad request loop in youtube player.\n                            this._ytmedia.seekTo(this._ytmedia.getDuration() - 3 | 0, true);\n                        } else {\n                            this._ytmedia.seekTo(seconds, true);\n                        }\n                    } else {\n                        this._media.currentTime = seconds;\n                    }\n\n                    return this;\n                },\n\n                play: function() {\n                    if (this._youTubeVideo) {\n                        this._ytmedia.playVideo();\n                    } else {\n                        if (kendo.support.mobileOS) {\n                            this._uiDisplay(false);\n                        }\n                        this._media.play();\n                    }\n                    this._paused = false;\n\n                    this._playStateToggle(true);\n\n                    return this;\n                },\n\n                stop: function() {\n                    if (this._youTubeVideo && this._ytmedia) {\n                        this._ytmedia.stopVideo();\n                    } else if (this._media && !this._youTubeVideo) {\n                        if (kendo.support.mobileOS) {\n                            this._uiDisplay(true);\n                        }\n                        this._media.pause();\n                        this._media.currentTime = 0;\n                    }\n                    this._paused = true;\n\n                    this._playStateToggle(false);\n                    return this;\n                },\n\n                pause: function() {\n                    if (this._youTubeVideo) {\n                        this._ytmedia.pauseVideo();\n                    } else {\n                        if (kendo.support.mobileOS) {\n                            this._uiDisplay(true);\n                        }\n                        this._media.pause();\n                    }\n                    this._paused = true;\n                    this._playStateToggle(false);\n                    this.trigger(PAUSE);\n                    return this;\n                },\n\n                toolbar: function() {\n                    return this._toolBar;\n                },\n\n                dropdown: function() {\n                    return this._dropDown;\n                },\n\n                titlebar: function() {\n                    return this._titleBar;\n                },\n\n                fullScreen: function(enterFullScreen) {\n                    if (typeof enterFullScreen === 'undefined') {\n                        return this._isInFullScreen || false;\n                    }\n                    var element = this.element.get(0);\n                    if (enterFullScreen) {\n                        // Handles the case when the action is triggered by code and not by user iteraction\n                        this.element.addClass(\"k-mediaplayer-fullscreen\");\n                        if (element.requestFullscreen) {\n                            element.requestFullscreen();\n                        } else if (element.webkitRequestFullscreen) {\n                            element.webkitRequestFullscreen();\n                        } else if (element.mozRequestFullScreen) {\n                            element.mozRequestFullScreen();\n                        } else if (element.msRequestFullscreen) {\n                            element.msRequestFullscreen();\n                        }\n                        this._isInFullScreen = true;\n                    } else {\n\n                        if (document.cancelFullscreen) {\n                            document.cancelFullscreen();\n                        } else if (document.webkitCancelFullScreen) {\n                            document.webkitCancelFullScreen();\n                        } else if (document.mozCancelFullScreen) {\n                            document.mozCancelFullScreen();\n                        } else if (document.msCancelFullscreen) {\n                            document.msCancelFullscreen();\n                        } else if (document.exitFullscreen) {\n                            document.exitFullscreen();\n                        } else if (document.msExitFullscreen) {\n                            document.msExitFullscreen();\n                        }\n                        // Handles the case when the action is triggered by code and not by user iteraction\n                        this.element.removeClass(\"k-mediaplayer-fullscreen\");\n                        this._isInFullScreen = false;\n                    }\n                    this._slider.resize();\n                },\n\n                volume: function(value) {\n                    if (typeof value === 'undefined') {\n                        return (typeof this._volume !== 'undefined') ? this._volume : this._volume = this.options.volume;\n                    }\n                    this._volume = value;\n                    this.mute(value <= 0);\n\n                    if (this._youTubeVideo) {\n                        this._ytmedia.setVolume(this._volume);\n                    } else {\n                        this._media.volume = this._volume / 100;\n                    }\n\n                    this._volumeSlider.value(value);\n                },\n\n                mute: function(muted) {\n                    var currentState = this._youTubeVideo ? (this._ytmedia && this._ytmedia.isMuted()) : (this._media && this._media.muted);\n                    if (typeof muted === 'undefined' || muted === currentState) {\n                        return currentState;\n                    }\n                    if (this._youTubeVideo) {\n                        if (muted) {\n                            this._ytmedia.mute();\n                        }\n                        else {\n                            this._ytmedia.unMute();\n                        }\n                    }\n                    else {\n                        this._media.muted = muted;\n                    }\n\n                    if (muted) {\n                        this._volumeSlider.value(0);\n                    }\n                    else {\n                        this._volumeSlider.value((this._media && this._media.volume * 100) || (this._ytmedia && this._ytmedia.getVolume()));\n                    }\n                    this.trigger(VOLUMECHANGE);\n                    this._changeVolumeButtonImage(this._volumeSlider.value());\n                },\n\n                isEnded: function() {\n                    if (this._youTubeVideo) {\n                        return this._ytmedia.getPlayerState() === 0;\n                    } else {\n                        return this._media.ended;\n                    }\n                },\n\n                media: function(value) {\n                    var dropdown = this.dropdown();\n                    if (typeof value === 'undefined') {\n                        return (typeof this._mediaData !== 'undefined') ? this._mediaData : this._mediaData = this.options.media;\n                    }\n\n                    if (isArray(value.source)) {\n                        dropdown.setDataSource(value.source);\n                        dropdown.wrapper.show();\n                    }\n                    else {\n                        dropdown.wrapper.hide();\n                    }\n\n                    this._mediaData = value;\n\n                    this._updateTitle();\n\n                    this._setPlayerUrl();\n                },\n\n                isPaused: function() {\n                    return this._paused;\n                },\n\n                isPlaying: function() {\n                    return !this.isEnded() && !this._paused;\n                },\n\n                _aria: function() {\n                    this.wrapper.attr(\"role\", \"region\");\n                    //this.wrapper.attr(\"aria-labelledby\", \"mediaplayerTitleBar\");\n                    //add onfocus with aria active descendant\n                },\n\n                _navigatable: function() {\n                    this._fullscreenHandler = this._fullscreen.bind(this);\n                    $(document)\n                        .on(\"webkitfullscreenchange mozfullscreenchange fullscreenchange\" + ns, this._fullscreenHandler);\n\n                    if (this.options.navigatable) {\n                        this.wrapper.attr(\"tabIndex\", 0);\n                        this._keyDownHandler = this._keyDown.bind(this);\n                        this.wrapper\n                            .on(\"keydown\" + ns, this._keyDownHandler);\n                    }\n                },\n\n                _fullscreen: function() {\n                    var isFullScreen = document.fullScreen ||\n                        document.mozFullScreen ||\n                        document.webkitIsFullScreen,\n                        fullscreenSpan = this.wrapper.find(FULLSCREEN_ENTER_SELECTOR);\n\n                    this._uiDisplay(true);\n                    this._slider.resize();\n\n                    if (!isFullScreen) {\n                        kendo.ui.icon(fullscreenSpan, { icon: FULLSCREEN_ENTER });\n                        this.fullScreen(false);\n                    }\n                },\n\n                _keyIdle: function() {\n                    const that = this;\n                    that._uiDisplay(false);\n                    this._shownOnKeydown = false;\n                    return false;\n                },\n\n                _keyDown: function(e) {\n                    e.preventDefault();\n                    const fsButton = this.wrapper.find(FULLSCREEN_ENTER_SELECTOR);\n\n                    this._shownOnKeydown = true;\n                    this._uiDisplay(true, 'fast');\n                    this._poll(\"keyDown\", this._keyIdle, 3000, this);\n\n                    if (e.keyCode === keys.SPACEBAR) {\n                        if (this.isPlaying()) {\n                            this.pause();\n                        }\n                        else {\n                            this.play();\n                        }\n                    }\n                    else if (e.keyCode === keys.ENTER && !this._isInFullScreen) {\n                        kendo.ui.icon(fsButton, { icon: FULLSCREEN_EXIT });\n                        this.fullScreen(true);\n                    }\n                    else if (e.keyCode === 77) {\n                        var muted = this.mute();\n                        this.mute(!muted);\n                    }\n                    else if (e.keyCode === keys.ESC && this._isInFullScreen) {\n                        kendo.ui.icon(fsButton, { icon: FULLSCREEN_ENTER });\n                        this.fullScreen(false);\n                    } else if (e.keyCode === keys.LEFT || e.keyCode === keys.RIGHT) {\n                        e.preventDefault();\n                        if (!(this._volumeSlider.wrapper.find(SLIDER_SELECTED_STATE).length)) {\n                            this._sliderKeyNav(this._slider, e.keyCode);\n                        }\n                    } else if (e.keyCode === keys.UP || e.keyCode === keys.DOWN) {\n                        e.preventDefault();\n                        if (!(this._slider.wrapper.find(SLIDER_SELECTED_STATE).length)) {\n                            this._sliderKeyNav(this._volumeSlider, e.keyCode);\n                        }\n                    } else if (e.ctrlKey && (e.keyCode === 97 || e.keyCode === 49)) {\n                        this._qualityDropDownKeyNav('decrease');\n                    } else if (e.ctrlKey && (e.keyCode === 98 || e.keyCode === 50)) {\n                        this._qualityDropDownKeyNav('increase');\n                    }\n                },\n\n                _error: function() {\n                },\n\n                _progress: function() {\n                },\n\n                _sliderKeyNav: function(slider, keyCode) {\n                    slider._setValueInRange(slider._keyMap[keyCode](slider.options.value));\n                },\n\n                _qualityDropDownKeyNav: function(operation) {\n                    const that = this;\n                    const qualityDropDown = that._dropDown;\n                    const dataSource = qualityDropDown.dataSource;\n                    const field = qualityDropDown.options.dataValueField;\n                    let currentSelected = qualityDropDown.selectedIndex;\n\n                    switch (operation) {\n                        case 'increase':\n                            currentSelected += 1;\n                            break;\n                        case 'decrease':\n                            currentSelected -= 1;\n                            break;\n                    }\n                    const value = dataSource.at(currentSelected);\n\n                    if (value && value[field]) {\n                        qualityDropDown.value(value[field]);\n                        this._currentIndex = currentSelected;\n                        this._setPlayerUrl();\n                    }\n                }\n            });\n\n            ui.plugin(MediaPlayer);\n\n        })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}