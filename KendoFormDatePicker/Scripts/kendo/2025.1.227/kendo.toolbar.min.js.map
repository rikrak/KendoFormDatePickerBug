{"version":3,"sources":["raw-js/kendo.toolbar.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Toolbar","this","$","undefined$1","window","Widget","ui","isFunction","keys","outerWidth","_outerWidth","ns","TOOLBAR","KBUTTON","BUTTON_GROUP","SPLIT_BUTTON","MENU_BUTTON","KSEPARATOR","SPACER_CLASS","STATE_SELECTED","STATE_DISABLED","STATE_HIDDEN","FORCE_HIDDEN","GROUP_START","GROUP_END","MENU_LINK","MENU_ITEM","OVERFLOW_ANCHOR","TEMPLATE_ITEM","MENU_LINK_TOGGLE","DROPDOWNLIST","INPUT_BUTTON","KFOCUS","TABINDEX_MINUS_1","TOOLBAR_TOOL","ARIA_CHECKED","ARIA_LABEL","CHANGE","CLICK","TOGGLE","OPEN","CLOSE","FOCUS","KEYDOWN","SPACER","ROLE","ITEM_REF","SEPARATOR","OVERFLOW","TABINDEX","INPUT","SELECT","GROUP","DATA_UID","DATA_ROLE_SELECTOR","DATA_TOGGLE_SELECTOR","DATA_ROLE_BUTTONMENU","ITEM_REF_SELECTOR","KENDO_FOCUSABLE","OVERFLOW_OPEN","OVERFLOW_CLOSE","OVERFLOW_NEVER","OVERFLOW_AUTO","OVERFLOW_ALWAYS","KENDO_UID_ATTR","attr","NOTHING","DASH","EMPTY","DOT","COMMA","ID","UID","K_DROP_DOWN_BUTTON","K_SPLIT_BUTTON","K_TOGGLE_BUTTON","K_BUTTON_GROUP","toolbar","WIDGET_TYPES","button","splitButton","dropDownButton","buttonGroup","popupButton","open","TOOLBAR_TOOLS_CLASSES","Button","ToggleButton","SplitButton","DropDownButton","ButtonGroup","ColorPicker","Switch","SAFE_COMPONENTS","POPUP_BUTTON_TEMPLATE","icon","SEPARATOR_EL","ToolBar","extend","init","element","options","fn","call","_isRtl","support","isRtl","uid","guid","wrapper","addClass","resizable","hasOverflowButton","includes","overflow","mode","_resizable","tools","length","items","_extendToolsOptions","_items","_scrollable","_attachEvents","_tabIndex","_applyCssClasses","containerWidth","find","offsetWidth","innerWidth","_shrink","overflowAnchorSeparator","appendTo","overflowAnchor","_toggleOverflowAnchor","_toggleScrollButtons","notify","events","name","navigateOnTab","evaluateTemplates","size","fillMode","scrollButtons","scrollButtonsPosition","scrollDistance","destroy","that","unbindResize","_resizeHandler","overflowMenu","overflowSection","unbind","_removeScrollableClasses","each","i","el","popup","popupWrapper","chooser","getKendoButton","remove","off","removeAttr","children","add","_add","resize","_scrollableAllowed","isNaN","_getScrollButtonHtml","buttonClass","html","renderButton","type","_getChildrenWidth","width","Math","floor","isHidden","removeClass","toolbarElement","scrollPrevButton","scrollNextButton","useNativeScrolling","wrapInner","scrollableElement","wrapperOffset","tabGroupScroll","scrollWidth","condition","enableScroll","_scrollableModeActive","_scrollPrevButton","_scrollNextButton","_nowScrollingTabs","mouseDown","touch","mouseUp","browser","isRtlScrollDirection","msie","edge","prevIcon","nextIcon","scrollLeftButtonHtml","scrollRightButtonHtml","prepend","append","on","_scrollTabsByDelta","delta","scrOffset","scrollLeft","mozilla","webkit","version","animationProps","finish","animate","jQuery","fx","forceHideButtons","scrollButtonsVisibility","disableNextButton","abs","disablePrevButton","toggleClass","shouldHideScrollButtons","enable","candidate","focused","_getUid","item","_getItem","overflowItem","_getOverflowItem","component","enableItem","hasClass","is","trigger","buttonsPopupItem","widgetInstance","closest","menuItem","getSelectedFromGroup","groupName","filter","hide","elements","parentGroupEl","hideItem","isOverflowItem","templateEl","toolbarEl","parent","data","_groupVisibleButtons","addBack","_resetTabIndex","_getAllItems","first","removeItem","siblings","show","showItem","toggle","checked","toggleItem","group","parentGroup","_toggleIndex","index","toggleTools","conditions","focusable","not","elm","tool","widget","toToggle","_generateToolElement","template","overflowTemplate","processed","_addTemplate","_addCustomWidget","_addDefaultTool","_addSpacer","_addSeparator","_processOptions","insertBefore","_overflowSectionContentElement","sectionElement","_addAttributes","attributes","classes","hidden","align","class","id","forEach","groupClass","result","overflowComponent","_addMenuItem","componentOptions","indexOf","wrap","op","_addToolbarTool","menuitem","selected","showIcon","imageUrl","showText","text","encoded","last","togglable","menuButtons","buttons","click","bind","e","_onMenuItemSelect","_addPopupButton","widgetElement","popupComponent","kendoPopup","anchor","preventDefault","commandOn","target","value","close","separator","overflowSeparator","sectionSeparator","sectionSeparatorOptions","destinationElement","spacer","inputsInTemplate","popupRef","hasButtons","primary","themeColor","url","sanitizeLink","preventKeyNav","_attachWidgetEvents","_resetOpen","extensions","_keydown","_focusIn","_focusOut","_onClick","_onToggle","_onSelect","_onOpen","_onClose","$el","originalEvent","event","_childrenWidth","gap","parseInt","css","childrenWidth","ceil","flatMap","_mapTool","parentMessages","defaultTools","isSection","style","visibility","knownUid","container","uidSelector","buttonsPopups","_getNextElement","direction","itemIndex","parentElement","focusableItem","visibleBtns","_hideItem","eq","menu","list","_showMenuItem","_hideMenuItem","keyCode","templateItem","isOverflowAnchor","isInSection","ESC","stopPropagation","_keyDeactivateTemplate","ENTER","_keyActivateTemplate","altKey","DOWN","SPACEBAR","_keyOpenOverflow","HOME","_keyFocusFirst","END","_keyFocusLast","RIGHT","LEFT","_keyFocusNext","innerFocusable","pagerTool","innerWidget","visible","next","_mapAttributes","toolOptions","messages","property","title","command","dialog","toggleCondition","_mapComponent","componentMessages","componentPlaceholder","placeholder","dataSource","default","Object","JSON","stringify","key","ev","sender","map","isBuiltInTool","originalTool","isArray","Array","isPlainObjectTool","isPlainObject","toolKeysCount","t","deepExtend","_menuItemSelect","shouldSelect","twin","replace","current","select","setTimeout","menuEl","dataUidSelector","mainItem","_processInner","parentUid","rootUid","some","b","every","selection","enabled","_renderOverflow","horizontalDirection","overflowMode","kendoButton","Popup","getValidCssClass","origin","position","activate","firstFocusableSectionItem","ContextMenu","showOn","alignToAnchor","uploadWrapper","input","one","files","toFocus","onResize","_resize","popupBtnElements","_stretch","commandElement","visibleCommands","activeElement","_showItem","itemOuterWidth","hiddenCommands","focusableItems","firstFocusable","Item","Class","OverflowButton","TemplateItem","ToolBarButton","registerComponent","cssProperties","registerPrefix","registerValues","prop","values","plugin","kendo$1","__meta__","category","description","depends","defineProperty"],"mappings":"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","file":"kendo.toolbar.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.splitbutton.js'), require('kendo.dropdownbutton.js'), require('kendo.buttongroup.js'), require('kendo.menu.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.splitbutton', 'kendo.dropdownbutton', 'kendo.buttongroup', 'kendo.menu', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Toolbar = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"toolbar\",\n        name: \"ToolBar\",\n        category: \"web\",\n        description: \"The ToolBar widget displays one or more command buttons divided into groups.\",\n        depends: [\"core\", \"splitbutton\", \"dropdownbutton\", \"buttongroup\", \"menu\", \"icons\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            isFunction = kendo.isFunction,\n            keys = kendo.keys,\n            outerWidth = kendo._outerWidth,\n            ns = \".kendoToolBar\",\n            TOOLBAR = \"toolbar\",\n            KTOOLBAR = \"k-toolbar\",\n            KBUTTON = \"k-button\",\n            BUTTON_GROUP = \"k-button-group\",\n            SPLIT_BUTTON = \"k-split-button\",\n            MENU_BUTTON = \"k-menu-button\",\n            POPUP_BUTTON = \"k-popup-button\",\n            KSEPARATOR = \"k-toolbar-separator k-separator\",\n            SPACER_CLASS = \"k-spacer\",\n            UPLOAD_BUTTON = \"k-upload-button\",\n            POPUP = \"k-popup\",\n            RESIZABLE_TOOLBAR = \"k-toolbar-resizable\",\n            STATE_SELECTED = \"k-selected\",\n            STATE_DISABLED = \"k-disabled\",\n            STATE_HIDDEN = \"k-hidden\",\n            FORCE_HIDDEN = \"k-force-hidden\",\n            GROUP_START = \"k-group-start\",\n            GROUP_END = \"k-group-end\",\n            MENU_LINK = \"k-menu-link\",\n            MENU_ITEM = \"k-menu-item\",\n            OVERFLOW_ANCHOR = \"k-toolbar-overflow-button\",\n            TEMPLATE_ITEM = \"k-toolbar-item\",\n            MENU_LINK_TOGGLE = \"k-menu-link-toggle\",\n            DROPDOWNLIST = \"k-dropdownlist\",\n            INPUT_BUTTON = \"k-input-button\",\n            MENU_POPUP = \"k-menu-popup\",\n            KFOCUS = \"k-focus\",\n            SINGLE = \"single\",\n            MULTIPLE = \"multiple\",\n            NONE = \"none\",\n            TABINDEX_MINUS_1 = \"[tabindex=-1]\",\n            TOOLBAR_TOOL = \"toolbar-tool\",\n\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_CHECKED = \"aria-checked\",\n            ARIA_LABEL = \"aria-label\",\n\n            CHANGE = \"change\",\n            CLICK = \"click\",\n            TOGGLE = \"toggle\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            FOCUS = \"focus\",\n            FOCUSIN = \"focusin\",\n            FOCUSOUT = \"focusout\",\n            KEYDOWN = \"keydown\",\n\n            SPACER = \"spacer\",\n            PRIMARY = \"primary\",\n            ROLE = \"role\",\n            ITEM_REF = \"ref-\",\n            SEPARATOR = \"separator\",\n            OVERFLOW = \"overflow\",\n            TABINDEX = \"tabindex\",\n            INPUT = \"input\",\n            SELECT = \"select\",\n            HIDDEN = \"hidden\",\n            GROUP = \"group\",\n            DATA_UID = \"data-uid\",\n            DATA_PARENTUID = \"data-parentuid\",\n            DATA_ROLE_SELECTOR = \"[data-role]\",\n            DATA_TOGGLE_SELECTOR = \"[data-toggle]\",\n            DATA_ROLE_BUTTONMENU = \"[data-role=buttonmenu]\",\n            ITEM_REF_SELECTOR = \"[ref-toolbar-tool]\",\n            KENDO_FOCUSABLE = \":kendoFocusable:not([class*='pager'])\",\n\n            OVERFLOW_OPEN = \"overflowOpen\",\n            OVERFLOW_CLOSE = \"overflowClose\",\n            OVERFLOW_NEVER = \"never\",\n            OVERFLOW_AUTO = \"auto\",\n            OVERFLOW_ALWAYS = \"always\",\n\n            KENDO_UID_ATTR = kendo.attr(\"uid\"),\n\n            NOTHING = \"\",\n            DASH = \"_\",\n            EMPTY = \" \",\n            DOT = \".\",\n            COMMA = \",\",\n            ID = \"id\",\n            UID = \"uid\",\n            NBSP = \"&nbsp;\",\n\n            K_DROP_DOWN_BUTTON = \"kendoDropDownButton\",\n            K_SPLIT_BUTTON = \"kendoSplitButton\",\n            K_TOGGLE_BUTTON = \"kendoToggleButton\",\n            K_BUTTON_GROUP = \"kendoButtonGroup\",\n\n            DEFAULT_SCROLL_DISTANCE = 200;\n\n        kendo.toolbar = {};\n\n        var WIDGET_TYPES = {\n            button: \"Button\",\n            splitButton: \"SplitButton\",\n            dropDownButton: \"DropDownButton\",\n            buttonGroup: \"ButtonGroup\",\n            popupButton: \"Button\",\n            open: \"Button\"\n        };\n\n        var TOOLBAR_TOOLS_CLASSES = {\n            Button: \"k-toolbar-button\",\n            ToggleButton: \"k-toolbar-toggle-button\",\n            SplitButton: \"k-toolbar-split-button\",\n            DropDownButton: \"k-toolbar-menu-button\",\n            ButtonGroup: \"k-toolbar-button-group\",\n            ColorPicker: \"k-toolbar-color-picker\",\n            Switch: \"k-toolbar-switch\"\n        };\n\n        var SAFE_COMPONENTS = [\"Button\", \"SplitButton\", \"DropDownButton\", \"ButtonGroup\", \"Switch\", \"ColorPicker\"];\n\n        var POPUP_BUTTON_TEMPLATE = `<button class=\"k-popup-button\"><span class=\"k-button-icon k-icon\"></span><span class=\"k-button-text\">${kendo.ui.icon(\"caret-alt-down\")}</span></button>`;\n        var TEMPLATE_WRAPPER = \"<div class='k-toolbar-item' aria-keyshortcuts='Enter'></div>\";\n        var CUSTOM_WIDGET_WRAP = \"<span class='k-toolbar-item' tabindex='0' ref-toolbar-tool >\";\n        var SEPARATOR_OVERFLOW_EL = \"<li role='separator' class='k-separator k-menu-separator k-hidden'></li>\";\n        var SEPARATOR_EL = '<div role=\"separator\">&nbsp;</div>';\n        var SPACER_EL = '<div>&nbsp;</div>';\n\n        var ToolBar = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n\n                options = this.options;\n\n                this._isRtl = kendo.support.isRtl(element);\n                this.uid = kendo.guid();\n\n                element = this.wrapper = this.element;\n                element.attr(KENDO_UID_ATTR, this.uid);\n                element.addClass(KTOOLBAR);\n                element.attr(ROLE, TOOLBAR);\n\n                if (options.resizable) {\n                    this.hasOverflowButton = [\"section\", \"menu\"].includes(this.options.overflow?.mode);\n                    this._resizable();\n                } else {\n                    options.overflow = $.extend({}, options.overflow, { mode: \"none\" });\n                }\n\n                if (options.tools && options.tools.length > 0) {\n                    options.items = this._extendToolsOptions();\n                }\n\n                if (options.items && options.items.length) {\n                    this._items();\n                }\n\n                this._scrollable();\n\n                this._attachEvents();\n                this._tabIndex();\n                this._applyCssClasses();\n\n                if (options.resizable) {\n                    if (this.hasOverflowButton) {\n                        let containerWidth = this.element.find(\"> .k-toolbar-items\").length > 0 ? this.element.find(\"> .k-toolbar-items\")[0].offsetWidth : this.element.innerWidth();\n                        this._shrink(containerWidth);\n                        this.overflowAnchorSeparator?.appendTo(this.wrapper);\n                        this.overflowAnchor?.appendTo(this.wrapper);\n                        this._toggleOverflowAnchor();\n                    }\n                    else {\n                        this._toggleScrollButtons();\n                    }\n                }\n\n                kendo.notify(this);\n            },\n\n            events: [\n                CLICK,\n                TOGGLE,\n                OPEN,\n                CLOSE,\n                OVERFLOW_OPEN,\n                OVERFLOW_CLOSE,\n                CHANGE\n            ],\n\n            options: {\n                name: \"ToolBar\",\n                items: [],\n                resizable: true,\n                navigateOnTab: false,\n                evaluateTemplates: false,\n                size: \"medium\",\n                fillMode: \"solid\",\n                overflow: {\n                    mode: \"menu\", // scroll, menu, section, none\n                    scrollButtons: \"auto\", // auto, hidden, visible\n                    scrollButtonsPosition: \"split\", // split, start, end\n                    scrollDistance: DEFAULT_SCROLL_DISTANCE\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that.options.resizable) {\n                    kendo.unbindResize(that._resizeHandler);\n                    that.overflowMenu?.destroy?.();\n                    that.overflowSection?.destroy?.();\n                }\n\n                if (that.options.overflow?.mode == \"scroll\") {\n                    that.element.find(\"> .k-toolbar-items\").unbind(\"scroll\" + ns);\n                    that._removeScrollableClasses();\n                }\n\n                that.element.find(DOT + POPUP_BUTTON).each((i, el) => {\n                    var button = $(el).getKendoButton(),\n                        popup, popupWrapper, chooser;\n\n                    if (button) {\n                        chooser = button.chooser;\n                        popup = button.popup;\n                        popupWrapper = popup.wrapper;\n\n                        chooser.destroy();\n                        popup.destroy();\n                        popupWrapper.remove();\n                    }\n                });\n\n                that.element.off(ns);\n                that.element.removeAttr(DATA_UID);\n\n                kendo.destroy(that.element.children());\n\n                Widget.fn.destroy.call(that);\n            },\n\n            add: function(options) {\n                this._add(options);\n\n                if (this.options.resizable) {\n                    this.resize(true);\n                }\n            },\n\n\n            _scrollableAllowed: function() {\n                const options = this.options;\n\n                if (options.overflow && options.overflow.mode == \"scroll\" && !options.overflow.scrollDistance) {\n                    options.overflow.scrollDistance = DEFAULT_SCROLL_DISTANCE;\n                }\n\n                return options.overflow?.mode == \"scroll\" && !isNaN(options.overflow.scrollDistance);\n            },\n\n            _getScrollButtonHtml: function(buttonClass, icon) {\n                return kendo.html.renderButton($(`<span class=\"k-toolbar-${buttonClass}\"></span>`), { icon: icon, type: \"\", size: this.options.size });\n            },\n\n            _getChildrenWidth: function(element) {\n                let width = 0;\n                element.children().each(function() {\n                    width += outerWidth($(this));\n                });\n                return Math.floor(width);\n            },\n            _removeScrollableClasses: function() {\n                const that = this;\n                const isHidden = that.options.overflow.scrollButtons === \"hidden\";\n\n                that.element.removeClass(\"k-toolbar-scrollable\");\n\n                if (isHidden) {\n                    that.element.removeClass(\"k-toolbar-scrollable-overlay\");\n                    that.element.removeClass(\"k-toolbar-scrollable-start\");\n                    that.element.removeClass(\"k-toolbar-scrollable-end\");\n\n                    that.element.removeClass(\"k-toolbar-items-scroll\");\n                }\n            },\n            _scrollable: function() {\n                const that = this,\n                    toolbarElement = that.element,\n                    options = that.options,\n                    scrollButtonsPosition = options.overflow.scrollButtonsPosition,\n                    scrollButtonsVisibility = options.overflow.scrollButtons,\n                    isHidden = scrollButtonsVisibility === \"hidden\";\n\n                if (that._scrollableAllowed()) {\n                    let scrollPrevButton,\n                        scrollNextButton;\n\n                    that.element.addClass(\"k-toolbar-scrollable\");\n                    let useNativeScrolling = true;\n                    that.element.wrapInner(`<div class=\"k-toolbar-items ${useNativeScrolling ? \"k-toolbar-items-scroll\" : \"\"}\"></div>`);\n                    const scrollableElement = toolbarElement.find(\"> .k-toolbar-items\");\n                    const wrapperOffset = that.element[0].offsetWidth;\n                    const tabGroupScroll = scrollableElement[0].scrollWidth;\n                    const condition = that._getChildrenWidth(scrollableElement) > scrollableElement.outerWidth();\n                    const enableScroll = (tabGroupScroll > wrapperOffset) || condition;\n\n                    if (enableScroll && !that._scrollableModeActive && isHidden) {\n                        that.element.addClass(\"k-toolbar-items-scroll\");\n                        that.element.addClass(\"k-toolbar-scrollable-overlay\");\n\n                        that._scrollableModeActive = true;\n                        that._toggleScrollButtons();\n                    } else if ((enableScroll || !isHidden) && !that._scrollableModeActive) {\n                        that._nowScrollingTabs = false;\n                        that._isRtl = kendo.support.isRtl(that.element);\n                        const mouseDown = kendo.support.touch ? \"touchstart\" : \"mousedown\";\n                        const mouseUp = kendo.support.touch ? \"touchend\" : \"mouseup\";\n                        const browser = kendo.support.browser;\n                        const isRtlScrollDirection = that._isRtl && !browser.msie && !browser.edge;\n                        const prevIcon = !that._isRtl ? \"caret-alt-left\" : \"caret-alt-right\";\n                        const nextIcon = !that._isRtl ? \"caret-alt-right\" : \"caret-alt-left\";\n\n                        const scrollLeftButtonHtml = this._getScrollButtonHtml(\"prev\", prevIcon);\n                        const scrollRightButtonHtml = this._getScrollButtonHtml(\"next\", nextIcon);\n\n                        switch (scrollButtonsPosition) {\n                            case 'split':\n                                that.element.prepend(scrollLeftButtonHtml);\n                                that.element.append(scrollRightButtonHtml);\n                                break;\n                            case 'start':\n                                that.element.prepend(scrollRightButtonHtml);\n                                that.element.prepend(scrollLeftButtonHtml);\n                                break;\n                            case 'end':\n                                that.element.append(scrollLeftButtonHtml);\n                                that.element.append(scrollRightButtonHtml);\n                                break;\n                        }\n\n                        scrollPrevButton = that._scrollPrevButton = that.element.children(\".k-toolbar-prev\");\n                        scrollNextButton = that._scrollNextButton = that.element.children(\".k-toolbar-next\");\n\n                        scrollPrevButton.on(mouseDown + ns, function() {\n                            that._nowScrollingTabs = true;\n                            that._scrollTabsByDelta(options.overflow.scrollDistance * (isRtlScrollDirection ? 1 : -1));\n                        });\n\n                        scrollNextButton.on(mouseDown + ns, function() {\n                            that._nowScrollingTabs = true;\n                            that._scrollTabsByDelta(options.overflow.scrollDistance * (isRtlScrollDirection ? -1 : 1));\n                        });\n\n                        scrollPrevButton.add(scrollNextButton).on(mouseUp + ns, function() {\n                            that._nowScrollingTabs = false;\n                            that._toggleScrollButtons();\n                        });\n\n                        that._scrollableModeActive = true;\n\n                        that._toggleScrollButtons();\n                    } else if (that._scrollableModeActive && !enableScroll && isHidden) {\n                        that._scrollableModeActive = false;\n\n                        that._removeScrollableClasses();\n\n                        that._scrollPrevButton && that._scrollPrevButton.off().remove();\n                        that._scrollNextButton && that._scrollNextButton.off().remove();\n                    } else if (!that._scrollableModeActive && isHidden) {\n                        that._removeScrollableClasses();\n                    } else {\n                        that._toggleScrollButtons();\n                    }\n                }\n            },\n\n            _scrollTabsByDelta: function(delta) {\n                const that = this;\n                const toolbarElement = that.element;\n                const scrollableElement = toolbarElement.find(\"> .k-toolbar-items\");\n\n                let scrOffset = kendo.scrollLeft(scrollableElement);\n                const browser = kendo.support.browser;\n\n                if (that._isRtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    scrOffset = scrOffset * -1;\n                }\n\n                const animationProps = { \"scrollLeft\": scrOffset + delta };\n\n                scrollableElement.finish().animate(animationProps, \"fast\", \"linear\", function() {\n                    if (that._nowScrollingTabs && !jQuery.fx.off) {\n                        that._scrollTabsByDelta(delta);\n                    }\n                });\n            },\n            _toggleScrollButtons: function(forceHideButtons) {\n                const that = this;\n\n                if (!that._scrollableAllowed()) {\n                    return;\n                }\n\n                let toolbarElement = that.element,\n                    scrollableElement = toolbarElement.find(\"> .k-toolbar-items\"),\n                    scrollLeft = Math.floor(kendo.scrollLeft(scrollableElement)),\n                    scrollButtonsVisibility = that.options.overflow.scrollButtons;\n\n                const disableNextButton = Math.abs(scrollLeft - (scrollableElement[0].scrollWidth - scrollableElement[0].offsetWidth)) <= 1;\n                const disablePrevButton = scrollLeft === 0;\n\n                if (scrollButtonsVisibility !== \"hidden\") {\n                    that._scrollPrevButton.toggleClass(STATE_DISABLED, disablePrevButton);\n                    that._scrollNextButton.toggleClass(STATE_DISABLED, disableNextButton);\n\n                    if (scrollButtonsVisibility === \"auto\") {\n                        const shouldHideScrollButtons = forceHideButtons || scrollableElement[0].scrollWidth - scrollableElement[0].offsetWidth <= 1;\n                        that._scrollPrevButton.toggleClass(STATE_HIDDEN, shouldHideScrollButtons);\n                        that._scrollNextButton.toggleClass(STATE_HIDDEN, shouldHideScrollButtons);\n                    }\n                } else {\n                    that.element.toggleClass(\"k-toolbar-scrollable-start\", disablePrevButton);\n                    that.element.toggleClass(\"k-toolbar-scrollable-end\", disableNextButton);\n                }\n            },\n\n            enable: function(candidate, enable) {\n                var that = this,\n                    uid = this._getUid(candidate),\n                    item = this._getItem(candidate, uid),\n                    overflowItem = this._getOverflowItem(candidate, uid),\n                    component = item.component,\n                    buttonPopup, children, focused, wrapper;\n\n                if (typeof enable == \"undefined\") {\n                    enable = true;\n                }\n\n                function enableItem(item) {\n                    if (item.component) {\n                        wrapper = component.wrapper;\n                        focused = wrapper.hasClass(KFOCUS) || wrapper.is(\":focus\");\n                        component.enable(enable);\n                        wrapper.find(\"[disabled]\").removeAttr(\"disabled\");\n                        wrapper.removeAttr(\"disabled\");\n\n                        if (focused) {\n                            wrapper.addClass(KFOCUS).trigger(FOCUS);\n                        }\n                    } else if (item.buttonsPopupItem.length > 0) {\n                        buttonPopup = kendo.widgetInstance(item.buttonsPopupItem.closest(DOT + MENU_POPUP));\n                        buttonPopup.enable(enable, item.buttonsPopupItem);\n                    }\n                }\n\n                if (this.overflowSection && overflowItem) {\n                    enableItem(overflowItem);\n                }\n\n                if (!item) {\n                    return;\n                }\n\n                enableItem(item);\n\n                if (this.overflowMenu) {\n                    this.overflowMenu.enable(item.menuItem, enable);\n\n                    children = this.overflowMenu.element\n                        .find(\"[data-parentuid=\" + uid + \"]\");\n\n                    children.each((i, el) => {\n                        that.overflowMenu.enable($(el), enable);\n                    });\n                }\n            },\n\n            getSelectedFromGroup: function(groupName) {\n                return this.element.find(\"[data-group='\" + groupName + \"']\").filter(DOT + STATE_SELECTED);\n            },\n\n            hide: function(candidate) {\n                var that = this,\n                    uid = this._getUid(candidate),\n                    item = that._getItem(candidate, uid),\n                    overflowItem = that._getOverflowItem(candidate, uid),\n                    elements, parentButtonGroup, children, parentGroupEl;\n\n                if (!item && !overflowItem) {\n                    return;\n                }\n\n                function hideItem(item, isOverflowItem) {\n                    elements = item.templateEl.add(item.toolbarEl).add(item.buttonsPopupItem).add(item.menuItem);\n                    elements.addClass(STATE_HIDDEN);\n                    elements.addClass(FORCE_HIDDEN);\n\n                    parentGroupEl = item.toolbarEl.parent().closest(DOT + BUTTON_GROUP);\n                    parentButtonGroup = parentGroupEl.data(K_BUTTON_GROUP);\n\n                    if (parentButtonGroup) {\n                        if (parentGroupEl.children(\":not(.k-hidden)\").length === 0) {\n                            that.hide(parentGroupEl);\n                        } else {\n                            that._groupVisibleButtons(parentGroupEl);\n                        }\n                    }\n\n                    if (elements.find(\"[tabindex=0]\").addBack(\"[tabindex=0]\").length > 0) {\n                        that._resetTabIndex(that._getAllItems(isOverflowItem).first());\n                    }\n                }\n\n                if (this.overflowSection && overflowItem) {\n                    hideItem(overflowItem, true);\n                }\n\n                if (item) {\n                    hideItem(item);\n\n                    if (this.overflowMenu) {\n                        children = this.overflowMenu.element\n                            .find(\"[data-parentuid=\" + uid + \"]\");\n\n                        children.each((i, el) => {\n                            $(el).addClass(FORCE_HIDDEN);\n                            $(el).addClass(STATE_HIDDEN);\n                        });\n                    }\n                }\n\n                if (this.options.resizable) {\n                    this.resize(true);\n                }\n            },\n\n            remove: function(candidate) {\n                var that = this,\n                    uid = this._getUid(candidate),\n                    item = this._getItem(candidate, uid),\n                    overflowItem = this._getOverflowItem(candidate, uid),\n                    buttonGroup, children;\n\n                if (!item && !overflowItem) {\n                    return;\n                }\n\n                function removeItem(item) {\n                    if (item.component) {\n                        buttonGroup = item.toolbarEl.closest('[data-role=\"buttongroup\"]');\n                        if (buttonGroup.length > 0 && item.toolbarEl.siblings().length === 0) {\n                            buttonGroup.data(K_BUTTON_GROUP).destroy();\n                            buttonGroup.remove();\n\n                            item.toolbarEl = $(NOTHING);\n                        } else {\n                            item.component.destroy();\n                        }\n                    }\n\n                    if (item.templateEl.length > 0) {\n                        item.templateEl.remove();\n                    } else if (item.toolbarEl.length > 0) {\n                        item.toolbarEl.remove();\n                    }\n\n                    if (item.buttonsPopupItem.length > 0) {\n                        item.buttonsPopupItem.remove();\n                    }\n                }\n\n                if (this.overflowSection && overflowItem) {\n                    removeItem(overflowItem);\n                }\n\n                if (item) {\n                    removeItem(item);\n\n                    if (this.overflowMenu) {\n                        this.overflowMenu.remove(item.menuItem);\n\n                        children = this.overflowMenu.element\n                            .find(\"[data-parentuid=\" + uid + \"]\");\n\n                        children.each((i, el) => {\n                            that.overflowMenu.remove($(el));\n                        });\n                    }\n                }\n\n                if (this.options.resizable) {\n                    this.resize(true);\n                }\n            },\n\n            show: function(candidate) {\n                var that = this,\n                    uid = this._getUid(candidate),\n                    item = this._getItem(candidate, uid),\n                    overflowItem = this._getOverflowItem(candidate, uid),\n                    elements, parentButtonGroup, children, parentGroupEl;\n\n                function showItem(item) {\n                    elements = item.templateEl.add(item.toolbarEl).add(item.buttonsPopupItem);\n                    elements.removeClass(FORCE_HIDDEN);\n                    elements.removeClass(STATE_HIDDEN);\n\n                    parentGroupEl = item.toolbarEl.parent().closest(DOT + BUTTON_GROUP);\n                    parentButtonGroup = parentGroupEl.data(K_BUTTON_GROUP);\n\n                    if (parentButtonGroup) {\n                        if (parentGroupEl.hasClass(\"k-hidden\") && parentGroupEl.children(\":not(.k-hidden)\").length > 0) {\n                            that.show(parentGroupEl);\n                        } else {\n                            that._groupVisibleButtons(parentGroupEl);\n                        }\n                    }\n                }\n\n                if (this.overflowSection && overflowItem) {\n                    showItem(overflowItem);\n                }\n\n                if (item) {\n                    showItem(item);\n                    item.menuItem.removeClass(FORCE_HIDDEN);\n                    if (this.overflowMenu) {\n                        children = this.overflowMenu.element\n                            .find(\"[data-parentuid=\" + uid + \"]\");\n\n                        children.each((i, el) => {\n                            $(el).removeClass(FORCE_HIDDEN);\n                        });\n                    }\n                }\n\n                if (this.options.resizable) {\n                    this.resize(true);\n                }\n            },\n\n            toggle: function(candidate, checked) {\n                var item = this._getItem(candidate),\n                    overflowItem = this._getOverflowItem(candidate),\n                    menuItem = item.menuItem;\n\n                if (checked === undefined$1) {\n                    checked = true;\n                }\n\n                function toggleItem(item) {\n                    const element = item.toolbarEl;\n                    const button = element.data(K_TOGGLE_BUTTON);\n\n                    if (!item.component && menuItem.find(DOT + MENU_LINK_TOGGLE).length === 0) {\n                        return;\n                    }\n\n                    const group = element.data(GROUP);\n\n                    if (item.component) {\n                        const parentGroup = element.closest(DOT + BUTTON_GROUP).data(K_BUTTON_GROUP);\n\n                        if (parentGroup) {\n                            if (element.hasClass(STATE_SELECTED) !== checked) {\n                                parentGroup._toggleIndex(element.index());\n                            }\n                        }\n\n                        button.toggle(checked);\n\n                        if (checked) {\n                            const groupButtons = element.closest(\".k-toolbar,.k-toolbar-popup\").find(\"[data-group=\" + group + \"]\");\n\n                            groupButtons.each((i, el) => {\n                                if (el !== element[0]) {\n                                    $(el).data(K_TOGGLE_BUTTON).toggle(false);\n                                }\n                            });\n                        }\n                    }\n                }\n\n                if (this.overflowSection && overflowItem) {\n                    toggleItem(overflowItem);\n                }\n\n                if (!item) {\n                    return;\n                }\n\n                toggleItem(item);\n\n                if (menuItem) {\n                    const group = item.toolbarEl.data(GROUP);\n\n                    menuItem\n                        .attr(ARIA_CHECKED, checked)\n                        .find(DOT + MENU_LINK_TOGGLE)\n                        .toggleClass(STATE_SELECTED, checked);\n\n                    if (checked && this.overflowMenu) {\n                        const groupButtons = this.overflowMenu.element.find(\"[data-group=\" + group + \"]\");\n\n                        groupButtons.each((i, el) => {\n                            if (el !== menuItem[0]) {\n                                $(el)\n                                    .attr(ARIA_CHECKED, false)\n                                    .find(DOT + MENU_LINK_TOGGLE)\n                                    .removeClass(STATE_SELECTED);\n                            }\n                        });\n                    }\n                }\n            },\n\n            toggleTools: function(conditions) {\n                var that = this,\n                    tools = that.element.find(DATA_TOGGLE_SELECTOR),\n                    focusable = that.element.find(KENDO_FOCUSABLE).not(TABINDEX_MINUS_1);\n\n                tools.each(function(index, elm) {\n                    var tool = $(elm),\n                        widget = null,\n                        condition = tool.data(TOGGLE),\n                        toToggle = conditions && conditions[condition];\n\n                    if (tool.is(DATA_ROLE_SELECTOR)) {\n                        widget = kendo.widgetInstance(tool);\n                    }\n\n                    if (widget && widget.enable) {\n                        widget.enable(toToggle || false);\n                    } else {\n                        that.enable(tool, toToggle);\n                    }\n                });\n\n                that.element.find(DATA_TOGGLE_SELECTOR + \"[disabled]\").removeAttr(\"disabled\");\n\n                that.element.find(KENDO_FOCUSABLE).not(TABINDEX_MINUS_1).attr(\"tabindex\", -1);\n                focusable.attr(TABINDEX, 0);\n            },\n\n            _generateToolElement: function(template, overflowTemplate, type, processed) {\n                let element;\n\n                if (template || overflowTemplate) {\n                    element = this._addTemplate(processed);\n                } else if (kendo.ui[processed.component]) {\n                    element = this._addCustomWidget(processed);\n                } else if (type) {\n                    element = this._addDefaultTool(type, processed);\n                } else if (processed.type === SPACER) {\n                    this._addSpacer();\n                } else if (processed.type === SEPARATOR) {\n                    this._addSeparator(processed);\n                }\n                return element;\n            },\n\n            _add: function(options) {\n                var processed = this._processOptions(options),\n                    template = processed.template,\n                    overflowTemplate = processed.overflowTemplate,\n                    type = WIDGET_TYPES[processed.type];\n                let element;\n\n                if (processed.overflow !== OVERFLOW_ALWAYS || this.options.overflow?.mode == \"menu\") {\n                    element = this._generateToolElement(template, overflowTemplate, type, processed);\n\n                    if (element && processed.overflow !== OVERFLOW_ALWAYS) {\n                        if (this.overflowAnchor && this.overflowAnchorSeparator) {\n                            element.insertBefore(this.overflowAnchorSeparator);\n                        } else {\n                            element.appendTo(this.element);\n                        }\n\n                        element.find(\"[disabled]\").removeAttr(\"disabled\");\n\n                        if (element.is(\"[disabled]\")) {\n                            element.removeAttr(\"disabled\");\n                        }\n                    }\n                }\n\n                if (this.options.overflow?.mode == \"section\" && processed.overflow !== OVERFLOW_NEVER) {\n                    if (processed.type === SPACER) {\n                        return this._addSpacer(this._overflowSectionContentElement());\n                    }\n\n                    if (processed.type === SEPARATOR) {\n                        return;\n                    }\n\n                    let sectionElement = this._generateToolElement(template, overflowTemplate, type, processed);\n\n                    if (sectionElement) {\n                        this._overflowSectionContentElement().append(sectionElement);\n                        if (processed.overflow !== OVERFLOW_ALWAYS) {\n                            sectionElement.addClass(STATE_HIDDEN);\n                        }\n\n                        sectionElement.find(\"[disabled]\").removeAttr(\"disabled\");\n\n                        if (sectionElement.is(\"[disabled]\")) {\n                            sectionElement.removeAttr(\"disabled\");\n                        }\n                        sectionElement.attr(\"ref-section-tool\", element?.attr(\"data-uid\") || \"\");\n                    }\n                }\n            },\n\n            _addAttributes: function(options, element) {\n                var attributes = options.attributes,\n                    classes = NOTHING;\n\n                if (!attributes) {\n                    attributes = {};\n                }\n\n                if (options.hidden) {\n                    classes = STATE_HIDDEN + EMPTY + FORCE_HIDDEN;\n                }\n\n                if (options.align) {\n                    classes = classes + \" k-align-\" + options.align;\n                }\n\n                if (attributes) {\n                    if (attributes.class) {\n                        classes = classes + EMPTY + attributes.class;\n                        delete attributes.class;\n                    }\n\n                    element.attr(attributes);\n                }\n\n                element.addClass(classes);\n                element.attr(KENDO_UID_ATTR, options.uid);\n\n                if (options.id) {\n                    element.attr(ID, options.id);\n                }\n                if (options.overflow === OVERFLOW_NEVER) {\n                    element.attr(\"data-overflow\", OVERFLOW_NEVER);\n                }\n\n                if (options.items) {\n                    options.items.forEach(item => {\n                        if (item && item.groupClass && !element.hasClass(item.groupClass)) {\n                            element.addClass(item.groupClass);\n                        }\n                    });\n                }\n            },\n\n            _addCustomWidget: function(options) {\n                var element = $(options.element || \"<input>\"),\n                    widget, result, classes;\n\n                if (options.overflowComponent) {\n                    this._addMenuItem(options.overflowComponent.type, $.extend({}, options, options.overflowComponent));\n                }\n\n                if (options.attributes) {\n                    classes = options.attributes.class;\n                    delete options.attributes[\"class\"];\n                    element.attr(options.attributes);\n                    delete options.attributes[ARIA_LABEL];\n                }\n\n                if (!options.componentOptions) {\n                    options.componentOptions = {};\n                }\n\n                options.componentOptions.size = this.options.size;\n\n                widget = new kendo.ui[options.component](element, options.componentOptions);\n\n                if (SAFE_COMPONENTS.indexOf(options.component) > -1) {\n                    widget.wrapper.addClass(TOOLBAR_TOOLS_CLASSES[options.component]).attr(ITEM_REF + TOOLBAR_TOOL, '');\n                    result = widget.wrapper;\n                } else {\n                    result = (widget.wrapper || widget.element).wrap(CUSTOM_WIDGET_WRAP).parent();\n                }\n\n                if (options.attributes) {\n                    options.attributes.class = classes;\n                }\n\n                this._addAttributes(options, result);\n\n                return result;\n            },\n\n            _addDefaultTool: function(component, options) {\n                var element, op;\n                let toolbar = this;\n\n                if (options.overflow !== OVERFLOW_ALWAYS || (toolbar.overflowSection && options.overflow !== OVERFLOW_NEVER)) {\n                    element = toolbar._addToolbarTool(component, $.extend(true, {}, options));\n                }\n\n                if (toolbar.overflowMenu && options.overflow !== OVERFLOW_NEVER) {\n                    if (options.overflowComponent) {\n                        op = $.extend(true, {}, options, options.overflowComponent);\n                        delete op[\"data-command\"];\n                        toolbar._addMenuItem(\"Button\", op);\n                    } else {\n                        toolbar._addMenuItem(component, $.extend(true, {}, options));\n                    }\n                }\n\n                return element;\n            },\n\n            _addMenuItem: function(component, options) {\n                var that = this,\n                    selected = options.selected,\n                    menuitem;\n\n                delete options.selected;\n\n                if (options.id) {\n                    options.id = options.id + DASH + OVERFLOW;\n                }\n                if (options.showIcon === TOOLBAR) {\n                    delete options.imageUrl;\n                    delete options.icon;\n                }\n\n                if (options.showText === TOOLBAR) {\n                    if (!options.attributes) {\n                        options.attributes = {};\n                    }\n\n                    options.attributes[ARIA_LABEL] = options.text;\n\n                    options.text = NOTHING;\n                } else if (options.text === undefined$1 || options.text === NOTHING) {\n                    options.text = NBSP;\n                    options.encoded = false;\n                }\n\n                that.overflowMenu?.append(options);\n                menuitem = that.overflowMenu.element.find(DOT + MENU_ITEM).last();\n\n                if (options.icon) {\n                    menuitem.find(DOT + MENU_LINK).prepend(kendo.ui.icon(options.icon));\n                }\n\n                if (component === \"ToggleButton\" || (component === \"Button\" && options.togglable === true)) {\n                    menuitem.find(DOT + MENU_LINK).addClass(MENU_LINK_TOGGLE);\n\n                    if (selected) {\n                        menuitem.find(DOT + MENU_LINK).addClass(STATE_SELECTED);\n                    }\n\n                    if (options.group) {\n                        menuitem.attr(\"data-group\", options.group);\n                    }\n                } else if (options.menuButtons) {\n                    options.menuButtons.forEach((i) => {\n                        i.overflow = options.overflow;\n                        that._addMenuItem(null, i);\n                    });\n                } else if (options.buttons) {\n                    menuitem.remove();\n                    menuitem = null;\n\n                    options.buttons.forEach((i) => {\n                        var attributes = i.attributes;\n                        i.overflow = options.overflow;\n                        i.attributes = $.extend(attributes, options.attributes);\n\n                        that._addMenuItem(\"Button\", i);\n                    });\n                }\n\n                if (component === \"DropDownButton\") {\n                    menuitem.addClass(STATE_DISABLED);\n                    menuitem.attr(ARIA_DISABLED, true);\n                }\n\n                if (menuitem) {\n                    that._addAttributes(options, menuitem);\n\n                    if (options.overflow === OVERFLOW_AUTO) {\n                        menuitem.addClass(STATE_HIDDEN);\n                    }\n\n                    if (options.click || options.toggle) {\n                        that.overflowMenu.bind(SELECT, (e) => {\n                            if (e.item === menuitem[0]) {\n                                this._onMenuItemSelect(e, options.click, options.toggle);\n                            }\n                        });\n                    }\n                }\n\n                return menuitem;\n            },\n\n            _addPopupButton: function(options) {\n                var that = this,\n                    widgetElement = $(POPUP_BUTTON_TEMPLATE),\n                    component = options.popupComponent,\n                    popup, chooser;\n\n                widgetElement.attr(ARIA_LABEL, options.text);\n\n                popup = $(\"<div/>\").appendTo($(\"<body>\")).kendoPopup({\n                    anchor: widgetElement\n                }).data(\"kendoPopup\");\n\n                widgetElement.on(CLICK + \" touchend\", (e) => {\n                    popup.toggle();\n                    e.preventDefault();\n                });\n\n                chooser = new component(popup.element);\n\n                chooser.bind(options.commandOn, (e) => {\n                    that.trigger(CHANGE, { target: widgetElement, value: e.value || e });\n                    popup.close();\n                });\n\n                return { widgetElement, chooser, popup };\n            },\n\n            _addSeparator: function(options) {\n                var separator = $(SEPARATOR_EL),\n                    overflowSeparator = $(SEPARATOR_OVERFLOW_EL);\n                const id = options.id;\n\n                separator.addClass(KSEPARATOR);\n                separator.attr(ROLE, SEPARATOR);\n\n                if (this.overflowAnchor && this.overflowAnchorSeparator) {\n                    separator.insertBefore(this.overflowAnchorSeparator);\n                } else {\n                    separator.appendTo(this.element);\n                }\n\n                this._addAttributes(options, separator);\n\n                if (options.id) {\n                    options.id = options.id + DASH + OVERFLOW;\n                }\n\n                this._addAttributes(options, overflowSeparator);\n\n                if (this.overflowMenu) {\n                    this.overflowMenu.element.append(overflowSeparator);\n                }\n\n                if (this.overflowSection) {\n                    const sectionSeparator = $(SEPARATOR_EL)\n                        .addClass(KSEPARATOR)\n                        .addClass(STATE_HIDDEN)\n                        .attr(ROLE, SEPARATOR)\n                        .attr(\"ref-section-tool\", options.uid);\n\n                    let sectionSeparatorOptions = id ? $.extend(true, options, { id: id + DASH + \"section-overflow\" }) : options;\n\n                    this._addAttributes(sectionSeparatorOptions, sectionSeparator);\n                    this._overflowSectionContentElement().append(sectionSeparator);\n                }\n            },\n\n            _addSpacer: function(destinationElement) {\n                var spacer = $(SPACER_EL);\n                spacer.addClass(SPACER_CLASS);\n\n                if (this.overflowAnchor && this.overflowAnchorSeparator) {\n                    spacer.insertBefore(this.overflowAnchorSeparator);\n                } else {\n                    spacer.appendTo(destinationElement || this.element);\n                }\n            },\n            _overflowSectionContentElement: function() {\n                return this.overflowSection?.element.find(\".k-toolbar-items-list\");\n            },\n            _addTemplate: function(options) {\n                var template = options.template,\n                    overflowTemplate = options.overflowTemplate,\n                    element, menuitem, inputsInTemplate = $(NOTHING);\n\n                if (overflowTemplate && this.overflowMenu && options.overflow !== OVERFLOW_NEVER) {\n                    overflowTemplate = isFunction(overflowTemplate) ? overflowTemplate(options)[0] : overflowTemplate;\n                    this.overflowMenu.append({});\n                    menuitem = this.overflowMenu.element\n                        .find(DOT + MENU_ITEM)\n                        .last()\n                        .find(DOT + MENU_LINK)\n                        .html(overflowTemplate)\n                        .parent();\n                }\n\n                if (template && options.overflow !== OVERFLOW_ALWAYS) {\n                    if (this.options.evaluateTemplates) {\n                        template = kendo.template(template);\n                    }\n\n                    template = isFunction(template) ? template(options) : template;\n\n                    element = $(TEMPLATE_WRAPPER);\n                    element.html(template);\n\n                    if (menuitem) {\n                        menuitem.addClass(STATE_HIDDEN);\n                    }\n                }\n\n                if (element) {\n                    inputsInTemplate = element.find(INPUT + COMMA + SELECT);\n                    this._addAttributes(options, element);\n                }\n\n                if (menuitem) {\n                    inputsInTemplate.add(menuitem.find(INPUT + COMMA + SELECT));\n                    this._addAttributes(options, menuitem);\n                }\n\n                if (!this.options.navigateOnTab && inputsInTemplate.length > 0) {\n                    element.attr(TABINDEX, 0);\n                    element.attr(ITEM_REF + TOOLBAR_TOOL, '');\n                    inputsInTemplate.attr(TABINDEX, -1);\n                }\n\n                return element;\n            },\n\n            _addToolbarTool: function(component, options) {\n                var widgetElement = $(\"<button>\"),\n                    hasButtons = false,\n                    widget, element, popupRef;\n\n                if (options.primary === true) {\n                    options.themeColor = PRIMARY;\n                }\n                if (options.url) {\n                    widgetElement = $(\"<a href='\" + kendo.sanitizeLink(options.url) + \"'>\");\n                }\n                if (options.showIcon === OVERFLOW) {\n                    delete options.imageUrl;\n                    delete options.icon;\n                }\n                if (options.showText !== OVERFLOW) {\n                    widgetElement.text(options.text);\n                } else {\n                    widgetElement.attr(ARIA_LABEL, options.text);\n                }\n\n                if (options.type === \"popupButton\") {\n                    popupRef = this._addPopupButton(options);\n                    widgetElement = popupRef.widgetElement;\n                } else if (component === \"Button\" && options.togglable === true) {\n                    component = \"ToggleButton\";\n                } else if (options.menuButtons) {\n                    options.items = options.menuButtons;\n                    delete options.menuButtons;\n\n                    if (options.attributes && options.attributes.class) {\n                        widgetElement.addClass(options.attributes.class);\n                    }\n\n                    widgetElement.attr(DATA_UID, options.uid);\n                    delete options.uid;\n                } else if (options.buttons) {\n                    widgetElement = $(\"<span></span>\");\n                    hasButtons = true;\n                    options.items = options.buttons;\n                    delete options.buttons;\n\n                    options.preventKeyNav = true;\n\n                    options.items.forEach(i => {\n                        if (i.showIcon === OVERFLOW) {\n                            delete i.imageUrl;\n                            delete i.icon;\n                        }\n\n                        if (i.showText === OVERFLOW) {\n                            if (!i.attributes) {\n                                i.attributes = {};\n                            }\n\n                            i.attributes[ARIA_LABEL] = i.text;\n\n                            delete i.text;\n                        }\n                    });\n                }\n\n                if (options.id) {\n                    widgetElement.attr(ID, options.id);\n                    delete options.id;\n                }\n\n                // Remove the name property. Otherwise the default component name will be overriden.\n                // This will cause us to init an element with data-role=${name} instead of the correct data-role of the component.\n                if (options.name) {\n                    delete options.name;\n                }\n\n                options.size = this.options.size;\n\n                widget = new kendo.ui[component]($(widgetElement), options);\n                element = widget.wrapper || widget.element;\n                element.addClass(TOOLBAR_TOOLS_CLASSES[component]);\n                this._addAttributes(options, element);\n\n                if (options.url) {\n                    widgetElement.removeAttr(ROLE);\n                }\n\n                if (hasButtons) {\n                    element.find(DOT + KBUTTON).attr(ITEM_REF + TOOLBAR_TOOL, '');\n                    this._groupVisibleButtons(element);\n                } else {\n                    widget.element.attr(ITEM_REF + TOOLBAR_TOOL, '');\n                }\n\n                if (options.type !== \"popupButton\" && options.type !== \"open\") {\n                    this._attachWidgetEvents(widget);\n                } else if (options.type === \"open\") {\n                    widgetElement.addClass(UPLOAD_BUTTON);\n                    this._resetOpen(widgetElement, options.extensions);\n                    element = widgetElement.parent();\n                } else {\n                    widget.chooser = popupRef.chooser;\n                    widget.popup = popupRef.popup;\n                }\n\n                return element;\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    options = that.options;\n\n                that.element.on(KEYDOWN + ns, that._keydown.bind(that))\n                    .on(FOCUSIN + ns, that._focusIn.bind(that))\n                    .on(FOCUSOUT + ns, that._focusOut.bind(that));\n\n                if (options.overflow?.mode == \"section\" && that.overflowSection) {\n                    that._overflowSectionContentElement().on(KEYDOWN + ns, that._keydown.bind(that));\n                }\n\n                if (options.overflow?.mode == \"scroll\") {\n                    that.element.find(\"> .k-toolbar-items\").bind(\"scroll\", function(e) {\n                        if (!that._nowScrollingTabs) {\n                            that._toggleScrollButtons();\n                        }\n                    });\n                }\n            },\n\n            _attachWidgetEvents: function(widget) {\n                var that = this;\n\n                widget.bind(CLICK, that._onClick.bind(that));\n                widget.bind(TOGGLE, that._onToggle.bind(that));\n                widget.bind(SELECT, that._onSelect.bind(that));\n                widget.bind(OPEN, that._onOpen.bind(that));\n                widget.bind(CLOSE, that._onClose.bind(that));\n\n                widget.wrapper.find(DOT + KBUTTON).each((i, el) => {\n                    var $el = $(el);\n\n                    if ($el.data(\"kendoButton\")) {\n                        $el.data(\"kendoButton\").bind(CLICK, (e) => {\n                            that.trigger(CLICK, { id: e.id, target: e.target, originalEvent: e.originalEvent || e.event });\n                        });\n                    }\n                });\n            },\n\n            _childrenWidth: function() {\n                var gap = parseInt(this.element.css('gap'), 10) || 0;\n                var childrenWidth = gap;\n                let container = this.element.find(\"> .k-toolbar-items\").length > 0 ? this.element.find(\"> .k-toolbar-items\") : this.element;\n\n                container.children(\":visible:not(\" + DOT + SPACER_CLASS + \")\").each(function() {\n                    childrenWidth += outerWidth($(this), false) + gap;\n                });\n\n                return Math.ceil(childrenWidth);\n            },\n\n            _extendToolsOptions: function() {\n                var options = this.options,\n                    items = options.tools.flatMap((tool) => this._mapTool(tool, options.parentMessages, options.defaultTools));\n\n                this.options.items = items;\n\n                return items;\n            },\n\n            _focusIn: function(e) {\n                var target = $(e.target),\n                    button = target.closest(DOT + KBUTTON);\n\n                if (button.length > 0) {\n                    this._resetTabIndex(button);\n                    button.addClass(KFOCUS);\n                }\n            },\n\n            _focusOut: function(e) {\n                this.wrapper.find(DOT + KBUTTON + DOT + KFOCUS).removeClass(KFOCUS);\n            },\n\n            _getAllItems: function(isSection) {\n                let container = isSection == true ? this._overflowSectionContentElement() : this.wrapper;\n                return container.find(ITEM_REF_SELECTOR)\n                    .filter(\":visible\")\n                    .filter((i, el) => {\n                        if (el.style.visibility === HIDDEN) {\n                            return false;\n                        }\n\n                        return true;\n                    });\n            },\n\n            _getOverflowItem: function(candidate, knownUid) {\n                return this._getItem(candidate, knownUid, this._overflowSectionContentElement());\n            },\n\n            _getItem: function(candidate, knownUid, container) {\n                var uid = knownUid || this._getUid(candidate),\n                    buttonsPopups = $(DATA_ROLE_BUTTONMENU),\n                    uidSelector, toolbarEl;\n\n                if (!uid) {\n                    return {\n                        toolbarEl: (container || this.element).find(candidate),\n                        templateEl: $(NOTHING),\n                        menuItem: this.overflowMenu ? this.overflowMenu.element.find(candidate) : $(NOTHING),\n                        buttonsPopupItem: $(NOTHING)\n                    };\n                }\n\n                uidSelector = \"[data-uid=\" + uid + \"]\";\n                toolbarEl = (container || this.element).find(uidSelector);\n\n                return {\n                    toolbarEl: toolbarEl,\n                    templateEl: toolbarEl.closest(DOT + TEMPLATE_ITEM + COMMA + DOT + SPLIT_BUTTON),\n                    component: kendo.widgetInstance(toolbarEl),\n                    menuItem: this.overflowMenu ? this.overflowMenu.element.find(uidSelector) : $(NOTHING),\n                    buttonsPopupItem: buttonsPopups.find(uidSelector)\n                };\n            },\n\n            _getNextElement: function(item, direction) {\n                const isSection = $(item).closest(\".k-toolbar-popup\").length > 0;\n                var items = this._getAllItems(isSection),\n                    itemIndex = items.index(item) === -1 ? items.index(item.parentElement) : items.index(item),\n                    focusableItem = items[itemIndex + direction];\n\n                if (!focusableItem) {\n                    if (direction === -1) {\n                        focusableItem = items.last();\n                    } else {\n                        focusableItem = items.first();\n                    }\n                }\n\n                return focusableItem;\n            },\n\n            _getUid: function(candidate) {\n                var element;\n\n                // find toolbar item by jQuery selector\n                element = this.element.find(candidate);\n\n                // if not found find in in the DropDown-/SplitButton popups\n                if (!element.length) {\n                    element = $(DATA_ROLE_BUTTONMENU).find(candidate);\n                }\n\n                // if not, find it in the OverflowMenu\n                if (!element.length && this.overflowMenu) {\n                    element = this.overflowMenu.element.find(candidate);\n                }\n\n                // if not, find it in the OverflowSection\n                if (!element.length && this.overflowSection) {\n                    element = this._overflowSectionContentElement().find(candidate);\n                }\n\n                if (!element.length) {\n                    return null;\n                } else {\n                    return element.data(UID) || element.closest(ITEM_REF_SELECTOR).data(UID);\n                }\n            },\n\n            _groupVisibleButtons: function(el) {\n                var buttons = el.children(),\n                    visibleBtns;\n\n                buttons.removeClass(GROUP_END).removeClass(GROUP_START);\n                visibleBtns = buttons.filter(\":not('.\" + STATE_HIDDEN + \"')\");\n                visibleBtns.first().addClass(GROUP_START);\n                visibleBtns.last().addClass(GROUP_END);\n            },\n\n            _hideItem: function(item) {\n                var that = this,\n                    widget;\n\n                item.addClass(STATE_HIDDEN);\n\n                if (this.overflowSection) {\n                    this._overflowSectionContentElement().find(`[ref-section-tool=${item.data(\"uid\")}]`).removeClass(STATE_HIDDEN);\n                }\n\n                if (that.overflowMenu) {\n                    if (item.hasClass(SPLIT_BUTTON) || item.hasClass(MENU_BUTTON)) {\n                        if (item.hasClass(SPLIT_BUTTON)) {\n                            item = item.children().eq(0);\n                            widget = item.data(K_SPLIT_BUTTON);\n                        } else {\n                            widget = item.data(K_DROP_DOWN_BUTTON);\n                        }\n\n                        widget.menu.list.children().each((i, el) => {\n                            that._showMenuItem($(el));\n                        });\n\n                        that._showMenuItem(item);\n                    } else if (item.hasClass(BUTTON_GROUP)) {\n                        item.children().each((i, el) => {\n                            that._showMenuItem($(el));\n                        });\n                    } else {\n                        that._showMenuItem(item);\n                    }\n                }\n            },\n\n            _hideMenuItem: function(item) {\n                this.overflowMenu.element\n                    .find(\">li[data-uid='\" + item.data(UID) + \"']\")\n                    .addClass(STATE_HIDDEN);\n            },\n\n            _items: function() {\n                let options = this.options;\n\n                for (var i = 0; i < options.items.length; i++) {\n                    this._add(options.items[i]);\n                }\n            },\n\n            _keydown: function(e) {\n                var target = $(e.target),\n                    keyCode = e.keyCode,\n                    templateItem = target.closest(DOT + TEMPLATE_ITEM),\n                    isOverflowAnchor = target.is(DOT + OVERFLOW_ANCHOR);\n                const isInSection = target.closest(DOT + \"k-toolbar-popup\").length > 0;\n\n                if (!this.options.navigateOnTab && !target.is(ITEM_REF_SELECTOR) && keyCode === keys.ESC && templateItem.length > 0) {\n                    e.stopPropagation();\n                    this._keyDeactivateTemplate(templateItem);\n                    return;\n                }\n\n                if (!target.is(ITEM_REF_SELECTOR)) {\n                    return;\n                }\n\n                if (!this.options.navigateOnTab && keyCode === keys.ENTER && target.hasClass(TEMPLATE_ITEM)) {\n                    this._keyActivateTemplate(target);\n                } else if (isInSection && keyCode === keys.ESC) {\n                    this.overflowSection.close();\n                    this.element.trigger(FOCUS);\n                } else if (isOverflowAnchor && (e.altKey && keyCode === keys.DOWN || keyCode === keys.SPACEBAR)) {\n                    this._keyOpenOverflow(e, keyCode);\n                } else if (keyCode === keys.HOME) {\n                    this._keyFocusFirst(target, e);\n                } else if (keyCode === keys.END) {\n                    this._keyFocusLast(target, e);\n                } else if (!this.options.navigateOnTab && (keyCode === keys.RIGHT || keyCode === keys.LEFT)) {\n                    this._keyFocusNext(keyCode, e);\n                }\n            },\n\n            _keyActivateTemplate: function(target) {\n                var innerFocusable = target.find(KENDO_FOCUSABLE + \":not('\" + DOT + INPUT_BUTTON + \"')\" + COMMA + DOT + DROPDOWNLIST);\n                const pagerTool = target.find('.k-pager');\n\n                if (pagerTool.length > 0) {\n                    pagerTool.trigger(FOCUS);\n                } else if (innerFocusable.length > 0) {\n                    target.attr(TABINDEX, -1);\n\n                    innerFocusable.attr(TABINDEX, 0);\n                    innerFocusable.first().trigger(FOCUS);\n                }\n            },\n\n            _keyDeactivateTemplate: function(templateItem) {\n                var innerWidget = templateItem.find(DATA_ROLE_SELECTOR),\n                    innerFocusable = templateItem.find(KENDO_FOCUSABLE + \":not('\" + DOT + INPUT_BUTTON + \"')\" + COMMA + DOT + DROPDOWNLIST),\n                    widgetInstance;\n\n                if (innerWidget.length > 0) {\n                    widgetInstance = kendo.widgetInstance(innerWidget);\n\n                    if (widgetInstance) {\n                        if (widgetInstance.overflowMenu && widgetInstance.overflowMenu.visible()) {\n                            return;\n                        } else {\n                            templateItem.attr(TABINDEX, 0);\n                            templateItem.trigger(FOCUS);\n                            templateItem.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                        }\n                    }\n                }\n\n                if (innerFocusable.length > 0) {\n                    templateItem.attr(TABINDEX, 0);\n                    templateItem.trigger(FOCUS);\n                    innerFocusable.attr(TABINDEX, -1);\n                }\n            },\n\n            _keyFocusFirst: function(target, e) {\n                const isSection = target.closest(\".k-toolbar-popup\").length > 0;\n                var items = this._getAllItems(isSection);\n\n                if (target.is(DOT + DROPDOWNLIST) || target.is(INPUT)) {\n                    return;\n                }\n\n                this._resetTabIndex(items.first());\n                items.first().trigger(FOCUS);\n                e.preventDefault();\n            },\n\n            _keyFocusLast: function(target, e) {\n                const isSection = target.closest(\".k-toolbar-popup\").length > 0;\n                var items = this._getAllItems(isSection),\n                    last;\n\n                if (target.is(DOT + DROPDOWNLIST) || target.is(INPUT)) {\n                    return;\n                }\n\n                last = items.last();\n\n                if (last.width() === 0) {\n                    last = items.eq(items.length - 2);\n                }\n\n                this._resetTabIndex(last);\n                last.trigger(FOCUS);\n                e.preventDefault();\n            },\n\n            _keyFocusNext: function(keyCode, e) {\n                var direction = this._isRtl ? -1 : 1,\n                    next;\n\n                if (keyCode === keys.LEFT) {\n                    direction = -1 * direction;\n                }\n\n                next = $(this._getNextElement(e.target, direction));\n                this._resetTabIndex(next);\n                next.trigger(FOCUS);\n\n                e.preventDefault();\n            },\n\n            _keyOpenOverflow: function(e, keyCode) {\n                if (keyCode === keys.SPACEBAR) {\n                    e.preventDefault();\n                }\n\n                (this.overflowMenu || this.overflowSection).open();\n            },\n\n            _mapAttributes: function(toolOptions, messages) {\n                return {\n                    \"aria-label\": messages[toolOptions.name || toolOptions.property],\n                    \"title\": messages[toolOptions.name || toolOptions.property],\n                    \"data-command\": toolOptions.command,\n                    \"data-options\": toolOptions.options,\n                    \"data-dialog\": toolOptions.dialog,\n                    \"data-property\": toolOptions.property,\n                    \"data-value\": toolOptions.value,\n                    \"data-toggle\": toolOptions.toggleCondition\n                };\n            },\n\n            _mapComponent: function(component, messages) {\n                var that = this,\n                    componentOptions = component.componentOptions,\n                    componentMessages = componentOptions.messages,\n                    componentPlaceholder = componentOptions.placeholder,\n                    attributes = $.extend({}, that._mapAttributes(component, messages), component.attributes),\n                    options;\n\n                if (component.overflowComponent) {\n                    options = component.options || {};\n\n                    if (component.componentOptions.dataSource) {\n                        options.options = component.componentOptions.dataSource;\n                    }\n                    if (component.componentOptions.value) {\n                        options.default = component.componentOptions.value;\n                    }\n\n                    if (Object.keys(options).length > 0) {\n                        component.overflowComponent.options = JSON.stringify(options);\n                    }\n\n                    component.overflowComponent = that._mapTool(component.overflowComponent, messages);\n                }\n\n                if (componentMessages) {\n                    Object.keys(componentMessages).forEach((key) => {\n                        component.componentOptions.messages[key] = messages[componentMessages[key]] || componentMessages[key];\n                    });\n                }\n\n                if (componentPlaceholder) {\n                    component.componentOptions.placeholder = messages[componentPlaceholder] || componentPlaceholder;\n                }\n\n                Object.keys(componentOptions).forEach((key) => {\n                    if (key === \"commandOn\") {\n                        component.componentOptions[componentOptions[key]] = (ev) => {\n                            that.trigger(CHANGE, { target: ev.target || ev.sender.element });\n                        };\n                    }\n                });\n\n                if (componentOptions.dataSource && componentOptions.dataSource.length) {\n                    component.componentOptions.dataSource = componentOptions.dataSource.map(i => {\n                        if (i.name && messages[i.name]) {\n                            i.text = messages[i.name];\n                        }\n\n                        return i;\n                    });\n                }\n\n                component.attributes = attributes;\n\n                return component;\n            },\n\n            _mapTool: function(tool, messages, defaultTools) {\n                let that = this,\n                    isArray = Array.isArray(tool),\n                    isPlainObjectTool = $.isPlainObject(tool),\n                    toolKeysCount = isPlainObjectTool && Object.keys(tool).length,\n                    isBuiltInTool, toolOptions, attributes, originalTool;\n\n                if (isArray) {\n                    return {\n                        type: \"buttonGroup\",\n                        buttons: tool.map(t => that._mapTool(t, messages, defaultTools))\n                    };\n                }\n\n                isBuiltInTool = isPlainObjectTool && (toolKeysCount === 1 || toolKeysCount === 2) && tool.name;\n                originalTool = isBuiltInTool ? tool : {};\n                tool = isBuiltInTool ? tool.name : tool;\n                toolOptions = $.isPlainObject(tool) ? tool : $.extend({}, defaultTools[tool]);\n\n                attributes = $.extend({}, that._mapAttributes(toolOptions, messages), toolOptions.attributes);\n\n                kendo.deepExtend(toolOptions, {\n                    text: originalTool.text || messages[toolOptions.name || toolOptions.property],\n                    attributes: attributes,\n                });\n\n                if (toolOptions.type === \"component\") {\n                    if (toolOptions.items) {\n                        return toolOptions.items.map(t => that._mapComponent(t, messages));\n                    } else {\n                        return that._mapComponent(toolOptions, messages);\n                    }\n                } else if (toolOptions.type === \"buttonGroup\") {\n                    delete toolOptions.attributes[ARIA_LABEL];\n                    toolOptions.buttons = toolOptions.buttons.map(t => that._mapTool(t, messages, defaultTools));\n                } else if (toolOptions.type === \"splitButton\") {\n                    delete toolOptions.attributes[ARIA_LABEL];\n                    toolOptions.menuButtons = toolOptions.menuButtons.flatMap(t => that._mapTool(t, messages, defaultTools));\n                } else if (toolOptions.type === \"popupButton\" && toolOptions.overflowComponent) {\n                    toolOptions.overflowComponent = that._mapTool(toolOptions.overflowComponent, messages);\n                }\n\n                delete toolOptions.name;\n\n                return toolOptions;\n            },\n\n            _menuItemSelect: function(e) {\n                var item = $(e.item),\n                    id = item.attr(ID),\n                    togglable = item.find(DOT + MENU_LINK_TOGGLE),\n                    groupName = item.data(GROUP),\n                    shouldSelect, twin, group;\n\n                if (id && id.indexOf(DASH + OVERFLOW) > -1) {\n                    id = id.replace(DASH + OVERFLOW, NOTHING);\n                }\n\n                if (togglable.length) {\n                    if (groupName) {\n                        this.overflowMenu.element.find(\"[data-group=\" + groupName + \"]\").each((i, el) => {\n                            var current = $(el);\n\n                            current.attr(ARIA_CHECKED, false);\n                            current.find(DOT + MENU_LINK_TOGGLE).removeClass(STATE_SELECTED);\n                        });\n                    }\n\n                    shouldSelect = groupName ? true : !togglable.hasClass(STATE_SELECTED);\n\n                    togglable.toggleClass(STATE_SELECTED, shouldSelect);\n                    item.attr(ARIA_CHECKED, shouldSelect);\n\n                    twin = this.element.find(\"[data-uid=\" + item.data(UID) + \"]\");\n\n                    if (twin.length) {\n                        if (twin.closest(DOT + BUTTON_GROUP).length) {\n                            group = twin.closest(DOT + BUTTON_GROUP).data(K_BUTTON_GROUP);\n                            group.select(twin);\n                        } else {\n                            if (groupName) {\n                                this.element.find(\"[data-group=\" + groupName + \"]\").each((i, el) => {\n                                    $(el).data(K_TOGGLE_BUTTON).toggle(false);\n                                });\n                            }\n\n                            twin.data(K_TOGGLE_BUTTON).toggle(true);\n                        }\n                    }\n\n                    this.trigger(TOGGLE, {\n                        id: item.attr(ID),\n                        target: item,\n                        checked: shouldSelect\n                    });\n                } else {\n                    this.trigger(CLICK, {\n                        id: id,\n                        target: item,\n                    });\n                }\n            },\n\n            _onClick: function(e) {\n                var el = e.target,\n                    togglable = el.hasClass(\"k-toolbar-toggle-button\"),\n                    group = el.data(GROUP);\n\n                if (!togglable) {\n                    this.trigger(CLICK, { id: e.id, target: e.target, originalEvent: e.originalEvent || e.event });\n                }\n\n                if (group && this.element.find(\"[data-group=\" + group + \"]\").length > 1) {\n                    if (el.hasClass(STATE_SELECTED)) {\n                        e.preventDefault();\n                    }\n                }\n            },\n\n            _onClose: function(e) {\n                if (this.trigger(CLOSE, { widget: e.sender })) {\n                    e.preventDefault();\n                }\n            },\n\n            _onMenuItemSelect: function(e, click, toggle) {\n                var item = $(e.item),\n                    togglable = item.find(DOT + MENU_LINK_TOGGLE).length > 0,\n                    id = item.attr(ID);\n\n                if (id && id.indexOf(DASH + OVERFLOW) > -1) {\n                    id = id.replace(DASH + OVERFLOW, NOTHING);\n                }\n\n                if (click) {\n                    click.bind(this)({\n                        event: e.event,\n                        id: id,\n                        target: item\n                    });\n                }\n\n                if (togglable && toggle) {\n                    setTimeout(() => {\n                        toggle.bind(this)({\n                            event: e.event,\n                            id: id,\n                            target: item,\n                            checked: item.find(DOT + STATE_SELECTED).length > 0\n                        });\n                    });\n                }\n            },\n\n            _onOpen: function(e) {\n                if (this.trigger(OPEN, { widget: e.sender })) {\n                    e.preventDefault();\n                }\n            },\n\n            // triggered on Radio group select action\n            _onSelect: function(e) {\n                let that = this;\n                var menuEl = this.overflowMenu ? this.overflowMenu.element : $(NOTHING);\n\n                e.sender.element.children().each((i, el) => {\n                    var current = $(el),\n                        uid = current.data(UID),\n                        dataUidSelector = `[data-uid=${uid}]`,\n                        selected = current.hasClass(STATE_SELECTED);\n\n                    menuEl\n                        .find(dataUidSelector)\n                        .attr(ARIA_CHECKED, selected)\n                        .find(DOT + MENU_LINK_TOGGLE)\n                        .toggleClass(STATE_SELECTED, selected);\n\n                    if (that.overflowSection) {\n                        let mainItem = that.element.find(dataUidSelector);\n                        let overflowItem = that.overflowSection.element.find(dataUidSelector);\n\n                        let component = kendo.widgetInstance(mainItem[0] == el ? overflowItem : mainItem);\n                        //sync the main item with the overflow item\n                        component?.toggle?.(selected);\n                    }\n                });\n\n                this.trigger(TOGGLE, {\n                    id: e.target.attr(ID),\n                    target: e.target,\n                    checked: e.target.hasClass(STATE_SELECTED)\n                });\n            },\n\n            _onToggle: function(e) {\n                var that = this,\n                    el = e.target,\n                    group = el.data(GROUP),\n                    overflowItem,\n                    overflowGroup;\n\n                if (that.overflowMenu) {\n                    overflowItem = that.overflowMenu.element.find(\"[data-uid=\" + el.attr(DATA_UID) + \"]\");\n                    overflowGroup = that.overflowMenu.element.find(\"[data-group=\" + group + \"]\");\n\n                    overflowGroup.attr(ARIA_CHECKED, false).find(DOT + MENU_LINK_TOGGLE).removeClass(STATE_SELECTED);\n                    overflowItem.attr(ARIA_CHECKED, true).find(DOT + MENU_LINK_TOGGLE).addClass(STATE_SELECTED);\n                }\n\n                if (that.overflowSection) {\n                    let mainItem = that.element.find(\"[data-uid=\" + el.attr(DATA_UID) + \"]\");\n                    overflowItem = that.overflowSection.element.find(\"[data-uid=\" + el.attr(DATA_UID) + \"]\");\n                    let component = kendo.widgetInstance(mainItem[0] == e.target[0] ? overflowItem : mainItem);\n                    //sync the main item with the overflow item\n                    component?.toggle?.(e.checked);\n                }\n\n                if (group) {\n                    that.element.find(\"[data-group=\" + group + \"]\").each((i, item) => {\n                        if (item !== el[0]) {\n                            $(item).data(K_TOGGLE_BUTTON).toggle(false);\n                        }\n                    });\n                }\n\n                this.trigger(TOGGLE, { id: e.id, target: e.target, checked: e.checked, originalEvent: e.originalEvent || e.event });\n            },\n\n            _processInner(items, parentUid) {\n                var attributes, current;\n\n                for (var i = 0; i < items.length; i++) {\n                    current = items[i];\n                    attributes = current.attributes;\n\n                    if (!attributes) {\n                        items[i].attributes = {};\n                    }\n\n                    items[i].attributes[DATA_UID] = kendo.guid();\n                    items[i].attributes[DATA_PARENTUID] = parentUid;\n\n                    if (current.id) {\n                        items[i].attributes[ID] = items[i].id;\n                    }\n\n                    if (current.hidden) {\n                        if (!items[i].attributes.class) {\n                            items[i].attributes.class = NOTHING;\n                        }\n\n                        items[i].attributes.class += (EMPTY + STATE_HIDDEN + EMPTY + FORCE_HIDDEN);\n                    }\n                }\n\n                return items;\n            },\n\n            _processOptions: function(options) {\n                let that = this,\n                    template = options.template,\n                    overflowTemplate = options.overflowTemplate,\n                    uid = kendo.guid(),\n                    groupName;\n\n                $.extend(options, {\n                    uid: uid,\n                    fillMode: options.fillMode ? options.fillMode : that.options.fillMode,\n                    rootUid: this.uid\n                });\n\n                if (options.menuButtons) {\n                    options.menuButtons = this._processInner(options.menuButtons, uid);\n                } else if (options.buttons && options.buttons.length) {\n                    options.buttons = this._processInner(options.buttons, uid);\n\n                    if (options.buttons.some(b => b.togglable)) {\n                        groupName = options.buttons[0].group;\n\n                        if (!!groupName && options.buttons.every(b => b.group === groupName)) {\n                            options.selection = SINGLE;\n                        } else {\n                            options.selection = MULTIPLE;\n                        }\n                    } else {\n                        options.selection = NONE;\n                    }\n                }\n\n                if ((template && !overflowTemplate) || options.type === SPACER) {\n                    options.overflow = OVERFLOW_NEVER;\n                } else if (!options.overflow) {\n                    options.overflow = OVERFLOW_AUTO;\n                }\n\n                if (options.enable !== undefined$1) {\n                    options.enabled = options.enable;\n                }\n\n                return options;\n            },\n\n            _renderOverflow: function() {\n                var that = this,\n                    isRtl = that._isRtl,\n                    horizontalDirection = isRtl ? \"left\" : \"right\";\n                const overflowMode = that.options.overflow?.mode;\n\n                if (overflowMode !== \"section\" && overflowMode !== \"menu\") {\n                    return;\n                }\n\n                that.overflowAnchorSeparator = $(`<div class=\"k-toolbar-separator k-toolbar-button-separator k-separator\" ${ROLE}=\"${SEPARATOR}\"></div>`);\n                that.overflowAnchor = $(\"<button class='k-toolbar-overflow-button' title='More tools'>\");\n                that.overflowAnchor.attr(ITEM_REF + TOOLBAR_TOOL, '');\n                that.element.append(that.overflowAnchorSeparator);\n                that.element.append(that.overflowAnchor);\n                that.overflowAnchor.kendoButton({\n                    icon: overflowMode == \"menu\" ? \"more-vertical\" : \"more-horizontal\",\n                    fillMode: \"flat\",\n                    size: that.options.size,\n                    click: function(e) {\n                        // open the overflow menu depending on the overflowMode\n                        if (overflowMode == \"section\") {\n                            that.overflowSection.open();\n                        }\n                    }\n                });\n\n                if (!that.options.navigateOnTab) {\n                    that.overflowAnchor.attr(TABINDEX, -1);\n                }\n\n\n                if (overflowMode == \"section\") {\n                    that.overflowSection = new kendo.ui.Popup($(`<div class=\"k-toolbar-popup\"><div class=\"k-toolbar-items-list ${kendo.getValidCssClass(\"k-toolbar-items-list-\", \"fill\", that.options.fillMode)}  ${kendo.getValidCssClass(\"k-toolbar-items-list-\", \"size\", that.options.size)}\"></div></div>`), {\n                        anchor: that.element,\n                        origin: \"bottom left\",\n                        position: \"top left\",\n                        open: function(e) {\n                            if (that.trigger(OVERFLOW_OPEN)) {\n                                return e.preventDefault();\n                            }\n\n                            that.overflowSection.element.width(that.element.outerWidth());\n                        },\n                        activate: function(e) {\n                            const isSection = true;\n                            let firstFocusableSectionItem = that._getAllItems(isSection).first();\n                            that._resetTabIndex(firstFocusableSectionItem);\n                            firstFocusableSectionItem.trigger(FOCUS);\n                        },\n                        close: function(e) {\n                            if (that.trigger(OVERFLOW_CLOSE)) {\n                                e.preventDefault();\n                            } else {\n                                that._resetTabIndex(that.overflowAnchor);\n                                that.overflowAnchor.trigger(FOCUS);\n                            }\n                        }\n                    });\n                }\n\n                if (overflowMode == \"menu\") {\n                    that.overflowMenu = new kendo.ui.ContextMenu($(\"<ul>\"), {\n                        size: that.options.size,\n                        showOn: \"click tap\",\n                        origin: \"bottom \" + horizontalDirection,\n                        position: \"top \" + horizontalDirection,\n                        alignToAnchor: true,\n                        target: that.overflowAnchor,\n                        open: function(e) {\n                            if (that.trigger(OVERFLOW_OPEN)) {\n                                e.preventDefault();\n                            }\n                        },\n                        close: function(e) {\n                            if (that.trigger(OVERFLOW_CLOSE)) {\n                                e.preventDefault();\n                            } else {\n                                that._resetTabIndex(that.overflowAnchor);\n                                that.overflowAnchor.trigger(FOCUS);\n                            }\n                        }\n                    });\n\n                    that.overflowMenu.element.attr(KENDO_UID_ATTR, this.uid);\n\n                    setTimeout(() => {\n                        that.overflowMenu.bind(SELECT, that._menuItemSelect.bind(that));\n                    });\n                }\n            },\n\n            _resetOpen: function(element, extensions) {\n                var that = this,\n                    uploadWrapper,\n                    input;\n\n                element.closest(\".k-upload-button-wrap\").find(\"input\").remove();\n                uploadWrapper = element.wrap(\"<div class='k-upload-button-wrap'></span>\").parent();\n\n                input = $(\"<input type='file' autocomplete='off' accept='\" + extensions + \"'/>\")\n                    .attr(\"aria-hidden\", true)\n                    .one(\"change\", (e) => {\n                        that.trigger(CHANGE, {\n                            target: element,\n                            value: e.target.files[0]\n                        });\n\n                        that._resetOpen(element, extensions);\n                    })\n                    .appendTo(uploadWrapper);\n\n                element.off(KEYDOWN).on(KEYDOWN, (e) => {\n                    if (e.keyCode === kendo.keys.ENTER) {\n                        input.trigger(CLICK);\n                    }\n                });\n            },\n\n            _resetTabIndex: function(toFocus) {\n                if (this.options.navigateOnTab !== true) {\n                    const isSection = toFocus.closest(\".k-toolbar-popup\").length > 0;\n                    const containerToSearch = isSection ? this._overflowSectionContentElement() : this.wrapper;\n                    containerToSearch.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                    toFocus.attr(TABINDEX, 0);\n                }\n            },\n\n            _resizable: function() {\n                var that = this,\n                    element = that.element;\n\n                that._renderOverflow();\n                element.addClass(RESIZABLE_TOOLBAR);\n\n                that._resizeHandler = kendo.onResize(function() {\n                    that.resize();\n                });\n            },\n\n            _resize: function(e) {\n                var containerWidth = e.width,\n                    wrapper = this.element,\n                    popupBtnElements = wrapper.find('[data-role=\"splitbutton\"]').add(wrapper.find('[data-role=\"dropdownbutton\"]'));\n\n                if (!this.options.resizable) {\n                    return;\n                }\n\n                this.overflowMenu?.close();\n                this.overflowSection?.close();\n\n                if (popupBtnElements.length > 0) {\n                    popupBtnElements.each((i, el) => {\n                        kendo.widgetInstance($(el)).close();\n                    });\n                }\n\n                if (this.hasOverflowButton) {\n                    this._shrink(containerWidth);\n                    this._stretch(containerWidth);\n                    this._toggleOverflowAnchor();\n                }\n                else {\n                    this._toggleScrollButtons();\n                }\n            },\n\n            _shrink: function(containerWidth) {\n                var commandElement,\n                    visibleCommands,\n                    activeElement;\n                let container = this.element.find(\"> .k-toolbar-items\").length > 0 ? this.element.find(\"> .k-toolbar-items\") : this.element;\n\n                if (containerWidth < this._childrenWidth()) {\n                    visibleCommands = container.children(\":visible:not([data-overflow='never'], .\" + OVERFLOW_ANCHOR + \")\");\n\n                    for (var i = visibleCommands.length - 1; i >= 0; i--) {\n                        commandElement = visibleCommands.eq(i);\n\n                        if (containerWidth > this._childrenWidth()) {\n                            break;\n                        } else {\n                            activeElement = commandElement.find(\"[tabindex=0]\") || commandElement.is(\"[tabindex=0]\") ? commandElement : $(NOTHING);\n\n                            if (activeElement.length > 0) {\n                                activeElement.attr(TABINDEX, -1);\n                                this.element.children(DOT + OVERFLOW_ANCHOR).attr(TABINDEX, 0);\n                            }\n\n                            this._hideItem(commandElement);\n                        }\n                    }\n                }\n            },\n\n            _showItem: function(item, containerWidth) {\n                var that = this,\n                    gap = parseInt(this.element.css('gap'), 10) || 0,\n                    widget;\n\n                item.removeClass(STATE_HIDDEN);\n                var itemOuterWidth = outerWidth(item, true) + gap;\n                item.addClass(STATE_HIDDEN);\n\n                if (item.length && (item.hasClass(SPACER_CLASS) || containerWidth > this._childrenWidth() + itemOuterWidth)) {\n                    item.removeClass(STATE_HIDDEN);\n\n                    if (this.options.navigateOnTab !== true) {\n                        item.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                    } else {\n                        if (item.is(\"[tabindex=-1]\")) {\n                            item.removeAttr(TABINDEX);\n                        }\n                    }\n\n                    if (this.overflowSection) {\n                        this._overflowSectionContentElement().find(`[ref-section-tool=${item.data(\"uid\")}]`).addClass(STATE_HIDDEN);\n                    }\n\n                    if (this.overflowMenu) {\n                        if (item.hasClass(SPLIT_BUTTON) || item.hasClass(MENU_BUTTON)) {\n                            if (item.hasClass(SPLIT_BUTTON)) {\n                                item = item.children().eq(0);\n                                widget = item.data(K_SPLIT_BUTTON);\n                            } else {\n                                widget = item.data(K_DROP_DOWN_BUTTON);\n                            }\n\n                            widget.menu.list.children().each((i, el) => {\n                                that._hideMenuItem($(el));\n                            });\n\n                            that._hideMenuItem(item);\n                        } else if (item.hasClass(BUTTON_GROUP)) {\n                            item.children().each((i, el) => {\n                                that._hideMenuItem($(el));\n                            });\n                        } else {\n                            that._hideMenuItem(item);\n                        }\n                    }\n\n                    return true;\n                }\n\n                return false;\n            },\n\n            _showMenuItem: function(item) {\n                var menuItem = this.overflowMenu.element.find(\">li[data-uid='\" + item.data(UID) + \"']\");\n\n                if (!menuItem.hasClass(FORCE_HIDDEN)) {\n                    menuItem.removeClass(STATE_HIDDEN);\n                }\n            },\n\n            _stretch: function(containerWidth) {\n                var overflowAnchor = this.element.children(DOT + OVERFLOW_ANCHOR),\n                    commandElement,\n                    hiddenCommands;\n                let container = this.element.find(\"> .k-toolbar-items\").length > 0 ? this.element.find(\"> .k-toolbar-items\") : this.element;\n\n                if (containerWidth > this._childrenWidth()) {\n                    hiddenCommands = container.children(DOT + STATE_HIDDEN + \":not(\" + DOT + FORCE_HIDDEN + \")\");\n\n                    for (var i = 0; i < hiddenCommands.length; i++) {\n                        commandElement = hiddenCommands.eq(i);\n\n                        if (containerWidth < this._childrenWidth() || !this._showItem(commandElement, containerWidth)) {\n                            break;\n                        }\n                    }\n                }\n\n                if (!this.options.navigateOnTab && overflowAnchor.is(\"[tabindex=0]\")) {\n                    overflowAnchor.attr(TABINDEX, -1);\n                    this._resetTabIndex(this._getAllItems().first());\n                }\n            },\n\n            _tabIndex: function() {\n                var focusableItems = this.wrapper.find(KENDO_FOCUSABLE + \":not('\" + TABINDEX_MINUS_1 + \"')\"),\n                    firstFocusable = focusableItems.first();\n\n                if (this.options.navigateOnTab !== true) {\n                    focusableItems.attr(TABINDEX, -1);\n                    firstFocusable.attr(TABINDEX, 0);\n                } else {\n                    this.wrapper.find(\".k-toolbar-item\").removeAttr(TABINDEX);\n                }\n            },\n\n            _toggleOverflowAnchor: function() {\n                var hasVisibleChildren = false;\n                if (!this.hasOverflowButton) {\n                    return;\n                }\n\n                hasVisibleChildren = (this.overflowMenu?.element || this._overflowSectionContentElement()).children(\":not(.\" + STATE_HIDDEN + \", .\" + POPUP + \")\").length > 0;\n\n                if (hasVisibleChildren) {\n                    this.overflowAnchor.removeClass(STATE_HIDDEN);\n                    this.overflowAnchorSeparator.removeClass(STATE_HIDDEN);\n                } else {\n                    this.overflowAnchor.addClass(STATE_HIDDEN);\n                    this.overflowAnchorSeparator.addClass(STATE_HIDDEN);\n                }\n            }\n        });\n\n        kendo.toolbar = {\n            Item: kendo.Class,\n            OverflowButton: kendo.Class,\n            TemplateItem: kendo.Class,\n            ToolBarButton: kendo.Class,\n            registerComponent: () => null\n        };\n\n        kendo.cssProperties.registerPrefix(\"ToolBar\", \"k-toolbar-\");\n\n        kendo.cssProperties.registerValues(\"ToolBar\", [{\n            prop: \"fillMode\",\n            values: ['solid', 'flat']\n        }]);\n\n        kendo.ui.plugin(ToolBar);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}