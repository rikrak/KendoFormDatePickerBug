{"version":3,"sources":["raw-js/kendo.circularprogressbar.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Circularprogressbar","DatavizThemes","DrawingCmnChunk","ChartsCmnChunk","this","kendo_dataviz_themes_js","kendo_drawing_cmn_chunk_js","kendo_charts_cmn_chunk_js","$","window","dataviz","ui","Widget","Arc$2","y","limitValue$1","_","DrawingGroup","G","PointerAnimation","c","constructor","super","arguments","animationOptions","options","color","endColor","startColor","duration","Math","abs","newAngle","oldAngle","Color","step","pos","that","angle","i","element","geometry","setEndAngle","r","g","b","stroke","toHex","CircularProgressBar","extend","init","userOptions","fn","call","theme","themes","themeName","lowerName","toLowerCase","SASS_THEMES","indexOf","addClass","removeClass","gauge","themeOptions","_value","value","redraw","_centerTemplate","_aria","name","ariaRole","centerTemplate","colors","transitions","pointerWidth","indeterminate","label","labelId","events","_restrictValue","_centerSvgElements","_pointerChange","_updateProgress","_initSurface","_buildVisual","_draw","resize","destroy","announce","remove","wrapper","attr","role","appendTo","text","center","_getCenter","circle","_geometry","x","arc","geometryChange","position","template","centerElement","_getCenterElement","html","_getColor","_centerTemplatePosition","width","height","css","_centerElement","append","oldValue","newValue","animation","_slotAngle","play","surface","clear","draw","_visuals","find","innerHTML","format","visuals","pointer","radius","min","circleGeometry","j","fill","scale","rangePlaceholderColor","_createArc","currentValue","isNumber","idx","length","range","rangeColor","from","to","endAngle","rangeRadius","rangeSize","rangeGeom","A","radiusX","radiusY","startAngle","opacity","right","bottom","size","_getSize","left","top","max","Point","defaultSize","offsetWidth","offsetHeight","_surfaceElement","surfaceElement","document","createElement","appendChild","elementSize","w","create","type","renderAs","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default","Object","defineProperty"],"mappings":"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","file":"kendo.circularprogressbar.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.dataviz.themes.js'), require('kendo.drawing.cmn.chunk.js'), require('kendo.charts.cmn.chunk.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.dataviz.themes', 'kendo.drawing.cmn.chunk', 'kendo.charts.cmn.chunk'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Circularprogressbar = {}), global.kendo._globals.DatavizThemes, global.kendo._globals.DrawingCmnChunk, global.kendo._globals.ChartsCmnChunk));\n})(this, (function (exports, kendo_dataviz_themes_js, kendo_drawing_cmn_chunk_js, kendo_charts_cmn_chunk_js) {\n    const __meta__ = {\n        id: \"circularprogressBar\",\n        name: \"CircularProgressBar\",\n        category: \"web\",\n        description: \"The Circular ProgressBar component represents an SVG loader\",\n        depends: [\"core\", \"dataviz.themes\", \"drawing.cmn.chunk\", \"charts.cmn.chunk\"]\n    };\n\n    (function($, undefined$1) {\n\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var dataviz = kendo.dataviz;\n        var ui = kendo.ui;\n        var Widget = ui.Widget;\n        var Arc$2 = kendo_drawing_cmn_chunk_js.y;\n        var limitValue$1 = kendo_drawing_cmn_chunk_js._;\n        var DrawingGroup = kendo_drawing_cmn_chunk_js.G;\n        var DEFAULT_HEIGHT = 200;\n        var GEO_ARC_ADJUST_ANGLE = 180;\n        var MINVALUE = 0;\n        var MAXVALUE = 100;\n        var DEFAULT_MARGIN = 5;\n        var ANGULAR_SPEED = 150;\n        var DEFAULT_WIDTH = 200;\n        var MAX_DURATION = 800;\n        var announceElement = '<span aria-live=\"polite\" class=\"k-sr-only k-progress-announce\"></span>';\n\n        class PointerAnimation extends kendo_drawing_cmn_chunk_js.c {\n            constructor() {\n                super(...arguments);\n                var animationOptions = this.options;\n                var color = this.options.endColor;\n                var startColor = this.options.startColor;\n                var duration = (Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration) * 1000;\n                animationOptions.duration = limitValue$1(duration, ANGULAR_SPEED, MAX_DURATION);\n\n                if (startColor !== color) {\n                    this.startColor = new kendo.Color(startColor);\n                    this.color = new kendo.Color(color);\n                }\n            }\n\n            step(pos) {\n                var that = this;\n                var options = that.options;\n                var startColor = that.startColor;\n                var color = that.color;\n                var angle = kendo_charts_cmn_chunk_js.i(options.oldAngle, options.newAngle, pos);\n\n                this.element.geometry().setEndAngle(angle);\n\n                if (color) {\n                    var r = kendo_charts_cmn_chunk_js.r(kendo_charts_cmn_chunk_js.i(startColor.r, color.r, pos));\n                    var g = kendo_charts_cmn_chunk_js.r(kendo_charts_cmn_chunk_js.i(startColor.g, color.g, pos));\n                    var b = kendo_charts_cmn_chunk_js.r(kendo_charts_cmn_chunk_js.i(startColor.b, color.b, pos));\n\n                    this.element.stroke(new kendo.Color(r, g, b).toHex());\n                }\n            }\n        }\n\n        var CircularProgressBar = Widget.extend({\n            init: function(element, userOptions) {\n\n                var that = this;\n                Widget.fn.init.call(that, element, userOptions);\n                this.theme = themeOptions(this.options, this.element);\n                this._value = this.options.value;\n                this.element.addClass(\"k-gauge\");\n\n                this.redraw();\n                this._centerTemplate();\n                this._aria();\n            },\n\n            options: {\n                name: \"CircularProgressBar\",\n                ariaRole: false,\n                theme: \"sass\",\n                centerTemplate: '',\n                color: \"\",\n                colors: [],\n                transitions: true,\n                pointerWidth: 5,\n                indeterminate: false,\n                label: null,\n                labelId: null\n            },\n\n            events: [ ],\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                value = that._restrictValue(value);\n\n                that._centerSvgElements();\n                that._pointerChange(that._value, value);\n                that._value = value;\n                that._centerTemplate();\n                that._updateProgress();\n            },\n\n            redraw: function() {\n                this._initSurface();\n                this._buildVisual();\n                this._draw();\n            },\n\n            resize: function() {\n                var transitions = this.options.transitions;\n\n                this.options.transitions = false;\n                this._initSurface();\n                this._buildVisual();\n                this._draw();\n                this._centerTemplate();\n                this.options.transitions = transitions;\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that.announce) {\n                    that.announce.remove();\n                }\n\n                Widget.fn.destroy.call(that);\n            },\n\n            _aria: function() {\n                var that = this,\n                    options = that.options,\n                    value = that.value() || 0,\n                    wrapper = that.element;\n\n                if (!options.ariaRole) {\n                    return;\n                }\n\n                wrapper.attr({\n                    \"role\": \"progressbar\"\n                });\n\n                if (!options.indeterminate) {\n                    wrapper.attr({\n                        \"aria-valuemin\": 0,\n                        \"aria-valuemax\": 100\n                    });\n                }\n\n                if (!!options.labelId) {\n                    wrapper.attr(\"aria-labelledby\", options.labelId);\n                } else if (!!options.label) {\n                    wrapper.attr(\"aria-label\", options.label);\n                }\n\n                that.announce = $(announceElement);\n                that.announce.appendTo($(\"body\"));\n\n                if (!options.indeterminate) {\n                    wrapper.attr(\"aria-valuenow\", value);\n\n                    that.announce.text(value + \"%\");\n                } else {\n                    that.announce.text(\"Loading...\");\n                }\n            },\n\n            _restrictValue: function(value) {\n\n                if (value < MINVALUE) {\n                    return MINVALUE;\n                }\n\n                if (value > MAXVALUE) {\n                    return MAXVALUE;\n                }\n\n                return value;\n            },\n\n            _updateProgress: function() {\n                var that = this;\n                var options = that.options;\n                var value = that.value() || 0;\n\n                if (options.ariaRole && !options.indeterminate) {\n                    that.element.attr(\"aria-valuenow\", value);\n\n                    if (that.announce) {\n                        that.announce.text(value + \"%\");\n                    }\n                }\n            },\n\n            _centerSvgElements: function() {\n                var center = this._getCenter();\n\n                if (this.circle._geometry.center.x !== center.x ||\n                    this.circle._geometry.center.y !== center.y) {\n\n                        this.circle._geometry.center.x = center.x;\n                        this.circle._geometry.center.y = center.y;\n                        this.arc._geometry.center.x = center.x;\n                        this.arc._geometry.center.y = center.y;\n                        this.circle.geometryChange();\n                        this.arc.geometryChange();\n                }\n            },\n\n            _centerTemplate: function() {\n                var position;\n                var template;\n                var centerElement;\n\n                if (this.options.centerTemplate) {\n                    template = kendo.template(this.options.centerTemplate);\n\n                    centerElement = this._getCenterElement();\n\n                    centerElement.html(template({ color: this._getColor(this.value()), value: this.value() }));\n\n                    position = this._centerTemplatePosition(centerElement.width(), centerElement.height());\n\n                    centerElement.css(position);\n                } else if (this._centerElement) {\n                    this._centerElement.remove();\n                    this._centerElement = null;\n                }\n            },\n\n            _getCenterElement: function() {\n                var centerElement = this._centerElement;\n                if (!centerElement) {\n                    centerElement = this._centerElement = $('<div></div>').addClass('k-arcgauge-label');\n                    this.element.append(centerElement);\n                }\n\n                return centerElement;\n            },\n\n            _pointerChange: function(oldValue, newValue) {\n                let animation;\n\n                if (this.options.transitions) {\n                    animation = new PointerAnimation(this.arc, {\n                        oldAngle: this._slotAngle(oldValue),\n                        startColor: this._getColor(oldValue),\n                        newAngle: this._slotAngle(newValue),\n                        endColor: this._getColor(newValue)\n                    });\n                    animation.play();\n                } else {\n                    this.arc.stroke(this._getColor(newValue));\n                    this.arc.geometry().setEndAngle(this._slotAngle(newValue));\n                }\n            },\n\n            _draw: function() {\n                let arc;\n                let center;\n                let animation;\n                let surface = this.surface;\n\n                surface.clear();\n                surface.draw(this._visuals);\n\n                if (this.options.indeterminate) {\n                    arc = $(surface.element).find(\"path\");\n                    center = this._getCenter();\n                    arc[0].innerHTML = kendo.format('<animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 {0} {1}\" to=\"360 {0} {1}\" dur=\"1s\" repeatCount=\"indefinite\" />', center.x, center.y);\n                } else if (this.options.transitions) {\n                    animation = new PointerAnimation(this.arc, {\n                        oldAngle: this._slotAngle(0),\n                        startColor: this._getColor(0),\n                        newAngle: this._slotAngle(this.value()),\n                        endColor: this._getColor(this.value()),\n                    });\n                    animation.play();\n                }\n            },\n\n\n            _buildVisual: function() {\n                var visuals = this._visuals = new DrawingGroup();\n                var center = this._getCenter();\n                var color = this._getColor(this.value()) || this.theme.pointer.color;\n                var radius = Math.min(center.x, center.y) - DEFAULT_MARGIN - this.options.pointerWidth;\n\n                var circleGeometry = new kendo_drawing_cmn_chunk_js.j([center.x, center.y], radius + (this.options.pointerWidth / 2));\n                var circle = this.circle = new kendo_drawing_cmn_chunk_js.i(circleGeometry, {\n                    fill: { color: \"none\" },\n                    stroke: { color: this.theme.scale.rangePlaceholderColor, width: this.options.pointerWidth }\n                });\n\n                visuals.append(circle);\n\n                if (this.options.indeterminate) {\n                    this.arc = this._createArc(360, radius, center, color);\n                } else {\n                    this.arc = this._createArc(this._slotAngle(this.value()), radius, center, color);\n                }\n\n                visuals.append(this.arc);\n            },\n\n            _slotAngle: function(value) {\n                var result;\n\n                result = ((value - MINVALUE) / (MAXVALUE) * 360) + 90;\n\n                return result + GEO_ARC_ADJUST_ANGLE;\n            },\n\n            _getColor: function(value) {\n                var options = this.options;\n                var colors = options.colors;\n                var color = options.color;\n                var currentValue = dataviz.isNumber(value) ? value : 0;\n\n                if (colors) {\n                    for (var idx = 0; idx < colors.length; idx++) {\n                        var range = colors[idx];\n                        var rangeColor = range.color;\n                        var from = range.from; if (from === void 0) { from = 0; }\n                        var to = range.to; if (to === void 0) { to = 100; }\n\n                        if (from <= currentValue && currentValue <= to) {\n                            return rangeColor;\n                        }\n                    }\n                }\n\n                return color;\n            },\n\n            _createArc: function(endAngle, rangeRadius, center, color) {\n                var rangeSize = this.options.pointerWidth;\n                var rangeGeom = new kendo_drawing_cmn_chunk_js.A([center.x, center.y], {\n                    radiusX: rangeRadius + (rangeSize / 2),\n                    radiusY: rangeRadius + (rangeSize / 2),\n                    startAngle: 270,\n                    endAngle: endAngle\n                });\n\n                return new Arc$2(rangeGeom, {\n                    stroke: {\n                        width: rangeSize,\n                        color: this.options.color || color,\n                        opacity: this.options.opacity\n                    }\n                });\n            },\n\n            _centerTemplatePosition: function(width, height) {\n                var size = this._getSize();\n                var center = this._getCenter();\n\n                var left = center.x - width / 2;\n                var top = center.y - height / 2;\n                var right;\n                var bottom;\n\n                if (width < size.width) {\n                    right = left + width;\n\n                    left = Math.max(left, 0);\n\n                    if (right > size.width) {\n                        left -= right - size.width;\n                    }\n                }\n\n                if (height < size.height) {\n                    bottom = top + height;\n\n                    if (bottom > size.height) {\n                        top -= bottom - size.height;\n                    }\n                }\n\n                return {\n                    left: left,\n                    top: top\n                };\n            },\n\n            _getCenter: function() {\n                var size = this._getSize();\n                return new dataviz.Point(size.width / 2, size.height / 2);\n            },\n\n            _getSize: function() {\n                var element = this.element;\n                var defaultSize = {\n                    width: DEFAULT_WIDTH,\n                    height: DEFAULT_HEIGHT\n                };\n                var width = element[0].offsetWidth;\n                var height = element[0].offsetHeight;\n\n                if (!width) {\n                    width = defaultSize.width;\n                }\n\n                if (!height) {\n                    height = defaultSize.height;\n                }\n\n                return { width: width, height: height };\n            },\n\n            _surfaceElement: function() {\n                if (!this.surfaceElement) {\n                    this.surfaceElement = document.createElement('div');\n                    this.element[0].appendChild(this.surfaceElement);\n                }\n\n                return this.surfaceElement;\n            },\n\n            _initSurface: function() {\n                var that = this;\n                var options = that.options;\n                var surface = that.surface;\n                var element = this._surfaceElement();\n                var size = this._getSize();\n\n                dataviz.elementSize(element, size);\n\n                if (!surface) {\n                    this.surface = kendo_drawing_cmn_chunk_js.w.create(element, {\n                        type: options.renderAs\n                    });\n                } else {\n                    this.surface.clear();\n                    this.surface.resize();\n                }\n            }\n\n        });\n\n        function themeOptions(options, element) {\n            var themes = dataviz.ui.themes || {};\n            var themeName = options.theme || \"\";\n            var lowerName = themeName.toLowerCase();\n\n            if (dataviz.SASS_THEMES.indexOf(lowerName) != -1) {\n                element.addClass(\"k-gauge\");\n                const theme = kendo_charts_cmn_chunk_js.g(element[0]);\n\n                element.removeClass(\"k-gauge\");\n                return theme;\n            }\n\n            return (themes[themeName] || themes[lowerName] || {}).gauge;\n        }\n\n        ui.plugin(CircularProgressBar);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}