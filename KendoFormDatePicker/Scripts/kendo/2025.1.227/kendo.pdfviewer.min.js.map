{"version":3,"sources":["raw-js/kendo.pdfviewer.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Pdfviewer","MobileScroller","Toolbar","Pager","Combobox","Textbox","Core","Drawing","Upload","PdfviewerCommonCmnChunk","this","kendo_mobile_scroller_js","kendo_toolbar_js","kendo_pager_js","kendo_combobox_js","kendo_textbox_js","kendo_core_js","kendo_drawing_js","kendo_upload_js","kendo_pdfviewerCommon_cmn_chunk_js","$","window","extend","DPLProcessor","Class","init","options","viewer","that","read","upload","download","fetchDocument","deferred","Deferred","errorMessages","messages","ajax","type","url","dataType","success","data","stringify","resolve","JSON","parse","error","xhr","_triggerError","responseText","message","parseError","fetchPageData","number","page","document","pages","pageField","geometries","length","downloadFile","fileName","location","fromJSON","json","_clearPages","total","_renderPages","resize","activatePage","pdfviewer","dpl","processor","jQuery","pdfjs","lib","pdfjsLib","parseJSON","progress","ui","UploadHelper","_initUpload","uploadElement","extendUploadOptions","uploadOptions","select","_onSelect","bind","_onSuccess","_onError","complete","_onComplete","showFileList","multiple","validation","allowedExtensions","async","saveUrl","autoUpload","saveField","kendoUpload","getKendoUpload","pageContainer","e","response","isPlainObject","XMLHttpRequest","notSupported","fileToUpload","files","trigger","file","extension","toLowerCase","reader","FileReader","onload","target","result","loadParams","_isDPLProcessor","fromFile","onerror","readAsArrayBuffer","rawFile","noop","drawing","Group","Surface","geometryTypes","Path","MultiPath","Rect","Image","Text","Page","pageNumber","element","attr","_updatePageSize","width","height","ratio","pageElement","Math","min","size","destroy","render","BlankPage","_externalDropZoneId","_uploadHelper","_upload","find","dropZone","DPLPage","draw","group","surface","_drawGeometries","load","loaded","then","_initSurface","surfaceOptions","view","kGeometry","i","geometry","_drawPath","_drawRect","_drawImage","_drawText","append","rectGeo","point","transform","_getMatrix","fill","fillOptions","stroke","strokeOptions","imageRect","src","font","content","path","paths","subPath","segments","moveTo","apply","j","segment","points","lineTo","curveTo","closed","close","matrix","Object","create","Matrix","prototype","setAnnotationEditorMode","widget","args","interactionMode","mode","setInteractionMode","resetAnnotationEditorMode","$$1","AnnotationEditorType","AnnotationToolbar","constructor","pdfViewerCommon","annotationsToolbar","insertAfter","toolbar","ToolBar","fillMode","tools","name","command","icon","togglable","showText","parentMessages","highlight","freeText","onToolbarClick","viewerToolbar","P","TextSelection","toggle","unbind","remove","Command","OpenCommand","fn","call","exec","click","PageChangeCommand","current","targetPage","value","isNaN","_pageNum","numPages","Number","DownloadCommand","notFound","info","title","defaultFileName","ExportCommand","dialog","_saveDialog","_initDialog","_updateModel","pagesCount","open","viewModel","exportImage","exportSVG","dialogs","ExportAsDialog","EnableSelectionCommand","enable","EnablePanCommand","Pan","OpenSearchCommand","searchDialog","SearchDialog","pageContainerWrapper","position","top","offset","left","search","_open","next","_next","prev","_prev","_close","changeHandler","_change","searchModel","clearSearch","matches","matchIndex","_updateSearchModel","ev","text","matchCase","field","searchText","goToNextSearchMatch","goToPreviousSearchMatch","model","set","_closeDialog","ZoomCommand","scale","_calculateZoom","zoomLevel","zoomScale","_preventRenderEvent","_currentPage","getCurrentPageIndex","zoom","zoomLevelType","_triggerZoomEnd","preventZoom","viewerOptions","scaleValue","_allowResize","_autoFit","zoomIn","zoomRate","zoomOut","_autoZoomScale","parseFloat","toString","match","parseInt","replace","zoomMin","zoomMax","updateComboBox","_updateZoomComboBox","PrintCommand","setTimeout","printFile","AnnotationsCommand","encode","htmlEncode","Draggable","outerWidth","_outerWidth","EXTENSIONS","keys","ErrorDialog","actions","okText","_dialog","kendoDialog","getKendoDialog","center","fileFormats","description","exportAsDialog","png","svg","_initializeDialog","autoFocus","resizable","modal","preventScroll","maxWidth","template","labels","saveAsType","save","cancel","dialogMessages","kendoWindow","getKendoWindow","observable","dragHandle","iconClass","inputLabel","of","previous","_showSearchDialog","_hideSearchDialog","css","innerWidth","kendoStop","kendoAnimate","effects","direction","fade","duration","properties","hide","dialogElm","prepend","_draggable","filter","axis","dragstart","wnd","containment","startPosition","x","client","getOffset","_innerWidth","clientWidth","support","scrollbar","maxLeft","drag","indexOf","max","userEvents","stopPropagation","boundValue","matchCaseClick","onKeyup","key","keyCode","navigationFn","shiftKey","ENTER","preventDefault","ESC","onInput","AnnotationPopup","anchor","editor","popupOpenHandler","onPopupOpen","annotationPopupToolbarElement","guid","popup","Popup","html","popupToolbar","palette","onAnnotationPopupToolbarClick","initEditor","deleteAnnotation","destroyPopup","flatColorPicker","_view","_hueSlider","_opacitySlider","anchorExists","getElementById","id","destroyEditor","editorPopup","HighlightAnnotationPopup","super","activate","initFlatColorPicker","FlatColorPicker","format","opacity","change","setHighlightTextColor","color","setHighlightColor","currentColor","FreeTextAnnotationPopup","initFontSizeForm","currentFontSize","propertiesToUpdate","fontSizeForm","Form","buttonsTemplate","formData","fontSize","layout","grid","cols","items","label","colSpan","editorOptions","dataSource","sender","setFreeTextFontSize","setFreeTextFontColor","setFreeTextColor","NS","PLUS","MINUS","ZERO","NUMPAD_ZERO","Widget","RENDER","ERROR","KEYDOWN","UPDATE","PAGE_CHANGE","ZOOMEND","ZOOMCOMMAND","CLICK","CHANGE","DISABLED","PROCESSORS","styles","PREDEFINED_ZOOM_VALUES","PDFViewer","deepExtend","_processMessages","_wrapper","_renderToolbar","_initProcessor","_renderPageContainer","_loadDPLDocument","_loadPdfJSDocument","notify","_showWatermarkOverlay","wrapper","events","pdfjsProcessing","loadOnDemand","dplProcessing","contextMenu","defaultPageSize","actualWidth","autoWidth","fitToWidth","fitToPage","exportAs","print","toggleSelection","togglePan","annotations","popupBlocked","pdf","defaultTools","overflow","menuButtons","attributes","separator","pager","component","componentOptions","navigatable","_isToolbarItem","spacer","zoomInOut","buttons","dataTextField","dataValueField","valuePrimitive","clearOnEscape","commandOn","selected","spacer2","exportAsTool","addClass","on","_keydown","D","_resizeHandler","onResize","plusShortcuts","NUMPAD_PLUS","minusShortcuts","NUMPAD_MINUS","zeroShortcuts","shouldExecute","ctrlKey","_blankPage","processingLib","includes","execute","_handlePageChangeEvent","event","_pageChangeFromScroll","index","_showPagerInputLabels","inputElements","children","eq","add","is","show","_resizePager","responsive","pagerWidth","visibleToolbarItems","Array","from","containerWidth","visibleToolsWidth","gap","temp","elementsToShrink","hidden","removeClass","input","processingOptions","GlobalWorkerOptions","workerSrc","pdfjsWorker","console","_hasPagerTool","hasPager","tool","toolbarOptions","_processTools","pagerMessages","currentPagerOptions","toolbarElement","appendTo","_toolbarClick","update","_updateToolbar","flatMap","t","zoomLevels","percent","comboOptions","map","concat","contextMenuIndex","findIndex","splice","separatorIndex","pageOptions","toolbarEl","zoomCombo","toFocus","first","_getAllItems","isBlank","action","updatePager","pageChangeFromScroll","_updatePager","_updateOnBlank","_resetTabIndex","downloadButton","printButton","parent","pagerDataSource","DataSource","pageSize","setDataSource","_togglePagerDisabledClass","totalPages","hasClass","isPredefined","round","currentTarget","val","_initErrorDialog","_errorDialog","dialogInstance","pagesData","viewerPage","pageData","push","pdfScroller","enablePanEventsTracking","_attachContainerEvents","_getVisiblePagesCount","_renderBlankPage","_removeBlankPage","_resize","clearTimeout","_resizePages","pagesElements","getPagesElements","forEach","pageWidth","_pageIndex","currentRatio","_scroll","pageToLoadNum","containerHeight","pageNum","pageIndex","_preventScroll","_scrollingStarted","nextPageIndex","c","_loadVisiblePages","preventComboBoxChange","commandOptions","done","S","parentNode","ArrayBuffer","a","loadOnDemandPageSize","fileDescriptor","pagesLoad","pdfDoc","pdfPages","scrollToPage","pageRendered","pdfPage","_setPageNumberAttributes","zoomStart","zoomEnd","printEnd","scroll","isPageChanged","annotationEditorToolBarShow","onAnnotationEditorToolBarShow","_enablePanning","documentScroller","_disablePanning","disablePanEventsTracking","each","el","loadPage","Promise","_scrollToActivatedPage","activatePageNumber","s","loadedPagesHeight","updatedVisiblePagesCount","clientHeight","_visiblePagesCount","minVisiblePageNum","maxVisiblePageNum","_visiblePages","slice","_loadAllPages","promises","_updateDocument","loadFile","rootGroup","background","fromRect","saveAs","dataURI","proxyURL","forceProxy","proxyTarget","setOptions","unbindResize","off","empty","annotationEditorMode","annotationPopup","source","firstSelectedEditor","visible","_closing","plugin","kendo$1","__meta__","category","depends","default","defineProperty"],"mappings":";;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,OAAAF,EAAAC,QAAAE,QAAA,4BAAAA,QAAA,oBAAAA,QAAA,kBAAAA,QAAA,qBAAAA,QAAA,oBAAAA,QAAA,iBAAAA,QAAA,oBAAAA,QAAA,mBAAAA,QAAA,uCAAAA,QAAA,mBAAAA,QAAA,mBAAAA,QAAA,mBAAAA,QAAA,2BAAAA,QAAA,yBAAAA,QAAA,kBAAAA,QAAA,wBAAAA,QAAA,yBAAAA,QAAA,iBAAAA,QAAA,yBACA,mBAAAC,QAAAA,OAAAC,IAAAD,OAAA,CAAA,UAAA,wBAAA,gBAAA,cAAA,iBAAA,gBAAA,iBAAA,gBAAA,eAAA,mCAAA,eAAA,eAAA,eAAA,uBAAA,qBAAA,cAAA,oBAAA,qBAAA,aAAA,qBAAAJ,GACAA,IAAAD,EAAA,oBAAAO,WAAAA,WAAAP,GAAAQ,MAAAC,MAAAT,EAAAS,OAAA,CAAA,EAAAT,EAAAS,MAAAC,SAAAV,EAAAS,MAAAC,UAAA,CAAA,EAAAV,EAAAS,MAAAC,SAAAC,UAAA,CAAA,GAAAX,EAAAS,MAAAC,SAAAE,eAAAZ,EAAAS,MAAAC,SAAAG,QAAAb,EAAAS,MAAAC,SAAAI,MAAAd,EAAAS,MAAAC,SAAAK,SAAAf,EAAAS,MAAAC,SAAAM,QAAAhB,EAAAS,MAAAC,SAAAO,KAAAjB,EAAAS,MAAAC,SAAAQ,QAAAlB,EAAAS,MAAAC,SAAAS,OAAAnB,EAAAS,MAAAC,SAAAU,wBACA,CAJA,CAIAC,MAAA,SAAAnB,EAAAoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IACA,SAAAC,GACA,IAAAtB,EAAAuB,OAAAvB,MACAwB,EAAAF,EAAAE,OAGAC,EAFAzB,EAAA0B,MAEAF,OAAA,CACAG,KAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAlB,KAEAkB,EAAAF,QAAAA,EACAE,EAAAC,KAAAH,EAAAG,KACAD,EAAAE,OAAAJ,EAAAI,OACAF,EAAAG,SAAAL,EAAAK,SAEAH,EAAAD,OAAAA,CACA,EACAK,cAAA,WACA,IAAAJ,EAAAlB,KACAuB,EAAAb,EAAAc,WACAC,EAAAP,EAAAD,OAAAD,QAAAU,SAAAD,cAEA,OAAAP,EAAAC,MAIAT,EAAAiB,KAAA,CACAC,KAAAV,EAAAC,KAAAS,KACAC,IAAAX,EAAAC,KAAAU,IACAC,SAAAZ,EAAAC,KAAAW,SACAC,QAAA,SAAAC,GACA,iBAAAA,IACAA,EAAA5C,EAAA6C,UAAAD,IAEAT,EAAAW,QAAAC,KAAAC,MAAAJ,GACA,EACAK,MAAA,SAAAC,GACApB,EAAAD,OAAAsB,cAAA,CACAF,MAAAC,EAAAE,aACAC,QAAAhB,EAAAiB,YAEA,IAGAnB,GArBAA,EAAAW,SAsBA,EACAS,cAAA,SAAAC,GACA,IAAA1B,EAAAlB,KACAuB,EAAAb,EAAAc,WACAqB,EAAA3B,EAAAD,OAAA6B,SAAAC,MAAAH,EAAA,GACAZ,EAAA,CAAA,EAsBA,OArBAA,EAAAd,EAAAC,KAAA6B,WAAAJ,EAEAC,EAAAI,WAAAC,OAgBA3B,EAAAW,QAAAW,GAfAnC,EAAAiB,KAAA,CACAC,KAAAV,EAAAC,KAAAS,KACAC,IAAAX,EAAAC,KAAAU,IACAG,KAAAA,EACAD,QAAA,SAAAC,GACAT,EAAAW,QAAAC,KAAAC,MAAAJ,GACA,EACAK,MAAA,SAAAC,GACApB,EAAAD,OAAAsB,cAAA,CACAF,MAAAC,EAAAE,aACAC,QAAAvB,EAAAD,OAAAD,QAAAU,SAAAD,cAAAiB,YAEA,IAMAnB,CACA,EACA4B,aAAA,SAAAC,GACAzC,OAAA0C,SAAArD,KAAAqB,SAAAQ,IAAA,SAAAuB,CACA,EAEAE,SAAA,SAAAC,GAEA,IAAAtC,EAAAjB,KAAAiB,OACAA,EAAAuC,cAEAvC,EAAA6B,SAAAS,EACAtC,EAAA6B,SAAAW,MAAAxC,EAAA6B,SAAAC,MAAAG,OAEAjC,EAAAyC,eACAzC,EAAA0C,QAAA,GAEA1C,EAAA2C,aAAA,EACA,IAGAhD,EAAAxB,EAAA,CACAyE,UAAA,CACAC,IAAA,CACAC,UAAAlD,KAIA,CAnGA,CAmGAF,OAAAvB,MAAA4E,QA2BA5E,MAAAyE,UAAAI,MAAA,CAAAC,IAAAvD,OAAAwD,UAEA,SAAAzD,GACA,IAAAI,EAAA1B,MAAA0B,MACAF,EAAAF,EAAAE,OACAwD,EAAAjC,KAAAC,MACAiC,EAAAjF,MAAAkF,GAAAD,SAIAE,GAHAzD,EAAA1B,MAAA0B,MAGAA,EAAAF,OAAA,CACAG,KAAA,SAAAE,GACAjB,KAAAiB,OAAAA,EACAjB,KAAAyB,cAAAzB,KAAAiB,OAAAD,QAAAU,SAAAD,cACAzB,KAAAoB,OAAApB,KAAAiB,OAAA8C,WAAA/D,KAAAiB,OAAA8C,UAAA3C,MACA,EACAoD,YAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA/D,EAAA,CACAgE,OAAA5E,KAAA6E,UAAAC,KAAA9E,MACA+B,QAAA/B,KAAA+E,WAAAD,KAAA9E,MACAqC,MAAArC,KAAAgF,SAAAF,KAAA9E,MACAiF,SAAAjF,KAAAkF,YAAAJ,KAAA9E,MACAmF,cAAA,EACAC,UAAA,EACAC,WAAA,CACAC,kBAAA,CAAA,UAEAZ,GAAA,CAAA,GAcA,OAZA1E,KAAAoB,QACAR,EAAA+D,EAAA,CACAY,MAAA,CACAC,QAAAxF,KAAAoB,OAAAS,IACA4D,YAAA,EACAC,UAAA1F,KAAAoB,OAAAsE,cAKAjB,GAAA/D,EAAA,qDAAAiF,YAAAhB,GAAAiB,gBAGA,EACAV,YAAA,WACAb,EAAArE,KAAAiB,OAAA4E,eAAA,EACA,EACAd,WAAA,SAAAe,GACA,IAAAvC,EAAAa,EAAA0B,EAAAC,UAEArF,EAAAsF,cAAAzC,GACAvD,KAAAiB,OAAA8C,UAAAT,SAAAC,GAGAvD,KAAAiB,OAAAsB,cAAA,CACAF,MAAAkB,EACAd,QAAAzC,KAAAyB,cAAAiB,YAGA,EACAsC,SAAA,SAAAc,GACA9F,KAAAiB,OAAAsB,cAAA,CACAF,MAAAyD,EAAAG,eAAAzD,aACAC,QAAAzC,KAAAyB,cAAAyE,cAEA,EACArB,UAAA,SAAAiB,GACA,IAAA5E,EAAAlB,KACAmG,EAAAL,EAAAM,MAAA,GAIA,GAFA/B,EAAAnD,EAAAD,OAAA4E,eAAA,IAEA3E,EAAAD,OAAAoF,QA/DA,OA+DA,CAAAC,KAAAH,MAAAjF,EAAAE,OAEA,GAAA,SAAA+E,EAAAI,UAAAC,cAAA,CAQA,IAAAC,EAAA,IAAAC,WACAD,EAAAE,OAAA,SAAAb,GACA,IAAAhD,EAAAgD,EAAAc,OAAAC,OACA,MAAAC,EAAA5F,EAAAD,OAAA8F,kBAAAjE,EAAA,CAAAd,KAAAc,GACA5B,EAAAD,OAAA+F,SAAAF,EACA,EACAL,EAAAQ,QAAA,WACA/F,EAAAD,OAAAsB,cAAA,CACAF,MAAA8D,EACA1D,QAAAvB,EAAAO,cAAAiB,YAEA,EAEA+D,EAAAS,kBAAAf,EAAAgB,QAfA,MALAjG,EAAAD,OAAAsB,cAAA,CACAF,MAAA8D,EACA1D,QAAAvB,EAAAO,cAAAyE,cAmBA,KAGAtF,EAAAxB,MAAAyE,UAAA,CACAU,aAAAA,GAEA,CAnGA,CAmGA5D,OAAAvB,MAAA4E,QAEA,SAAAtD,GACA,IAAAE,EAAAF,EAAAE,OACAwG,EAAA1G,EAAA0G,KACAC,EAAAjI,MAAAiI,QACAC,EAAAD,EAAAC,MACAC,EAAAF,EAAAE,QAEAzG,EAAA1B,MAAA0B,MACAyD,EAAAnF,MAAAyE,UAAAU,aAIAiD,EAAA,CACAC,KAAA,OACAC,UAAA,YACAC,KAAA,OACAC,MAAA,QACAC,KAAA,QAiBAC,EAAAhH,EAAAF,OAAA,CACAG,KAAA,SAAAC,EAAAC,GACAjB,KAAAiB,OAAAA,EACAjB,KAAA+D,UAAA/C,EAAA+C,UACA/D,KAAAgB,QAAAA,EACAhB,KAAA+H,WAAA/G,EAAA4B,OAEA5C,KAAAgI,QAAAtH,EAAA,0BACAV,KAAAgI,QAAAC,KAAA7I,MAAA6I,KAAA,UAAAjI,KAAA+H,YAEA/H,KAAAkI,gBAAAlH,GACAhB,KAAAmI,MAAAnH,EAAAmH,MACAnI,KAAAoI,OAAApH,EAAAoH,MACA,EACAzE,OAAA,SAAA0E,GACA,IAAAC,EAAAtI,KAAAgI,QAEAhI,KAAAkI,gBAAA,CACAC,MAAAI,KAAAC,IAAAF,EAAAH,QAAAE,EAAArI,KAAAmI,OACAC,OAAAG,KAAAC,IAAAF,EAAAF,SAAAC,EAAArI,KAAAoI,SAEA,EACAF,gBAAA,SAAAO,GACAzI,KAAAgI,QACAG,MAAAM,EAAAN,OACAC,OAAAK,EAAAL,OACA,EACAM,QAAA,WACAtJ,MAAAsJ,QAAA1I,KAAAgI,QACA,EACAW,OAAAvB,IAGAwB,EAAAd,EAAAlH,OAAA,CACAG,KAAA,SAAAC,EAAAC,GACAjB,KAAAiB,OAAAA,EACAjB,KAAAgB,QAAAA,EACAhB,KAAA6I,oBAAA,GAAA5H,EAAA+G,QAAAC,KAAA,0BACAjI,KAAAgI,QAAAtH,EApDA,uDAoDAV,KAAA6I,urBACA7I,KAAA8I,cAAA,IAAAvE,EAAAtD,EACA,EACAuD,YAAA,WACAxE,KAAA+I,QAAA/I,KAAA8I,cAAAtE,YAAAxE,KAAAgI,QAAAgB,KAAA,0CAAA,CACAC,SAAA,IAAAjJ,KAAA6I,sBACA1D,cAAA,EACAI,MAAA,CACAE,YAAA,EACAD,QAAA,SAGA,EACA7B,OAAAyD,EACAc,gBAAAd,EACAsB,QAAA,WACA1I,KAAA+I,SACA/I,KAAA+I,QAAAL,UAGAtJ,MAAAsJ,QAAA1I,KAAAgI,QACA,EACAW,OAAAvB,IAGA8B,EAAApB,EAAAlH,OAAA,CACAuI,KAAA,WACA,IAAAjI,EAAAlB,KACAiD,EAAA/B,EAAAF,QAAAiC,WAEA/B,EAAAkI,MAAA,IAAA9B,EACApG,EAAAmI,QAAAF,KAAAjI,EAAAkI,OAEAlI,EAAAoI,gBAAArG,GAEA/B,EAAAD,OAAAoF,QArGA,SAqGA,CAAAxD,KAAA7C,OACAZ,MAAAkF,GAAAD,SAAAnD,EAAA8G,SAAA,EACA,EACAuB,KAAA,WACA,IAAArI,EAAAlB,MAEAkB,EAAAsI,QAAAtI,EAAA6C,YAKA7C,EAAA6C,UAAApB,cAAAzB,EAAA6G,YAAA0B,MAAA,SAAAzH,GACAd,EAAAF,QAAAgB,EACAd,EAAAwI,eACAxI,EAAAiI,MACA,IAEAjI,EAAAsI,QAAA,EACA,EACAE,aAAA,WACA,IAAAjB,EAAA,CACAN,MAAAnI,KAAAgI,QAAAG,QACAC,OAAApI,KAAAgI,QAAAI,UAEAuB,EAAA/I,EAAA,CAAAuH,MAAAnI,KAAAmI,MAAAC,OAAApI,KAAAoI,QAAApI,KAAAiB,OAAAD,QAAA4I,MACA5J,KAAAqJ,QAAA,IAAA9B,EAAAvH,KAAAgI,QAAA2B,GACA3J,KAAAkI,gBAAAO,EACA,EACAa,gBAAA,SAAArG,GACA,IACA4G,EADA3I,EAAAlB,KAGA,GAAAiD,EAIA,IAAA,IAAA6G,EAAA,EAAAA,GAAA7G,EAAAC,OAAA4G,IAAA,CACA,IAAAC,EAAA9G,EAAA6G,GAEA,GAAAC,EAAA,CAIA,OAAAA,EAAAnI,MACA,KAAA4F,EAAAC,KACA,KAAAD,EAAAE,UACAmC,EAAA3I,EAAA8I,UAAAD,GACA,MACA,KAAAvC,EAAAG,KACAkC,EAAA3I,EAAA+I,UAAAF,GACA,MACA,KAAAvC,EAAAI,MACAiC,EAAA3I,EAAAgJ,WAAAH,GACA,MACA,KAAAvC,EAAAK,KACAgC,EAAA3I,EAAAiJ,UAAAJ,GACA,MACA,QACAF,EAAA,KAIAA,GAEA3I,EAAAkI,MAAAgB,OAAAP,EAvBA,CAyBA,CACA,EACAI,UAAA,SAAAF,GAEA,IAAAM,EAAA,IAAAjL,MAAA2K,SAAApC,KAAAoC,EAAAO,MAAAP,EAAAtB,MAEA,OAAA,IAAApB,EAAAM,KAAA0C,EAAA,CACAE,UAAAvK,KAAAwK,WAAAT,EAAAQ,WACAE,KAAAV,EAAAW,YACAC,OAAAZ,EAAAa,eAEA,EAEAV,WAAA,SAAAH,GAEA,IAAAc,EAAA,IAAAzL,MAAA2K,SAAApC,KAAAoC,EAAAO,MAAAP,EAAAtB,MACA,OAAA,IAAApB,EAAAO,MAAAmC,EAAAe,IAAAD,EAAA,CACAN,UAAAvK,KAAAwK,WAAAT,EAAAQ,YAEA,EAEAJ,UAAA,SAAAJ,GAEA,IAAA/I,EAAA,CACAuJ,UAAAvK,KAAAwK,WAAAT,EAAAQ,WACAI,OAAAZ,EAAAa,cACAH,KAAAV,EAAAW,YACAK,KAAAhB,EAAAgB,MAEA,OAAA,IAAA3L,MAAAiI,QAAAQ,KAAAkC,EAAAiB,QAAAjB,EAAAO,MAAAtJ,EACA,EAEAgJ,UAAA,SAAAD,GASA,IAPA,IAAA/I,EAAA,CACAuJ,UAAAvK,KAAAwK,WAAAT,EAAAQ,WACAI,OAAAZ,EAAAa,cACAH,KAAAV,EAAAW,aAEAO,EAAA,IAAA5D,EAAAK,UAAA1G,GAEA8I,EAAA,EAAAA,EAAAC,EAAAmB,MAAAhI,OAAA4G,IAAA,CACA,IAAAqB,EAAApB,EAAAmB,MAAApB,GAEA,IAAAqB,EAAAC,SAEA,OAGAH,EAAAI,OAAAC,MAAAL,EAAAE,EAAAb,OAEA,IAAA,IAAAiB,EAAA,EAAAA,EAAAJ,EAAAC,SAAAlI,OAAAqI,IAAA,CACA,IAAAC,EAAAL,EAAAC,SAAAG,IACA,IAAAC,EAAAC,OAAAvI,OAAA+H,EAAAS,OAAAT,EAAAU,SACAL,MAAAL,EAAAO,EAAAC,OACA,CAEAN,EAAAS,QACAX,EAAAY,OAEA,CAEA,OAAAZ,CACA,EAEAT,WAAA,SAAAD,GACA,IAAAuB,EAAAC,OAAAC,OAAA5M,MAAA2K,SAAAkC,OAAAC,WAEA,OADA9M,MAAA2K,SAAAkC,OAAAX,MAAAQ,EAAAvB,GACAuB,CACA,IAGAlL,EAAAxB,MAAAyE,UAAAC,IAAA,CACA0D,cAAAA,EACAM,KAAAoB,IAEAtI,EAAAxB,MAAAyE,UAAA,CACA+E,UAAAA,GAEA,CA5PA,CA4PAjI,OAAAvB,MAAA4E,QAEA,MAgBAmI,EAAA,CAAAC,EAAAC,KACAD,EAAAE,kBAAAD,EAAAE,MACAH,EAAAI,mBAAA,CACAD,KAAAF,EAAAE,OAIAH,EAAAD,wBAAAE,EAAA,EAGAI,EAAAL,IACAA,EAAAK,2BAAA,EAGAD,EAAA,CAAAJ,EAAAG,KACAH,EAAAI,mBAAA,CAAAD,KAAAA,GAAA,EAGAG,EAAA1I,OACA2I,EAGA,EAHAA,EAIA,EAGA,MAAAC,EACA,WAAAC,CAAA5L,GACAjB,KAAAiB,OAAAA,EACAjB,KAAAoM,OAAAnL,EAAA6L,gBACA9M,KAAAe,MACA,CAEA,IAAAA,GACA,MAAAgM,EAAA/M,KAAAgI,QAAA0E,EAAA,eAEAK,EAAAC,YAAAhN,KAAAiB,OAAAgM,QAAAjF,SACA,MAAAiF,EAAAjN,KAAAiN,QAAA,IAAA7N,MAAAkF,GAAA4I,QAAAH,EAAA,CACAI,SAAA,OACAC,MAAA,CACA,CAAAC,KAAA,YAAAC,QAAA,YAAAC,KAAA,YAAA3L,KAAA,SAAA4L,WAAA,EAAAC,SAAA,WAAArE,MAAA,cAAA+D,SAAA,QACA,CAAAvL,KAAA,aACA,CAAAyL,KAAA,WAAAC,QAAA,WAAAC,KAAA,YAAA3L,KAAA,SAAA4L,WAAA,EAAAC,SAAA,WAAArE,MAAA,cAAA+D,SAAA,QACA,CAAAvL,KAAA,UACA,CAAAyL,KAAA,QAAAC,QAAA,QAAAC,KAAA,IAAA3L,KAAA,SAAA6L,SAAA,WAAAN,SAAA,SAEAO,eAAA,CACAC,UAAA,YACAC,SAAA,YACA/B,MAAA,WAIAoB,EAAAnI,KAAA,QAAA9E,KAAA6N,eAAA/I,KAAA9E,OACAiN,EAAAnI,KAAA,SAAA9E,KAAA6N,eAAA/I,KAAA9E,MACA,CAEA,cAAA6N,CAAA/H,GACA,MAAAsG,EAAApM,KAAAoM,OAEAkB,EADAZ,EAAA5G,EAAAc,QACA5E,KAAA,WACA8L,EAAA9N,KAAAiB,OAAAgM,QAEA,OAAAK,GACA,IAAA,QACAtN,KAAA0I,UACAoF,EAAA9F,QAAAgB,KAAA,gBAAA3C,QAAA,SACA,MACA,IAAA,YACA8F,EAAAC,EAAA,CAAAE,gBAAA7L,EAAAsN,EAAAC,cAAAzB,KAAAI,IACA,MACA,IAAA,WACAR,EAAAC,EAAA,CAAAE,gBAAA7L,EAAAsN,EAAAC,cAAAzB,KAAAI,IAGA,CAEA,OAAAjE,GACA1I,KAAAiN,UACAjN,KAAAiB,OAAAgM,QAAAgB,OAAA,yBAAA,GACAjO,KAAAiN,QAAAiB,OAAA,SACAlO,KAAAiN,QAAAiB,OAAA,UACAlO,KAAAiN,QAAAvE,UACA1I,KAAAiN,QAAA,KACAjN,KAAAgI,QAAAmG,SACAnO,KAAAgI,QAAA,KACAhI,KAAAiB,OAAA8L,mBAAA,KACAN,EAAAzM,KAAAoM,QAEA,GAGA,SAAA1L,GACA,IAAAtB,EAAAuB,OAAAvB,MACAwB,EAAAF,EAAAE,OACAyD,EAAAjF,EAAAkF,GAAAD,SACAvD,EAAA1B,EAAA0B,MACAyD,EAAAnF,EAAAyE,UAAAU,aAIA6J,EAAAtN,EAAAF,OAAA,CACAG,KAAA,SAAAC,GACAhB,KAAAgB,QAAAA,EACAhB,KAAAiB,OAAAD,EAAAC,OACAjB,KAAAyB,cAAAzB,KAAAiB,OAAAD,QAAAU,SAAAD,aACA,IAGA4M,EAAAD,EAAAxN,OAAA,CACAG,KAAA,SAAAC,GACAoN,EAAAE,GAAAvN,KAAAwN,KAAAvO,KAAAgB,GACAhB,KAAA8I,cAAA,IAAAvE,EAAAvE,KAAAiB,OACA,EACAuN,KAAA,WACAxO,KAAAiB,OAAA8H,QAAA/I,KAAAiB,OAAA8H,SAAA/I,KAAA8I,cAAAtE,cACAxE,KAAAiB,OAAA8H,QAAAf,QAAAyG,OACA,IAGAC,EAAAN,EAAAxN,OAAA,CACA4N,KAAA,WACA,IAEAG,EAAAlL,EAFAmL,EAAA5O,KAAAgB,QAAA6N,MACA5N,EAAAjB,KAAAiB,OAGA,GAAA6N,MAAAF,GAIA,OAHAD,EAAA1N,EAAA8N,SACAtL,EAAAxC,EAAA6B,SAAAW,OAAAxC,EAAA6B,SAAAkM,SAEAJ,GACA,IAAA,QAAAA,EAAA,EACA,MACA,IAAA,OAAAA,EAAAD,EAAA,EAAAA,EAAA,EAAA,EACA,MACA,IAAA,OAAAC,EAAAD,EAAAlL,EAAAkL,EAAA,EAAAlL,EACA,MACA,IAAA,OAAAmL,EAAAnL,OAIAmL,EAAAK,OAAAL,GAGA3N,EAAA2C,aAAAgL,GAAA,EACA,IAGAM,EAAAd,EAAAxN,OAAA,CACA4N,KAAA,WACA,MAAAtN,EAAAlB,KACA,IAAAkB,EAAAD,OAAA6B,SAIA,YAHA5B,EAAAD,OAAAsB,cAAA,CACAE,QAAAvB,EAAAO,cAAA0N,WAKA,MAAA/L,EAAAlC,EAAAD,OAAA6B,SAAAsM,MAAAlO,EAAAD,OAAA6B,SAAAsM,KAAAC,OACAnO,EAAAD,OAAAD,QAAAU,SAAA4N,gBAEApO,EAAAD,OAAA8F,kBACA7F,EAAAD,OAAA8C,UAAAZ,aAAAC,GAEAlC,EAAAD,OAAA6L,gBAAA3J,aAAAC,EAEA,IAGAmM,EAAAnB,EAAAxN,OAAA,CACAG,KAAA,SAAAC,GACAA,EAAAN,EAAAE,OAAAI,EAAAhB,KAAAgB,SACAoN,EAAAE,GAAAvN,KAAAwN,KAAAvO,KAAAgB,EACA,EACAwN,KAAA,WACA,IAAAgB,EAAAxP,KAAAiB,OAAAwO,aAAAzP,KAAA0P,cAEAF,EAAAG,aAAA,CACAC,WAAA5P,KAAAiB,OAAA6B,UAAA9C,KAAAiB,OAAA6B,SAAAW,OAAA,EACAZ,KAAA7C,KAAAiB,OAAAD,QAAA6B,OAGA2M,EAAAK,MACA,EACAvE,MAAA,SAAAwE,GACA,IAAAvJ,EAAAuJ,EAAAvJ,UAEA,SAAAA,EACAvG,KAAAiB,OAAA8O,YAAAD,GACA,SAAAvJ,GACAvG,KAAAiB,OAAA+O,UAAAF,EAEA,EACAJ,YAAA,WAMA,OALA1P,KAAAiB,OAAAwO,YAAA,IAAArQ,EAAAyE,UAAAoM,QAAAC,eAAA,CACA5E,MAAAtL,KAAAsL,MAAAxG,KAAA9E,MACA4P,WAAA5P,KAAAiB,OAAA6B,UAAA9C,KAAAiB,OAAA6B,SAAAW,OAAA,EACA/B,SAAA1B,KAAAiB,OAAAD,QAAAU,WAEA1B,KAAAiB,OAAAwO,WACA,IAGAU,EAAA/B,EAAAxN,OAAA,CACA4N,KAAA,WACA,MACAvN,EADAjB,KACAiB,OAEAA,EAAAgM,QAAAmD,OAAAnP,EAAAgM,QAAAjF,QAAAgB,KAAA,sCAAA,GACAwD,EAAAvL,EAAA6L,gBAAArM,EAAAsN,EAAAC,cACA,IAGAqC,EAAAjC,EAAAxN,OAAA,CACA4N,KAAA,WACA,MACAvN,EADAjB,KACAiB,OAEAA,EAAAgM,QAAAmD,OAAAnP,EAAAgM,QAAAjF,QAAAgB,KAAA,sCAAA,GACA/H,EAAA8L,oBACA9L,EAAA8L,mBAAArE,UAEA+D,EAAAxL,EAAA6L,iBACAN,EAAAvL,EAAA6L,gBAAArM,EAAAsN,EAAAuC,IACA,IAGA,MAAAC,EAAAnC,EAAAxN,OAAA,CACAG,KAAA,SAAAC,GACA,MAAAE,EAAAlB,KAEAkB,EAAAD,OAAAD,EAAAC,OAEAC,EAAAD,OAAAuP,eACAtP,EAAAD,OAAAuP,aAAA,IAAApR,EAAAyE,UAAAoM,QAAAQ,aAAA,CACA5K,cAAA3E,EAAAD,OAAAyP,qBACAC,SAAA,CACAC,IAAA1P,EAAAD,OAAA4E,cAAAgL,SAAAD,IACAE,KAAA5P,EAAAD,OAAA4E,cAAAgL,SAAAC,MAEApP,SAAAR,EAAAD,OAAAD,QAAAU,SAAAuO,QAAAc,OACAlB,KAAA3O,EAAA8P,MAAAlM,KAAA5D,GACA+P,KAAA/P,EAAAgQ,MAAApM,KAAA5D,GACAiQ,KAAAjQ,EAAAkQ,MAAAtM,KAAA5D,GACA2K,MAAA3K,EAAAmQ,OAAAvM,KAAA5D,MAIAkN,EAAAE,GAAAvN,KAAAwN,KAAArN,EAAAF,EACA,EACAwN,KAAA,WACAxO,KAEAiB,OAAAuP,aAAAX,MACA,EACAmB,MAAA,WACA,MAAA9P,EAAAlB,KAEAkB,EAAAoQ,cAAApQ,EAAAqQ,QAAAzM,KAAA5D,GACAA,EAAAD,OAAAuP,aAAAgB,YAAA1M,KAAA,SAAA5D,EAAAoQ,cACA,EACAD,OAAA,WACA,MAAAnQ,EAAAlB,KACAkB,EAAAD,OAAA6L,gBAAA2E,cACAvQ,EAAAD,OAAAgM,QAAAjF,QAAAgB,KAAA,gBAAA3C,QAAA,SACAnF,EAAAD,OAAAuP,aAAAgB,YAAAtD,OAAA,SAAAhN,EAAAoQ,eACApQ,EAAAwQ,QAAA,GACAxQ,EAAAyQ,WAAA,KACAzQ,EAAA0Q,oBACA,EACAL,QAAA,SAAAM,GACA,MAAA3Q,EAAAlB,KACA8R,EAAA5Q,EAAAD,OAAAuP,aAAAgB,YAAA,WACAO,EAAA7Q,EAAAD,OAAAuP,aAAAgB,YAAA,UAEA,eAAAK,EAAAG,OAAA,cAAAH,EAAAG,QACA9Q,EAAAwQ,QAAAxQ,EAAAD,OAAA6L,gBAAAmF,WAAA,CAAAH,KAAAA,EAAAC,UAAAA,IACA7Q,EAAAyQ,WAAAzQ,EAAAwQ,QAAAxO,OAAA,EAAA,EACAhC,EAAA0Q,qBAEA,EACAV,MAAA,WACA,MAAAhQ,EAAAlB,KAEAkB,EAAAD,OAAA6L,gBAAAoF,sBACAhR,EAAAyQ,WAAAzQ,EAAAyQ,WAAA,EAAAzQ,EAAAwQ,QAAAxO,OAAA,EAAAhC,EAAAyQ,WAAA,EACAzQ,EAAA0Q,oBACA,EACAR,MAAA,WACA,MAAAlQ,EAAAlB,KAEAkB,EAAAD,OAAA6L,gBAAAqF,0BACAjR,EAAAyQ,WAAAzQ,EAAAyQ,WAAA,EAAA,EAAAzQ,EAAAwQ,QAAAxO,OAAAhC,EAAAyQ,WAAA,EACAzQ,EAAA0Q,oBACA,EACAA,mBAAA,WACA,MAAA1Q,EAAAlB,KACAoS,EAAAlR,EAAAD,OAAAuP,aAAAgB,YAEAtQ,EAAAwQ,SAAAxQ,EAAAwQ,QAAAxO,QACAkP,EAAAC,IAAA,UAAAnR,EAAAwQ,QAAAxO,QACAkP,EAAAC,IAAA,aAAAnR,EAAAyQ,cAEAS,EAAAC,IAAA,aAAA,IACAD,EAAAC,IAAA,UAAA,GACAD,EAAAC,IAAA,aAAA,GAEA,EACAC,aAAA,WACAtS,KACAiB,OAAAuP,aAAA3E,OACA,IAGA,IAAA0G,EAAAnE,EAAAxN,OAAA,CACA4N,KAAA,WACA,MAAAtN,EAAAlB,KACAwS,EAAAtR,EAAAuR,iBAEA,GAnOA,YAmOAD,EACA,OAGA,IAAAE,EAAAF,EAAAE,UAEAxR,EAAAD,OAAA0R,YAAAH,EAAAE,YACAxR,EAAAD,OAAA2R,qBAAA,EACA1R,EAAAD,OAAA4R,aAAA3R,EAAAD,OAAA6L,gBAAAgG,sBAAA,EACA5R,EAAAD,OAAA6L,gBAAAiG,KAAA,CAAAL,UAAAF,EAAAE,UAAAM,cAAAR,EAAAQ,gBACAN,EAAAxR,EAAAD,OAAA6L,gBAAA9L,QAAA0R,UACAxR,EAAA+R,gBAAAP,IAGAxR,EAAAD,OAAA0R,UAAAD,CACA,EAEAD,eAAA,WACA,IAMAS,EANAlS,EAAAhB,KAAAgB,QACAC,EAAAjB,KAAAiB,OACAkS,EAAAlS,EAAAD,QACAwR,EAAAxR,EAAA6N,OAAA7N,EAAAwR,MACAY,EAAAZ,EACAQ,EAAA,GA0BA,GAvBA/R,EAAAoS,cAAA,EACApS,EAAAqS,UAAA,EAEAtS,EAAAuS,OACAH,EAAAZ,EAAAvR,EAAA0R,UAAAQ,EAAAK,SACAxS,EAAAyS,QACAL,EAAAZ,EAAAvR,EAAA0R,UAAAQ,EAAAK,SACA,SAAAhB,GACAvR,EAAAoS,cAAA,EACAD,EAAAnS,EAAAyS,gBACA,iBAAAlB,GAAApT,EAAAuU,WAAAnB,GAEAA,GAAAA,EAAAoB,WAAAC,MAAA,cAEAT,EADAZ,EAAAsB,SAAAtB,EAAAuB,QAAA,IAAA,IAAA,IAAA,IAGAb,EAAApE,MAAA0D,GALAQ,EAAAR,EAQAU,IACAA,EAAAV,EAAAW,EAAAa,SAAAxB,EAAAW,EAAAc,UAGAf,IAAAjS,EAAAoF,QA9QA,YA8QA,CAAAmM,MAAAA,IASA,OALAxR,EAAAkT,gBAAAjT,EAAAgM,SAEAhM,EAAAkT,oBAAA3B,GAGA,CAAAE,UAAAU,EAAAJ,cAAAA,EACA,EAEAC,gBAAA,SAAAT,GACAxS,KACAiB,OAEAoF,QA7RA,UA6RA,CAAAmM,MAAAA,GACA,IAGA4B,EAAAhG,EAAAxN,OAAA,CACAG,KAAA,SAAAC,GACAoN,EAAAE,GAAAvN,KAAAwN,KAAAvO,KAAAgB,EACA,EACAwN,KAAA,WACA,MAAAtN,EAAAlB,KAEAkB,EAAAD,OAAA6B,UAOAuB,EAAAnD,EAAAD,OAAAyP,sBAAA,GAEA2D,YAAA,KACAnT,EAAAD,OAAA6L,gBAAAwH,WAAA,GACA,MAVApT,EAAAD,OAAAsB,cAAA,CACAE,QAAAzC,KAAAyB,cAAA0N,UAUA,IAGA,MAAAoF,EAAAnG,EAAAxN,OAAA,CACAG,KAAA,SAAAC,GACAoN,EAAAE,GAAAvN,KAAAwN,KAAAvO,KAAAgB,EACA,EACAwN,KAAA,WACA,MAAAvN,EAAAjB,KAAAiB,OACAA,EAAA8L,mBACA9L,EAAA8L,mBAAArE,UAEAzH,EAAA8L,mBAAA,IAAAH,EAAA3L,EAEA,IAGAL,EAAAxB,EAAAyE,UAAA,CACAwK,YAAAA,EACAK,kBAAAA,EACAQ,gBAAAA,EACAiB,uBAAAA,EACAE,iBAAAA,EACAd,cAAAA,EACA6E,aAAAA,EACA7D,kBAAAA,EACAgC,YAAAA,EACAgC,mBAAAA,GAGA,CAzVA,CAyVA5T,OAAAvB,MAAA4E,QAEA,SAAAtD,GACA,IAAAtB,EAAAuB,OAAAvB,MACAoV,EAAApV,EAAAqV,WACA7T,EAAAF,EAAAE,OACAE,EAAA1B,EAAA0B,MACA4T,EAAAtV,EAAAkF,GAAAoQ,UACAC,EAAAvV,EAAAwV,YACAC,EACA,OADAA,EAEA,OAEAC,EAAA1V,EAAA0V,KAEAC,EAAAjU,EAAAF,OAAA,CACAG,KAAA,SAAAC,GACAhB,KAAAgB,QAAAJ,EAAAI,EAAA,CACAgU,QAAA,CAAA,CACAlD,KAAA9Q,EAAAU,SAAAuO,QAAAgF,WAGAjV,KAAAkV,QAAAxU,EAAA,WACAyU,YAAAnV,KAAAgB,SACAoU,gBACA,EACAvF,KAAA,WACA7P,KAAAkV,QAAAG,SAAAxF,MACA,IAGAK,EAAApP,EAAAF,OAAA,CACAG,KAAA,SAAAC,GAeA,OAdAhB,KAAAgB,QAAAJ,EAAAI,EAAAhB,KAAAgB,QAAA,CACAsU,YAAA,CAAA,CACAC,YAAAvU,EAAAU,SAAAuO,QAAAuF,eAAAC,IACAlP,UAAAsO,GACA,CACAU,YAAAvU,EAAAU,SAAAuO,QAAAuF,eAAAE,IACAnP,UAAAsO,IAEAxF,MAAArO,EAAAU,SAAAuO,QAAAuF,eAAAnG,MACAQ,KAAA,WACA7P,KAAAqV,QACA,IAEArV,KAAA2V,oBACA3V,IACA,EACAgB,QAAA,CACAuF,UAAAsO,EACAe,WAAA,EACAC,WAAA,EACAC,MAAA,CACAC,eAAA,GAEA5N,MAAA,MACA6N,SAAA,IACAC,SAAA,EAAAvU,WAAA+B,WACA,oCAAA+Q,EAAA9S,EAAA8T,eAAAU,OAAA9S,qOAKAoR,EAAA9S,EAAA8T,eAAAU,OAAAC,iRAQA3B,EAAA9S,EAAA8T,eAAAU,OAAArT,2HAEA2R,EAAA/Q,2MAGA+Q,EAAA9S,EAAA0U,kKACA5B,EAAA9S,EAAA2U,iCAGA1G,aAAA,SAAA3O,GACAA,EAAA4O,YACA5P,KAAA8P,UAAAuC,IAAA,aAAArR,EAAA4O,YAEA5O,EAAA6B,MACA7C,KAAA8P,UAAAuC,IAAA,OAAArR,EAAA6B,KAEA,EACA8S,kBAAA,WACA,IAAAzU,EAAAlB,KACAgB,EAAAE,EAAAF,QACAsV,EAAAtV,EAAAU,SAAAuO,QACAT,EAAA9O,EAAA,yEACA0J,OAAAhL,EAAA6W,SAAAjV,EAAAiV,SAAA7W,CAAA,CACAqE,MAAAzC,EAAA4O,WACAlO,SAAA4U,KAEAC,YAAAvV,GACAwV,iBAkBA,OAhBAtV,EAAA4O,UAAA1Q,EAAAqX,WAAA,CACApH,MAAAiH,EAAAd,eAAAnG,MACAhC,KAAAiJ,EAAAd,eAAAlG,gBACA/I,UAAAvF,EAAAuF,UACA+O,YAAAtU,EAAAsU,YACA1F,WAAA5O,EAAA4O,WACA/M,KAAA,EACAyI,MAAApK,EAAAoK,MAAAxG,KAAA9E,MACA6L,MAAA,WACA2D,EAAA3D,OACA,IAGA3K,EAAAgU,QAAA1F,EAEApQ,EAAA0F,KAAA0K,EAAAxH,QAAA9G,EAAA4O,WACAN,CACA,EACAK,KAAA,WACA7P,KAAAkV,QAAAG,SAAAxF,MACA,EACAvE,MAAA,WACAtL,KAAAkV,QAAArJ,QACA7L,KAAAgB,QAAAsK,MAAA,CACAlI,SAAApD,KAAA8P,UAAAzC,KAAArN,KAAA8P,UAAAvJ,UACAA,UAAAvG,KAAA8P,UAAAvJ,UACA1D,KAAA7C,KAAA8P,UAAAjN,MAEA,IAGA4N,EAAA3P,EAAAF,OAAA,CACAG,KAAA,SAAAC,GACAhB,KACAgB,QAAAJ,EAAA,CAAA,EAAAI,EADAhB,KACAgB,QACA,EACAA,QAAA,CACA6U,WAAA,EACAI,SAAA,EAAAvU,cACA,6EAAA8S,EAAA9S,EAAAgV,oIAAAtX,EAAAkF,GAAAiJ,KAAA,CAAAA,KAAA,cAAAoJ,UAAA,4OAEAnC,EAAA9S,EAAAkV,uBAAApC,EAAA9S,EAAAkV,oQACApC,EAAA9S,EAAAqQ,sBAAAyC,EAAA9S,EAAAqQ,eAAA3S,EAAAkF,GAAAiJ,KAAA,CAAAA,KAAA,oBAAAoJ,UAAA,qHAEAnC,EAAA9S,EAAAmV,0LACArC,EAAA9S,EAAAoV,qBAAAtC,EAAA9S,EAAAoV,cAAA1X,EAAAkF,GAAAiJ,KAAA,CAAAA,KAAA,WAAAoJ,UAAA,kKACAnC,EAAA9S,EAAAuP,iBAAAuD,EAAA9S,EAAAuP,UAAA7R,EAAAkF,GAAAiJ,KAAA,CAAAA,KAAA,aAAAoJ,UAAA,mKACAnC,EAAA9S,EAAAmK,kBAAA2I,EAAA9S,EAAAmK,WAAAzM,EAAAkF,GAAAiJ,KAAA,CAAAA,KAAA,IAAAoJ,UAAA,oCAGA9G,KAAA,WACA,IAAA3O,EAAAlB,KAEAkB,EAAAsO,QACAtO,EAAAyU,oBAGAzU,EAAAF,QAAA6O,OACA3O,EAAA6V,mBACA,EACAlL,MAAA,WACA7L,KACAgB,QAAA6K,QADA7L,KAEAgX,mBACA,EACAD,kBAAA,WACA,IAAA7V,EAAAlB,KAEAkB,EAAAsO,OAAAyH,IAAA,OAAA/V,EAAAF,QAAA6E,cAAAqR,aAAA,EAAAvC,EAAAzT,EAAAsO,QAAA,GAAA,EAAA,MAEAtO,EAAAsO,OAAA2H,YAAAC,aAAA,CACAC,QAAA,CAAAtE,KAAA,CAAAuE,UAAA,MAAAC,KAAA,CAAAD,UAAA,OACAE,SAAA,IACAvS,SAAA,SAAA4M,GACA3Q,EAAAsO,OAAAxG,KAAA,0BAAA3C,QAAA,QACA,GAEA,EACA2Q,kBAAA,WACAhX,KAEAwP,OAAA2H,YAAAC,aAAA,CACAC,QAAA,CAAAtE,KAAA,CAAAuE,UAAA,MAAAG,WAAA,CAAAjF,MAAA,KAAA+E,KAAA,CAAAD,UAAA,QACAE,SAAA,IACAE,MAAA,GAEA,EACA/B,kBAAA,WACA,IAAAzU,EAAAlB,KACAiW,EAAA7W,EAAA6W,SAAA/U,EAAAF,QAAAiV,UACA0B,EAAAjX,EAAAuV,EAAA,CACAvU,SAAAR,EAAAF,QAAAU,YAGAR,EAAAF,QAAA6E,cAAA+R,QAAAD,GACAzW,EAAAsO,OAAAmI,EAEAzW,EAAA2W,WAAA,IAAAnD,EAAAiD,EAAA,CACAG,OAAA,8BACAC,KAAA,IACAC,UAAA,SAAAlS,GACA,IAAAmS,EAAA/W,EAAAsO,OACA0I,EAAAhX,EAAAF,QAAA6E,cAMA,GAJAoS,EAAAE,cAAA,CACArH,KAAAhL,EAAAsS,EAAAC,OAAAjZ,EAAAkZ,UAAAL,EAAA,YAAAnH,OAGAoH,EACA,OAAA,KAGAA,EAAAK,YAAAL,EAAAhB,aAEApD,SAAAoE,EAAAK,YAAA,IAAAL,EAAA,GAAAM,cACAN,EAAAK,aAAAnZ,EAAAqZ,QAAAC,aAGAT,EAAAU,QAAAT,EAAAK,YAAA5D,EAAAsD,GAAA,EACA,EACAW,KAAA,SAAA9S,GACA,IAEAgL,EAFAmH,EAAA/W,EAAAsO,OACAmB,EAAA,CAAA,GAGAG,EAAAhL,EAAAsS,EAAAC,OAAAJ,EAAAE,cAAArH,OAEAhC,MAAAgC,IAAAA,EAAA8C,WAAAiF,QAAA,MAAA,EACAlI,EAAAG,KAAAA,EAEAH,EAAAG,KAAAvI,KAAAuQ,IACAvQ,KAAAC,IAAAsL,SAAAhD,EAAA,IAAAgD,SAAAmE,EAAAU,QAAA,KACA,GAIAV,EAAAhB,IAAAtG,EACA,IAGAzP,EAAA2W,WAAAkB,WAAAC,iBAAA,EAEA9X,EAAAsQ,YAAApS,EAAAqX,WAAA,CACAwC,WAAA,GACAhH,WAAA,GACAF,WAAA,EACAJ,WAAA,EACAD,QAAA,EACAwH,eAAA,WACAlZ,KAAAqS,IAAA,aAAArS,KAAA+R,UACA,EACAd,KAAA/P,EAAAF,QAAAiQ,KACAE,KAAAjQ,EAAAF,QAAAmQ,KACAtF,MAAA,WACA7L,KAAAqS,IAAA,aAAA,IACAnR,EAAA2K,OACA,EACAsN,QAAA,SAAAtH,GACA,IAAAuH,EAAAvH,EAAAwH,QACAC,EAAAzH,EAAA0H,SAAAvZ,KAAAmR,KAAAnR,KAAAiR,KAEAmI,IAAAtE,EAAA0E,OACAF,IACAzH,EAAA4H,kBACAL,GAAAtE,EAAA4E,KACA1Z,KAAA6L,OAEA,EACA8N,QAAA,SAAA9H,GACA7R,KAAAqS,IAAA,aAAAR,EAAAjL,OAAAiI,MACA,IAGAzP,EAAA0F,KAAA6S,EAAAzW,EAAAsQ,YACA,IAGA5Q,EAAAxB,EAAAyE,UAAA,CACAoM,QAAA,CACA8E,YAAAA,EACA7E,eAAAA,EACAO,aAAAA,IAGA,CA3RA,CA2RA9P,OAAAvB,MAAA4E,QAEA,MAAAtD,EAAAsD,OAEA,MAAA4V,EACA,WAAA/M,CAAA5L,EAAA4Y,EAAAC,GACA9Z,KAAAiB,OAAAA,EACAjB,KAAAoM,OAAAnL,EAAA6L,gBACA9M,KAAA6Z,OAAAA,EACA7Z,KAAA8Z,OAAAA,EACA9Z,KAAA+Z,iBAAA/Z,KAAAga,YAAAlV,KAAA9E,MACAA,KAAAe,MACA,CAEA,IAAAA,GACA,MAAA8Y,EAAA7Z,KAAA6Z,OACAI,EAAAvZ,EAAA,kBAAAtB,MAAA8a,kBAEAla,KAAAma,MAAA,IAAA/a,MAAAkF,GAAA8V,MAAA1Z,EAAA,8DAAA,CACAmZ,OAAAA,IAGA7Z,KAAAma,MAAAnS,QAAAqS,KAAAJ,IAEAja,KAAAsa,aACA,IAAAlb,MAAAkF,GAAA4I,QAAA+M,EAAA,CACA9M,SAAA,OACAC,MAAA,CACA,CAAAC,KAAA,UAAAC,QAAA,UAAAC,KAAA,UAAA3L,KAAA,SAAA6L,SAAA,WAAAN,SAAA,QACA,CAAAE,KAAA,SAAAC,QAAA,SAAAC,KAAA,QAAA3L,KAAA,SAAA6L,SAAA,WAAAN,SAAA,SAEAO,eAAA,CACA6M,QAAA,UACApM,OAAA,aAIArJ,KAAA,QAAA9E,KAAAwa,8BAAA1V,KAAA9E,OAEAA,KAAAma,MAAAtK,MACA,CAEA,UAAA4K,GACA,CAEA,6BAAAD,CAAA1U,GACA,MAAAsG,EAAApM,KAAAoM,OAIA,OAHA1L,EAAAoF,EAAAc,QACA5E,KAAA,YAGA,IAAA,UACAhC,KAAAya,aACA,MACA,IAAA,SAxxBA,CAAArO,IACAA,EAAAsO,kBAAA,EAwxBAA,CAAAtO,GACApM,KAAA2a,eAKA,CAEA,WAAAX,GACAha,KAAA4a,gBAAAC,MAAAC,WAAAnX,SACA3D,KAAA4a,gBAAAC,MAAAE,eAAApX,QACA,CAEA,YAAAqX,GACA,OAAAlY,SAAAmY,eAAAjb,KAAA6Z,OAAAqB,GACA,CAEA,YAAAP,GACA3a,KAAAma,QACAna,KAAAma,MAAAzR,UACA1I,KAAAma,MAAA,KAEA,CAEA,aAAAgB,GACAnb,KAAAob,cACApb,KAAAob,YAAA1S,UACA1I,KAAAob,YAAA,KAEA,CAEA,OAAA1S,GACA1I,KAAAsa,eACAta,KAAAsa,aAAApM,OAAA,SACAlO,KAAAsa,aAAApM,OAAA,UACAlO,KAAAsa,aAAA5R,UACA1I,KAAAsa,aAAA,MAGAta,KAAA2a,cACA,EAGA,MAAAU,UAAAzB,EACA,WAAA/M,CAAA5L,EAAA4Y,EAAAC,GACAwB,MAAAra,EAAA4Y,EAAAC,EACA,CAEA,UAAAW,GACA,MAAAZ,EAAA7Z,KAAA6Z,OAEA7Z,KAAAgb,gBAKAhb,KAAAmb,gBAEAnb,KAAAob,YAAA,IAAAhc,MAAAkF,GAAA8V,MAAA1Z,EAAA,6TAOA,CACAmZ,OAAAA,EACA0B,SAAAvb,KAAA+Z,mBAGA/Z,KAAAwb,sBAEAxb,KAAAob,YAAAvL,OAEA7P,KAAA0I,WAtBA1I,KAAA0I,SAuBA,CAEA,mBAAA8S,GACAxb,KAAA4a,gBAAA,IAAAxb,MAAAkF,GAAAmX,gBAAAzb,KAAAob,YAAApT,QAAAgB,KAAA,6CAAA,CACA0S,OAAA,MACAC,SAAA,EACAC,OAAA9V,IAAA+V,OAt2BAzP,EAs2BApM,KAAAoM,OAt2BA0P,EAs2BAhW,EAAA+I,WAr2BAzC,EAAA2P,kBAAAD,GADA,IAAA1P,EAAA0P,CAu2BA,GACA,CAEA,WAAA9B,GACA,MAAAgC,EAAAhc,KAAA8Z,OAAAgC,MAEAR,MAAAtB,cACAha,KAAA4a,gBAAA/L,MAAAmN,EACA,EAGA,MAAAC,UAAArC,EACA,WAAA/M,CAAA5L,EAAA4Y,EAAAC,GACAwB,MAAAra,EAAA4Y,EAAAC,EACA,CAEA,UAAAW,GACA,MAAAZ,EAAA7Z,KAAA6Z,OAEA7Z,KAAAgb,gBAKAhb,KAAAmb,gBAEAnb,KAAAob,YAAA,IAAAhc,MAAAkF,GAAA8V,MAAA1Z,EAAA,ujBAWA,CACAmZ,OAAAA,EACA0B,SAAAvb,KAAA+Z,mBAGA/Z,KAAAkc,mBACAlc,KAAAwb,sBAEAxb,KAAAob,YAAAvL,OAEA7P,KAAA0I,WA3BA1I,KAAA0I,SA4BA,CAEA,gBAAAwT,GACA,MAAAC,EAAAnc,KAAA8Z,OAAAsC,mBAAA,GAAA,GAGApc,KAAAqc,aAAA,IAAAjd,MAAAkF,GAAAgY,KAAA5b,EAAA,2CAAA,CACA6b,gBAAA,IAAA,GACAC,SAAA,CACAC,SAAAN,GAEAO,OAAA,OACAC,KAAA,CACAC,KAAA,GAEAC,MAAA,CACA,CACA7K,MAAA,WACA8K,MAAA,YACAhD,OAAA,eACAiD,QAAA,EACAC,cAAA,CACA7P,SAAA,OACA8P,WAnBA,CAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAoBArB,OAAA9V,IACA,MAAA+I,EAAA/I,EAAAoX,OAAArO,QAx6BA,IAAAzC,EAAAqQ,EAAArQ,EAy6BApM,KAAAoM,OAz6BAqQ,EAy6BA5N,EAx6BAzC,EAAA+Q,oBAAAV,EAw6BA,OAOAzc,KAAAqc,aAAArU,QAAAgB,KAAA,mBAAAmF,QACA,CAEA,mBAAAqN,GACAxb,KAAA4a,gBAAA,IAAAxb,MAAAkF,GAAAmX,gBAAAzb,KAAAob,YAAApT,QAAAgB,KAAA,6CAAA,CACA0S,OAAA,MACAC,SAAA,EACAC,OAAA9V,IAAAsX,OA37BAhR,EA27BApM,KAAAoM,OA37BA0P,EA27BAhW,EAAA+I,WA17BAzC,EAAAiR,iBAAAvB,GADA,IAAA1P,EAAA0P,CA47BA,GACA,CAEA,WAAA9B,GACA,MAAAgC,EAAAhc,KAAA8Z,OAAAsC,mBAAA,GAAA,GAEAd,MAAAtB,cACAha,KAAA4a,gBAAA/L,MAAAmN,EACA,GAWA,SAAAtb,GACA,IAMAoH,EANAwV,EAAA,kBACAle,EAAAuB,OAAAvB,MACAkF,EAAAlF,EAAAkF,GACA1D,EAAAF,EAAAE,OACAyG,EAAAjI,EAAAiI,QACAyN,EAAApU,EAAAE,OAAA,CAAA2c,KAAA,IAAAC,MAAA,IAAAC,KAAA,GAAAC,YAAA,IAAAte,EAAA0V,MAEAlM,EAAAxJ,EAAAyE,UAAA+E,UACA+U,EAAArZ,EAAAqZ,OACAtZ,EAAAjF,EAAAkF,GAAAD,SAEAuZ,EAAA,SAEAC,EAAA,QACAC,EAAA,UAAAR,EAEAS,EAAA,SACAC,EAAA,aAEAC,EAAA,UACAC,EAAA,cAGAC,EAAA,QACAC,EAAA,SAEAC,EAAA,aACAC,EACA,QADAA,EAEA,MAEAC,EACA,eADAA,EAEA,8DAFAA,EAIA,mBAKAC,EACA,OADAA,EAEA,cAFAA,EAGA,aAHAA,EAIA,YAGAC,EAAAd,EAAA/c,OAAA,CACAG,KAAA,SAAAiH,EAAAhH,GACA,IAAAE,EAAAlB,KAEA2d,EAAArP,GAAAvN,KAAAwN,KAAArN,EAAA8G,EAAA5I,EAAAsf,WAAA,CAAA,EAAA1e,KAAAgB,QAAAA,IAEAE,EAAAyd,mBAEAzd,EAAA0d,WAEA1d,EAAAF,QAAAiM,SACA/L,EAAA2d,iBAGA3d,EAAA4d,eAAA9d,GAAA,CAAA,GACAE,EAAA6d,uBAEA7d,EAAA6F,kBACA7F,EAAA8d,mBAEA9d,EAAA+d,qBAGA7f,EAAA8f,OAAAhe,EAAA9B,EAAAkF,IAEApD,EAAAie,uBACAje,EAAAie,sBAAAje,EAAAke,QAAA,GAEA,EAEAC,OAAA,CACAzB,EAlEA,OAoEAC,EA9DA,YAgEAI,GAGAjd,QAAA,CACAqM,KAAA,YACAzD,KAAA,CACAhI,KAAA,UAEA0d,gBAAA,CACAhZ,KAAA,KACAiZ,cAAA,GAEAC,cAAA,CACAre,KAAA,CACAU,IAAA,KACAD,KAAA,MACAE,SAAA,OACAkB,UAAA,cAEA5B,OAAA,CACAS,IAAA,KACA6D,UAAA,QAEArE,SAAA,CACAQ,IAAA,MAEA0d,cAAA,GAEAtS,QAAA,CACA4P,MAAA,GACA4C,aAAA,GAEAtX,MAAA,IACAC,OAAA,KACAvF,KAAA,EACA6c,gBAAA,CACAvX,MAAA,IACAC,OAAA,MAEAoK,MAAA,KACAwB,QAAA,GACAC,QAAA,EACAT,SAAA,IACA9R,SAAA,CACA4N,gBAAA,WACArC,QAAA,CACA8F,KAAA,CACAL,UAAA,aACAe,QAAA,WACAF,OAAA,UACAoM,YAAA,eACAC,UAAA,kBACAC,WAAA,eACAC,UAAA,eAEAL,YAAA,OACA5P,KAAA,OACAkQ,SAAA,SACA1e,SAAA,WACA2e,MAAA,QACAC,gBAAA,mBACAC,UAAA,iBACAnP,OAAA,SACAoP,YAAA,eAEA1e,cAAA,CACAyE,aAAA,0BACAxD,WAAA,6BACAyM,SAAA,qBACAiR,aAAA,qBAEAnQ,QAAA,CACAuF,eAAA,CACAnG,MAAA,YACAC,gBAAA,WACA+Q,IAAA,kCACA5K,IAAA,mCACAC,IAAA,kCACAQ,OAAA,CACA9S,SAAA,YACA+S,WAAA,UACAtT,KAAA,SAGAoS,OAAA,KACAmB,KAAA,OACAC,OAAA,SACAtF,OAAA,CACA6F,WAAA,cACA7E,UAAA,aACAd,KAAA,aACA6F,SAAA,iBACAjL,MAAA,QACAgL,GAAA,KACAH,WAAA,kBAMA4J,aAAA,CACAb,YAAA,CACA7d,KAAA,iBACAyL,KAAA,cACAI,SAAA,WACAyN,GAAA,iCACAqF,SAAA,QACAhT,KAAA,OACAJ,SAAA,OACAqT,YAAA,CACA,CAAAtF,GAAA,OAAApJ,KAAA,OAAAvE,KAAA,cAAAkT,WAAA,CAAA,eAAA,gBACA,CAAAvF,GAAA,WAAApJ,KAAA,WAAAvE,KAAA,WAAAkT,WAAA,CAAA,eAAA,mBAAArQ,QAAA,GACA,CAAA8K,GAAA,QAAApJ,KAAA,QAAAvE,KAAA,QAAAkT,WAAA,CAAA,eAAA,gBAAArQ,QAAA,KAGAsQ,UAAA,CAAA9e,KAAA,aACA+e,MAAA,CACA/e,KAAA,YACAyL,KAAA,QACAkT,SAAA,QACAK,UAAA,QACA5Y,QAAA,cACA6Y,iBAAA,CACAC,aAAA,EACAC,gBAAA,IAGAC,OAAA,CAAApf,KAAA,UACAqf,UAAA,CACArf,KAAA,cACAuL,SAAA,OACA+T,QAAA,CACA,CAAAtf,KAAA,SAAA2L,KAAA,WAAAF,KAAA,UAAAC,QAAA,cAAAG,SAAA,WAAAzM,QAAA,8CAAAmM,SAAA,QACA,CAAAvL,KAAA,SAAA2L,KAAA,UAAAF,KAAA,SAAAC,QAAA,cAAAG,SAAA,WAAAzM,QAAA,6CAAAmM,SAAA,UAGA4F,KAAA,CACAnR,KAAA,YACAyL,KAAA,OACAC,QAAA,cACAiT,SAAA,QACAK,UAAA,WACA5e,KAAA,CAAA,GAAA,IAAA,IAAA,IAAA,IAAA,KACA6e,iBAAA,CACAzQ,QAAA,EACA+Q,cAAA,OACAC,eAAA,UACAC,gBAAA,EACAC,eAAA,EACAC,UAAA,SACApU,SAAA,SAGA8S,gBAAA,CACAre,KAAA,cACAuL,SAAA,OACA+T,QAAA,CACA,CACA1T,WAAA,EACAF,QAAA,yBACAC,KAAA,UACAE,SAAA,WACAJ,KAAA,kBACAjE,MAAA,aACA+D,SAAA,QACA,CACAK,WAAA,EACAF,QAAA,mBACAC,KAAA,OACAE,SAAA,WACAJ,KAAA,YACAjE,MAAA,aACAoY,UAAA,EACArU,SAAA,UAIAsU,QAAA,CAAA7f,KAAA,UACAmP,OAAA,CACAnP,KAAA,SACA0L,QAAA,oBACAC,KAAA,SACAF,KAAA,SACAI,SAAA,WACA2C,QAAA,EACAjD,SAAA,QAEA0C,KAAA,CACAjO,KAAA,SACA6L,SAAA,WACAJ,KAAA,OACAE,KAAA,cACAD,QAAA,cACAH,SAAA,QAEA9L,SAAA,CACAO,KAAA,SACA6L,SAAA,WACAJ,KAAA,WACAE,KAAA,WACAD,QAAA,kBACA8C,QAAA,EACAjD,SAAA,QAEA6S,MAAA,CACApe,KAAA,SACA6L,SAAA,WACAJ,KAAA,QACAE,KAAA,QACAD,QAAA,eACA8C,QAAA,EACAjD,SAAA,QAEAgT,YAAA,CACA3S,WAAA,EACA5L,KAAA,SACA6L,SAAA,WACAJ,KAAA,cACAE,KAAA,mBACAD,QAAA,qBACA8C,QAAA,EACAjD,SAAA,SAIAuU,aAAA,CACA3B,SAAA,CAAAne,KAAA,SAAA6L,SAAA,WAAAJ,KAAA,WAAAE,KAAA,eAAAD,QAAA,gBAAAH,SAAA,SAIAwR,iBAAA,WACA,IACA5L,EADA/S,KAAAgB,QAAAU,SAAAuL,QACA8F,KAEArS,EAAAsF,cAAA+M,KACA/S,KAAAgB,QAAAU,SAAAuL,QAAAvM,EAAAE,OAAA,CAAA,EAAAZ,KAAAgB,QAAAU,SAAAuL,QAAA8F,GACA/S,KAAAgB,QAAAU,SAAAuL,QAAA8F,KAAAA,EAAAL,WAAA1S,KAAAgB,QAAAU,SAAAuL,QAAA8F,KAEA,EAEA6L,SAAA,WACA,IAAA1d,EAAAlB,KACAgB,EAAAE,EAAAF,QAEAE,EAAAke,QAAAle,EAAA8G,QAEA9G,EAAAke,QACAjX,MAAAnH,EAAAmH,OACAC,OAAApH,EAAAoH,QACAuZ,SAAApD,GACAqD,GAAA9D,EAAA5c,EAAA2gB,SAAA/c,KAAA5D,IAEAA,EAAAmS,aAAA,OAAAnS,EAAAF,QAAAwR,MACAtR,EAAAwS,eAAAjT,EAAAqhB,EACA5gB,EAAAyR,UAAAzR,EAAAF,QAAAwR,OAAAtR,EAAAwS,eAEAxS,EAAA6gB,eAAA3iB,EAAA4iB,UAAA,WACA9gB,EAAAyC,QACA,IAEAzC,EAAA6N,SAAA7N,EAAAF,QAAA6B,IACA,EAEAgf,SAAA,SAAA/b,GACA,IAAAmc,EAAA,CAAAnN,EAAAyI,KAAAzI,EAAAoN,aACAC,EAAA,CAAArN,EAAA0I,MAAA1I,EAAAsN,cACAC,EAAA,CAAAvN,EAAA2I,KAAA3I,EAAA4I,aACA4E,GAAA,EACAjW,EAAA,CACAiB,QAAA4Q,EACAld,QAAA,CAAAkT,gBAAA,IAGApO,EAAAyc,UAAAviB,KAAAwiB,YAAAxiB,KAAAyiB,gBAAAnE,IAIA2D,EAAAS,SAAA5c,EAAAuT,UACAhN,EAAArL,QAAAuS,QAAA,EACA+O,GAAA,GACAH,EAAAO,SAAA5c,EAAAuT,UACAhN,EAAArL,QAAAyS,SAAA,EACA6O,GAAA,GACAD,EAAAK,SAAA5c,EAAAuT,WACAhN,EAAArL,QAAA6N,MAAApO,EAAAqhB,EACAQ,GAAA,GAGAA,IACAtiB,KAAA2iB,QAAAtW,GACAvG,EAAA2T,kBAEA,EAEAmJ,uBAAA,SAAAC,GACA,MAAA3hB,EAAAlB,KAEAkB,EAAA4hB,wBACA9iB,KAAA4D,aAAAif,EAAAE,OAAA,GACA7hB,EAAA8hB,gCAGA9hB,EAAA4hB,qBACA,EAEAE,sBAAA,WACA,MACAC,EADAjjB,KACA2gB,MAAA3Y,QAAAgB,KAAA,kBAAAka,WACA,GAAAD,EAAA,CACA,MAAA/M,EAAA+M,EAAAE,GAAA,GAAAC,IAAAH,EAAAE,GAAA,IAEAziB,EAAAwV,GAAAmN,GAAA,aACAnN,EAAAoN,MAEA,CACA,EAEAC,aAAA,WACA,MAAAriB,EAAAlB,KAEA,IAAAkB,EAAAyf,QAAAzf,EAAAyf,MAAA3f,QAAAwiB,WACA,OAGA,MAAAC,EAAArkB,EAAAwV,YAAA1T,EAAAyf,MAAA3Y,SACA0b,EAAAC,MAAAC,KAAA1iB,EAAA+L,QAAAjF,QAAAkb,SAAA,wCACAW,EAAAzkB,EAAAwV,YAAA1T,EAAA8G,SAEA,IAAA8b,EAAA,EAEA,MACAC,EAAA9U,OAAA/N,EAAA+L,QAAAjF,QAAAiP,IAAA,OAAAlD,QADA,sDACA,KAEA,GAAA2P,EAAAxgB,OAAA,EAAA,CACA,IAAA8gB,EAAA,EACA,IAAA,IAAAla,EAAA,EAAAA,EAAA4Z,EAAAxgB,OAAA4G,IACAka,GAAA5kB,EAAAwV,YAAA8O,EAAA5Z,IAAAia,EAEAC,IACAF,EAAAE,EAEA,CAEA,MAAAC,EAAA/iB,EAAAyf,MAAA3Y,QAAAgB,KAAA,gBAEA,GAAAya,EAAAK,EAAAC,EAAAF,EAEA,IAAA,IAAA/Z,EAAAma,EAAA/gB,OAAA,EAAA4G,GAAA,EAAAA,IAAA,CACAma,EAAAd,GAAArZ,GACA6X,SAAA,WACA,CAGA,GAAA8B,EAAAK,EAAAC,EAAAF,EAAA,CACA,MAAAK,EAAAhjB,EAAAyf,MAAA3Y,QAAAgB,KAAA,aAEA,IAAAc,EAAA,EAAAA,EAAAoa,EAAAhhB,OAAA4G,IAAA,CACAoa,EAAAf,GAAArZ,GAEAqa,YAAA,WACA,CACA,CAEAjjB,EAAAyf,MAAA3f,QAAAojB,OACAljB,EAAA8hB,uBAEA,EAEAlE,eAAA,SAAA9d,GACA,IACAqjB,EADAnjB,EAAAlB,KAGAqkB,EAAArjB,EAAAwe,cAAAte,EAAAF,QAAAwe,cAAAte,EAAAF,QAAAse,gBACApe,EAAAuhB,cAAAzhB,EAAAwe,cAAAlB,EAAAA,EAEApd,EAAA6F,mBACA7F,EAAA6C,UAAA,IAAA3E,EAAAyE,UAAA3C,EAAAuhB,eAAA1e,UAAAsgB,EAAAnjB,GACA4G,EAAA1I,EAAAyE,UAAA3C,EAAAuhB,eAAA3a,MA9xDAnH,OAAAwD,SAKAxD,OAAAwD,UAAAmgB,qBAAAC,WAAA5jB,OAAA6jB,aACAC,SAAApiB,MAAA,4dALAoiB,SAAApiB,MAAA,uKAiyDA,EAEA0E,gBAAA,WACA,OAAA/G,KAAAyiB,gBAAAnE,CACA,EAEAoG,cAAA,SAAAtX,GACA,IACA2V,EADA4B,GAAA,EAGA,IAAA,IAAA7a,EAAA,EAAAA,EAAAsD,EAAAlK,OAAA4G,IAAA,CACA,MAAA8a,EAAAxX,EAAAtD,GAiBA,GAhBA,iBAAA8a,GACAD,EAAA,UAAAC,EAAApe,cACAuc,EAAAjZ,GAEA8a,EAAAhjB,MACA+iB,EAAA,UAAAC,EAAAhjB,KAAA4E,cACAuc,EAAAjZ,GACA8a,EAAAvX,OACAsX,EAAA,UAAAC,EAAAvX,KAAA7G,cACAme,UACAC,EAAAvX,KAEA0V,EAAAjZ,GAIA6a,EACA,KAEA,CAEA,MAAA,CACAA,WACA5B,QAEA,EAEAlE,eAAA,WACA,IAAA3d,EAAAlB,KACAgB,EAAAE,EAAAF,QACA6jB,EAAAjkB,EAAA,CAAA,EAAAI,EAAAiM,SACAG,EAAAyX,EAAAhI,OAAAgI,EAAAhI,MAAA3Z,OAAA2hB,EAAAhI,MAAA9Q,OAAA+I,KAAA5T,EAAAof,cAGA,MAAAqE,SAAAA,EAAA5B,MAAAA,GAAA7hB,EAAAwjB,cAAAtX,GAKA,GAFAA,EAAAlM,EAAA4jB,cAAA1X,GAEAuX,EAAA,CACA,IAAAI,EAAA7jB,EAAAF,QAAAU,SAAAuL,QAAA0T,MAEAoE,GACAA,EAAAlO,KACAkO,EAAAlO,GAAA,GAAAkO,EAAAlO,SACAkO,EAAAhiB,QACAgiB,EAAAlO,GAAAkO,EAAAlO,GAAA,IAAAkO,EAAAhiB,aACAgiB,EAAAhiB,QAIA7B,EAAAof,aAAAK,MAAAE,iBAAAnf,SAAAqjB,EACA/jB,EAAAU,SAAAuL,QAAA0T,MAAA,QAEA,MAAAqE,EAAA9jB,EAAAof,aAAAK,MAAAE,iBACA,iBAAAzT,EAAA2V,KACA7hB,EAAAof,aAAAK,MAAAE,iBAAAngB,EAAAE,OAAAwM,EAAA2V,GAAAiC,GAEA5X,EAAA2V,GAAA7hB,EAAAof,aAAAK,MAEA,CAEAkE,EAAA,CACAvE,aAAA5f,EAAAE,OAAA,CAAA,EAAAM,EAAAof,aAAApf,EAAAwgB,cACAhU,eAAA1M,EAAAU,SAAAuL,QACAG,MAAAA,EACAyI,WAAA,EACA1I,SAAA,OACAoT,SAAAsE,EAAAtE,UAGA,IAAA0E,EAAAvkB,EAAA,WA2BA,OAzBAukB,EAAAC,SAAAhkB,EAAA8G,SACA9G,EAAA+L,QAAA,IAAA7N,EAAAkF,GAAA4I,QAAA+X,EAAAJ,GACA3jB,EAAAF,QAAAiM,QAAA/L,EAAA+L,QAAAjM,QAEAE,EAAA+L,QAAAnI,KA/gBA,SA+gBA5D,EAAAikB,cAAArgB,KAAA5D,IACAA,EAAA+L,QAAAnI,KAAAqZ,EAAAjd,EAAAikB,cAAArgB,KAAA5D,IACAA,EAAA+L,QAAAnI,KAAAsZ,EAAAld,EAAAikB,cAAArgB,KAAA5D,IAGA2jB,EAAApF,aACAve,EAAA+L,QAAAjF,QAAAgB,KAAA,8BAAA4Y,GAAAzD,EAAAjd,EAAAikB,cAAArgB,KAAA5D,IAGAyjB,IACAzjB,EAAAyf,MAAAzf,EAAA+L,QAAAjF,QAAAgB,KAAA,YACA9H,EAAAyf,MAAAzd,OAAA,IACAhC,EAAAyf,MAAAzf,EAAAyf,MAAA3e,KAAA,eAEAd,EAAAyf,MAAA7b,KAAAsZ,EAAAld,EAAA0hB,uBAAA9d,KAAA5D,KAGAA,EAAA4D,KAAA,CACAsgB,OAAAlkB,EAAAmkB,eAAAvgB,KAAA5D,KAGAA,EAAA+L,OACA,EAEA6X,cAAA,SAAA1X,GACA,IAAAlM,EAAAlB,KACAiN,EAAA/L,EAAAF,QAAAiM,QACAvL,EAAAR,EAAAF,QAAAU,SAAAuL,QAoCA,GAlCAG,EAAAA,EAAAkY,SAAAC,IAKA,GAJA,SAAAA,IACAA,EAAArkB,EAAAof,aAAAvN,MAGA,SAAAwS,EAAAlY,KAAA,CACAkY,EAAA7kB,EAAAE,OAAA,CAAA,EAAAM,EAAAof,aAAAvN,KAAAwS,GAEA,IAAAC,EAAA,CAAA,CACAC,QAAAjH,EACA1M,KAAApQ,EAAAke,WACA,CACA6F,QAAAjH,EACA1M,KAAApQ,EAAAie,aACA,CACA8F,QAAAjH,EACA1M,KAAApQ,EAAAme,YACA,CACA4F,QAAAjH,EACA1M,KAAApQ,EAAAoe,YAIA4F,EAAAH,EAAAvjB,KAAA2jB,KAAA7b,IAAA,CAAA2b,QAAA3b,EAAAgI,KAAAhI,EAAA,QACA+E,EAAA3N,EAAAF,QAAAwR,MAAA,IAAAtR,EAAAF,QAAAwR,MAAA,IAAA,OAEAgT,EAAAA,EAAAI,OAAAF,GACAH,EAAA1E,iBAAA5D,WAAAuI,EACAD,EAAA1E,iBAAAhS,MAAAA,CACA,CAEA,OAAA0W,CAAA,IAGAtY,EAAAwS,YAaArS,EAAAA,EAAA0K,QAAAyN,GAAA,SAAAA,GAAA,aAAAA,GAAA,UAAAA,QAbA,CAEA,MAAAM,EAAAzY,EAAA0Y,WAAAP,GAAA,gBAAAA,KACA,IAAAM,GACAzY,EAAA2Y,OAAAF,EAAA,GAGA,MAAAG,EAAA5Y,EAAA0Y,WAAAP,GAAA,cAAAA,KACA,IAAAS,GACA5Y,EAAA2Y,OAAAC,EAAA,EAEA,CAKA,OAAA5Y,CACA,EAEAiY,eAAA,SAAAvf,GACA,IAAAmgB,EAAA,CACApjB,KAAAiD,EAAAjD,MAAA,EACAY,MAAAqC,EAAArC,OAAA,GAEAwJ,EAAAjN,KAAAiN,QACAiZ,EAAAjZ,EAAAjF,QACAme,EAAAD,EAAAld,KAAA,kDAAAhH,KAAA,iBACAokB,EAAAF,EAAAld,KAAA,YAEA,IAAAod,EAAAljB,QAGA,KAFAkjB,EAAAF,EAAAld,KAAA,gBAAAqd,SAEAnjB,SACAkjB,EAAAnZ,EAAAqZ,eAAAD,SAIAF,IACAA,EAAA/V,QAAAtK,EAAAygB,SACA,SAAAzgB,EAAA0gB,QACAxmB,KAAAmU,oBAAArO,EAAAiN,QAIA,eAAAjN,EAAA0gB,SAAA,IAAA1gB,EAAA2gB,aAAA3gB,EAAAygB,UAAAvmB,KAAA2gB,QACA7a,EAAA2gB,cACAR,EAAAQ,aAAA,GAGA3gB,EAAA4gB,uBACAT,EAAAS,sBAAA,GAGA1mB,KAAA2mB,aAAAV,IAGAjmB,KAAA4mB,eAAA9gB,EAAAygB,SAEAtZ,EAAA4Z,eAAAT,EACA,EAEAQ,eAAA,SAAAL,GACA,MAAAtZ,EAAAjN,KAAAiN,QACAiZ,EAAAjZ,EAAAjF,QAEAyX,EAAA/e,EAAA,8CACA,IAAAomB,EAAAZ,EAAAld,KAAA,oCACA+d,EAAAb,EAAAld,KAAA,iCAEAyW,EAAAvc,SACA4jB,EAAArH,EAAAzW,KAAA,oCACA+d,EAAAtH,EAAAzW,KAAA,kCAGAiE,EAAAmD,OAAA8V,EAAAld,KAAA,yCAAAge,UAAAT,GACAtZ,EAAAmD,OAAA8V,EAAAld,KAAA,2CAAAge,UAAAT,GAEAtZ,EAAAmD,OAAA8V,EAAAld,KAAA,uCAAAud,GACAtZ,EAAAmD,OAAA0W,GAAAP,GACAtZ,EAAAmD,OAAA2W,GAAAR,EACA,EAEAI,aAAA,SAAA3lB,GACA,MAAAE,EAAAlB,KACA,GAAAgB,EAAAylB,YAAA,CACA,MAEAzkB,EAFA,QAAAd,EAAAuhB,cAEAvhB,EAAA4B,UAAA5B,EAAA4B,SAAAC,MAAA7B,EAAA4B,SAAAC,MAAA,GAAA7B,EAAA6B,OAAA,GAEAkkB,EAAA,IAAA7nB,EAAA4C,KAAAklB,WAAA,CACAllB,KAAAA,GAAA,GACAmlB,SAAA,EACAtkB,KAAA7B,EAAA6B,OAEA3B,EAAAyf,MAAAyG,cAAAH,GACA/lB,EAAAqiB,cACA,KAAA,CACAriB,EAAAyf,MAAA9d,SAEA7B,EAAA6B,OACA7B,EAAA0lB,uBACAxlB,EAAA4hB,uBAAA,GAEA5hB,EAAAyf,MAAA9d,KAAA7B,EAAA6B,MAEA,CACA3B,EAAA8hB,wBACA9hB,EAAAmmB,2BACA,EAEAA,0BAAA,WACA,MACA1G,EADA3gB,KACA2gB,MAEAA,EAAA2G,cAAA,EACA3G,EAAA3Y,QAAA2Z,SAAAtD,GACAsC,EAAA3Y,QAAAuf,SAAAlJ,IACAsC,EAAA3Y,QAAAmc,YAAA9F,EAEA,EAEAlK,oBAAA,SAAAtF,GACA,IAAA2Y,EAAA3Y,IAAA2P,GACA3P,IAAA2P,GACA3P,IAAA2P,GACA3P,IAAA2P,EACA2H,EAAAnmB,KAAAiN,QAAAjF,QAAAgB,KAAA,kDAAAhH,KAAA,iBAEAwlB,IACA3Y,EAAAtG,KAAAkf,MAAA,IAAA5Y,GAAA,KAGAsX,GACAA,EAAAtX,MAAAA,EAEA,EAEAsW,cAAA,SAAAtT,GACA,IAAAjL,EAAAlG,EAAAmR,EAAAjL,QACA0G,EAAA1G,EAAA5E,KAAA,WACAhB,EAAA4F,EAAA5E,KAAA,WAEAsL,GAAAtM,IACA4F,EAAAlG,EAAAmR,EAAA6V,eACApa,EAAA1G,EAAA5E,KAAA,WACAhB,EAAA4F,EAAA5E,KAAA,YAGAhB,EAAAJ,EAAA,CAAA,EAAA,CAAAiO,MAAAjI,EAAA+gB,OAAA3mB,GAEAsM,GAIAtN,KAAA2iB,QAAA,CACArV,QAAAA,EACAtM,QAAAA,GAEA,EAEA4mB,iBAAA,SAAA5mB,GACA,IAAAE,EAAAlB,KAEA,IAAAkB,EAAA2mB,aAAA,CACA7mB,EAAAJ,EAAAI,EAAA,CACAU,SAAAR,EAAAF,QAAAU,WAEA,IAAAomB,EAAA,IAAA1oB,EAAAyE,UAAAoM,QAAA8E,YAAA/T,GACAE,EAAA2mB,aAAAC,EAAA5S,OACA,CACA,OAAAhU,EAAA2mB,YACA,EAEA9I,qBAAA,WACA,IAAA7d,EAAAlB,KAEAkB,EAAA2E,gBACA3E,EAAAwP,qBAAAhQ,EAAA,WACAQ,EAAAwP,qBAAAiR,SAAApD,GAEArd,EAAA2E,cAAAnF,EAAA,sCACAQ,EAAA2E,cAAAoC,KAtwBA,WAswBA,GAEA/G,EAAAwP,qBAAAtG,OAAAlJ,EAAA2E,eACA3E,EAAAke,QAAAhV,OAAAlJ,EAAAwP,sBAEA,EAEAnO,cAAA,SAAAvB,GACA,IAAAwO,EAAAxP,KAAA4nB,mBACAhnB,EAAAI,EAAA,CACAwO,OAAAA,IAEAxP,KAAA6F,eACAxB,EAAArE,KAAA6F,eAAA,GAGA7F,KAAAqG,QAAAwX,EAAA7c,IAKAwO,EAAAK,OAAA7E,QAAAhK,EAAAyB,QACA,EAEAiB,aAAA,WACA,IAEAqkB,EAFA7mB,EAAAlB,KACA8C,EAAA5B,EAAA4B,SAKA,GAFA5B,EAAA6B,MAAA,GAEAD,GAAAA,EAAAW,MAAA,CAKAskB,EAAAjlB,EAAAC,MAEA,IAAA,IAAA+G,EAAA,EAAAA,GAAAhH,EAAAW,MAAAqG,IAAA,CACA,IAAAke,EACAC,EAAA,CACAlkB,UAAA7C,EAAA6C,UACAnB,OAAAkH,GAGAie,GAAAA,EAAA7kB,SACA+kB,EAAArnB,EAAAqnB,EAAAF,EAAAje,EAAA,KAGAke,EAAA,IAAAlgB,EAAAmgB,EAAA/mB,GACAA,EAAA6B,MAAAmlB,KAAAF,GACA9mB,EAAA2E,cAAAuE,OAAA4d,EAAAhgB,QACA,CAEA9G,EAAAinB,aACAjnB,EAAAinB,YAAAC,0BAGAlnB,EAAAmnB,yBACAnnB,EAAAonB,wBACApnB,EAAAylB,aAAA,CAAAF,aAAA,GA1BA,MAFAvlB,EAAAqnB,kBA6BA,EAEAA,iBAAA,WACAvoB,KAAAwiB,WAAA,IAAA5Z,EAAA5I,KAAAgB,QAAA0e,gBAAA1f,MAEAA,KAAA6F,cAAAuE,OAAApK,KAAAwiB,WAAAxa,SAEAhI,KAAAwiB,WAAAhe,cACAxE,KAAAqG,QAAA0X,EAAA,CAAAwI,SAAA,GACA,EAEAiC,iBAAA,WACAxoB,KAAAwiB,aACAxiB,KAAAwiB,WAAA9Z,UACA1I,KAAAwiB,WAAAxa,QAAAmG,SACAnO,KAAAwiB,WAAA,KAEA,EAEAiG,QAAA,WACA,IAEApgB,EAFAnH,EAAAlB,KAIAkB,EAAAmS,eAIAnS,EAAA6B,OAAA7B,EAAA6B,MAAAG,QAQAhC,EAAA+L,SACA/L,EAAA+L,QAAAtJ,QAAA,GAIAzC,EAAA6gB,gBACA2G,aAAAxnB,EAAA6gB,gBAEA7gB,EAAA6gB,eAAA1N,WAAAnT,EAAAynB,aAAA7jB,KAAA5D,GAAA,MAfAA,EAAAshB,aACAna,EATAwb,UASA3iB,EAAAshB,WAAAxa,QAAAG,QACAjH,EAAAshB,WAAA7e,OAAA0E,IAcA,EAEAsgB,aAAA,WACA,MAAAznB,EAAAlB,KACA6jB,EAAA3iB,EAAA2E,cAAA,GAAA2S,YACAoQ,EAAA1nB,EAAA4L,iBAAA+b,mBACA,IAAAxgB,EAAA,EAEAnH,EAAA6B,MAAA+lB,SAAA,SAAAjmB,GACA,MAAAkmB,EAAAlmB,EAAAmF,QAAAnF,EAAAmF,QAAAG,QAAAzH,EAAAkoB,EAAA/lB,EAAAmmB,aAAA7gB,QACA8gB,EAAApF,EAAAkF,EAEAE,EAAA5gB,IACAA,EAAA4gB,EAEA,IAGA/nB,EAAAoS,SACApS,EAAA6R,KAAA7R,EAAAoS,UAAA,IAIAjL,EAAAE,KAAAC,IAAAD,KAAAuQ,IAAAzQ,EAAAnH,EAAAF,QAAAgT,SAAAvT,EAAAqhB,GACAzZ,GAAAnH,EAAAyR,YACAzR,EAAA6R,KAAA1K,GAAA,GACAnH,EAAAyR,UAAAtK,EACAnH,EAAAmS,cAAA,GAGAnS,EAAAyf,OAAAzf,EAAAyf,MAAA3Y,SACA9G,EAAAqiB,eAEA,EAEA8E,uBAAA,WACA,MAAAnnB,EAAAlB,KAEAkB,EAAA2E,cAAA8b,SAAApD,GACArd,EAAAwP,qBAAA5L,KAn6BA,SAm6BA5D,EAAAgoB,QAAApkB,KAAA5D,GACA,EAEAgoB,QAAA,SAAApjB,GACA,IAKAqjB,EALAjoB,EAAAlB,KACAopB,EAAAloB,EAAAwP,qBAAAtI,SACA3E,EAAAvC,EAAA6B,MAAAG,OACAmmB,EAAAnoB,EAAA6N,SACAua,EAAAD,EAAA,EAKA,GAAAnoB,EAAAqoB,iBAAA9lB,EAEA,YADAvC,EAAAqoB,gBAAA,GAIAroB,EAAAsoB,mBAAA,EACA,MAAAC,EAAAhpB,EAAAipB,EAAAxoB,EAAA8G,QAAA,IAIA,GAHA9G,EAAA6B,MAAAumB,GAGAD,KAFAF,EAAAE,EAAAI,EAAAH,IAEAH,GAAA,GAAAA,GAAA1lB,EAAA,CAGA,GAFAvC,EAAA6B,MAAAomB,EAAA,GAAAnhB,QAEA6I,SAAAD,IAAAwY,EACA,OAGAloB,EAAA6N,SAAAoa,EACAjoB,EAAAyoB,oBAEAzoB,EAAAmF,QAAA0X,EAAA,CAAAyI,OAAAxI,EAAAnb,KAAAsmB,EAAA1lB,MAAAA,EAAAijB,sBAAA,GACA,CACA,EAEA3T,KAAA,SAAAP,EAAAoX,GACA,IAAA1oB,EAAAlB,KAEA,IAAAkB,EAAA6F,kBAIA,OAAAyL,EAIAtR,EAAAyhB,QAAA,CACArV,QAAA4Q,EACAld,QAAA,CACA6N,MAAA2D,EACA0B,gBAAA0V,KAPA1oB,EAAAyR,SAUA,EAEAgQ,QAAA,SAAA3hB,GACA,IAAA6oB,EAAAjpB,EAAA,CAAAK,OAAAjB,MAAAgB,EAAAA,SAEA,OADA,IAAA5B,EAAAyE,UAAA7C,EAAAsM,SAAAuc,GACArb,MACA,EAEAwQ,iBAAA,WACA,IAAA9d,EAAAlB,KACA6C,EAAA3B,EAAAF,QAAA6B,KAEAwB,EAAAnD,EAAA2E,eAAA,GACA3E,EAAA6C,UAAAzC,gBAAAwoB,MAAA,SAAAhnB,GACA5B,EAAAsC,cACAtC,EAAA4B,SAAAA,EAEA5B,EAAAwC,eACAxC,EAAAyC,QAAA,GACAb,IACAD,EAAAA,GAAA,GAAAA,GAAAC,EAAAW,MAAAZ,EAAA,EACA3B,EAAA0C,aAAAf,GAAA,IAGA3B,EAAAinB,aACAjnB,EAAAinB,YAAAzf,UAGAxH,EAAAinB,YAAA,IAAA1nB,EAAAspB,EAAA7oB,EAAA2E,cAAA,GAAAmkB,WAAA,CACAlS,OAAA,UACAuH,OAAA,CAAA,IAGAne,EAAAinB,YAAAC,0BAEA/jB,EAAAnD,EAAA2E,eAAA,EACA,GACA,EAEAoZ,mBAAA,SAAAjd,GACA,MAAAd,EAAAlB,KACAgB,EAAAE,EAAAF,QACA6B,EAAA7B,EAAA6B,KACA,IAAAyD,EAGAA,EADAtE,GAGAhB,EAAAse,gBAAAhZ,KAGAA,GAKA,iBAAAA,EACAA,EAAA,CACAzE,IAAAyE,GAEAA,aAAA2jB,cACA3jB,EAAA,CACAtE,KAAAsE,IAIApF,EAAAsnB,mBAEAnkB,EAAAnD,EAAA2E,eAAA,GACA3E,EAAA4L,gBAAA,IAAArM,EAAAypB,EAAAhpB,EAAA8G,QAAA,GAAA,CACAuX,aAAAre,EAAAF,QAAAse,gBAAAC,aACA4K,qBAAA,EACAzX,UAAAxR,EAAAyR,UACAyX,eAAA9jB,EACA+Y,OAAA,CACAgL,UAAAvkB,IACA5E,EAAA4B,SAAAgD,EAAAwkB,OACAppB,EAAA6B,MAAA+C,EAAAykB,SAGA/d,EAAAtL,EAAA4L,gBAAA,GAEA5L,EAAA0C,aAAAf,GAAA,GACA3B,EAAAmF,QAAA0X,GAEA7c,EAAA2R,cAAA,IACA3R,EAAA4L,gBAAA0d,aAAA,CAAAziB,WAAA7G,EAAA2R,eAEA3R,EAAA2R,aAAA,MAGAxO,EAAAnD,EAAA2E,eAAA,EAAA,EAEA4kB,aAAA3kB,IACA5E,EAAA0R,qBACA1R,EAAAmF,QAAAuX,EAAA,CAAA/a,KAAAiD,EAAAjD,KAAA6nB,UAGAxpB,EAAAypB,2BAEAzpB,EAAA0R,qBAAA,CAAA,EAEAgY,UAAA9kB,IACA5E,EAAA2R,aAAA3R,EAAA4L,gBAAAgG,sBAAA,CAAA,EAEA+X,QAAA/kB,IACA5E,EAAAyR,UAAA7M,EAAA4M,UACAxR,EAAAiT,oBAAArO,EAAA4M,WACAxR,EAAAmF,QAAA4X,EAAA,CAAAzL,MAAA1M,EAAA4M,WAAA,EAEAoY,SAAAhlB,IACAzB,EAAAnD,EAAAwP,sBAAA,EAAA,EAEAqa,OAAAjlB,IACAA,EAAAklB,eACA9pB,EAAAmF,QAAA0X,EAAA,CAAAyI,OAAAxI,EAAAnb,KAAAiD,EAAAiC,WAAAtE,MAAAvC,EAAA6B,MAAAG,OAAAwjB,sBAAA,GACA,EAEArkB,MAAAyD,IACA5E,EAAAqB,cAAA,CACAF,MAAAyD,EAAArD,QACAA,QAAAvB,EAAAF,QAAAU,SAAAD,cAAAiB,YACA,EAEAuoB,4BAAA/pB,EAAAgqB,8BAAApmB,KAAA5D,OAxEAA,EAAAqnB,kBA2EA,EAEA4C,eAAA,WACAnrB,KACA8M,gBAAAse,iBAAAhD,yBACA,EAEAiD,gBAAA,WACArrB,KACA8M,gBAAAse,iBAAAE,0BACA,EAEAX,yBAAA,WACA3qB,KAEA6F,cAAAmD,KAAA,WAAAuiB,MAAA,CAAAzhB,EAAA0hB,KACA9qB,EAAA8qB,GAAAvjB,KAAA7I,EAAA6I,KAAA,UAAA6B,EAAA,EAAA,GAEA,EAEA2hB,SAAA,SAAA7oB,GACA,MAAA1B,EAAAlB,KACA6C,EAAA3B,EAAA6B,OAAA7B,EAAA6B,MAAAH,EAAA,GAEA,GAAAC,EAIA,OAAA3B,EAAA6F,kBACAlE,EAAA0G,KAAArI,EAAAyR,WAGA+Y,QAAAxpB,SACA,EAEA0B,aAAA,SAAAhB,EAAA6jB,GACA,MAAAvlB,EAAAlB,KACAkB,EAAA6B,OAAA7B,EAAA6B,MAAAH,EAAA,KAMA1B,EAAA6N,SAAAnM,EAEA1B,EAAA6F,mBACA7F,EAAAyoB,oBACAzoB,EAAAyqB,uBAAA/oB,EAAA6jB,KAEAvlB,EAAA4L,gBAAA8e,mBAAAhpB,GACA1B,EAAAmF,QAAA0X,EAAA,CAAAyI,OAAAxI,EAAAnb,KAAAD,EAAAa,MAAAvC,EAAA6B,MAAAG,OAAAujB,YAAAA,KAEA,EAEAkF,uBAAA,SAAA/oB,EAAA6jB,GACA,MAAAvlB,EAAAlB,KACA6F,EAAA3E,EAAAwP,qBAEAxP,EAAAqoB,gBAAA,EACA9oB,EAAAorB,EAAAhmB,EAAA,GAAAjD,EAAA,GACA1B,EAAAmF,QAAA0X,EAAA,CAAAyI,OAAAxI,EAAAnb,KAAAD,EAAAa,MAAAvC,EAAA6B,MAAAG,OAAAujB,YAAAA,GACA,EAEA6B,sBAAA,WAOA,IANA,IAAApnB,EAAAlB,KACA8rB,EAAA,EACAC,EAAA,EACA3C,EAAAloB,EAAA2E,cAAA,GAAAmmB,aACAjJ,EAAA,EAEA+I,GAAA1C,GAAArG,EAAA7hB,EAAA6B,MAAAG,QAEA4oB,GAAA5qB,EAAA6B,MAAAggB,GAAA/a,QAAAI,SACA2jB,IACAhJ,IAGA7hB,EAAA+qB,mBAAAF,CACA,EAEApC,kBAAA,WACA,IAAA/Z,EAAA5P,KAAA+C,OAAA/C,KAAA+C,MAAAG,OACAgpB,EAAA3jB,KAAAuQ,IAAA9Y,KAAA+O,SAAA/O,KAAAisB,mBAAA,GACAE,EAAA5jB,KAAAC,IAAAxI,KAAA+O,SAAA/O,KAAAisB,mBAAArc,GAEA5P,KAAAosB,cAAApsB,KAAA+C,MAAAspB,MAAAH,EAAA,EAAAC,GAEA,IAAA,IAAAriB,EAAAoiB,EAAApiB,GAAAqiB,EAAAriB,IAEA9J,KAAAyrB,SAAA3hB,EAEA,EAEAwiB,cAAA,WACA,MAAA1c,EAAA5P,KAAA+C,OAAA/C,KAAA+C,MAAAG,OACAqpB,EAAA,GAEA,IAAA,IAAAziB,EAAA,EAAAA,GAAA8F,EAAA9F,IAEAyiB,EAAArE,KAAAloB,KAAAyrB,SAAA3hB,IAGA,OAAAyiB,CACA,EAEAvlB,SAAA,SAAAV,GACA,MAAApF,EAAAlB,KACA,GAAAkB,EAAA6F,kBACA7F,EAAAyR,UAAAzR,EAAAF,QAAAwR,OAAA/R,EAAAqhB,EACA5gB,EAAA6R,KAAA7R,EAAAyR,WAAA,GACAzR,EAAAmF,QAAA0X,EAAA,CAAAyI,OAAA,OAAAzT,KAAA7R,EAAAF,QAAAwR,OAAA,SAEAtR,EAAA6C,UAAAyoB,gBAAAlmB,GACApF,EAAA8d,wBAEA,GAAA9d,EAAA4L,gBAAA,CACA5L,EAAA6L,oBAAArE,UACA+D,EAAAvL,EAAA4L,iBACA5L,EAAA+L,QAAAgB,OAAA,yBAAA,GACA/M,EAAA+L,QAAAgB,OAAA,8BAAA,GACA/M,EAAA+L,QAAAgB,OAAA,4BAAA,GAEA,MAAAnH,EAAApG,EAAAsF,cAAAM,GAAAA,EAAA,CAAAzE,IAAAyE,GAEApF,EAAA4L,gBAAA2f,SAAA3lB,EACA,MACA5F,EAAA+d,mBAAA3Y,EAGA,EAEAyJ,YAAA,SAAA/O,GACA,IAAAE,EAAAlB,KACA+H,EAAA/G,EAAA6B,KACAA,EAAA3B,EAAA6B,MAAAgF,EAAA,IAAA7G,EAAAshB,WACAkK,EAAA,IAAArlB,EAAAC,MAEAzE,EAAA0G,OAEA,IAAAojB,EAAAvtB,EAAAiI,QAAAI,KAAAmlB,SAAA,IAAAxtB,EAAA2K,SAAApC,KAAA,CAAA,EAAA,GAAA,CAAA9E,EAAAsF,MAAAtF,EAAAuF,SAAA,CACAqC,KAAA,CACAqR,MA3tCA,WA6tCAnR,OAAA,OAGAtG,EAAAnD,EAAA2E,eAAA,GACA6mB,EAAAtiB,OAAAuiB,EAAA9pB,EAAAuG,OAEA/B,EAAA0I,YAAA2c,GAAA5C,MAAA,SAAA9nB,GACAqC,EAAAnD,EAAA2E,eAAA,GACAzG,EAAAytB,OAAA,CACAC,QAAA9qB,EACAoB,SAAApC,EAAAoC,SACA2pB,SAAA/rB,EAAA+rB,UAAA,GACAC,WAAAhsB,EAAAgsB,WACAC,YAAAjsB,EAAAisB,aAEA,GACA,EAEAjd,UAAA,SAAAhP,GACA,IAAAE,EAAAlB,KACA+H,EAAA/G,EAAA6B,KACAA,EAAA3B,EAAA6B,MAAAgF,EAAA,IAAA7G,EAAAshB,WAEAne,EAAAnD,EAAA2E,eAAA,GAEAhD,EAAA0G,OAEAlC,EAAA2I,UAAAnN,EAAAuG,OAAA0gB,MAAA,SAAA9nB,GACAqC,EAAAnD,EAAA2E,eAAA,GACAzG,EAAAytB,OAAA,CACAC,QAAA9qB,EACAoB,SAAApC,EAAAoC,SACA2pB,SAAA/rB,EAAA+rB,UAAA,GACAC,WAAAhsB,EAAAgsB,WACAC,YAAAjsB,EAAAisB,aAEA,GACA,EAEAC,WAAA,SAAAlsB,GAEA,IAAAE,EAAAlB,MAEAgB,EAAAse,iBAAAte,EAAAwe,gBACAte,EAAA4d,eAAA9d,GAAA,CAAA,GAGAA,EAAAN,EAAAE,OAAAM,EAAAF,QAAAA,GAEA2c,EAAArP,GAAA4e,WAAA3e,KAAArN,EAAAF,GAEAA,EAAA6B,OACA3B,EAAA6N,SAAA/N,EAAA6B,KACA3B,EAAA0C,aAAA5C,EAAA6B,MAAA,IAGA7B,EAAAmH,OACAjH,EAAA8G,QAAAG,MAAAnH,EAAAmH,OAGAnH,EAAAoH,QACAlH,EAAA8G,QAAAI,OAAApH,EAAAoH,OAEA,EAEAM,QAAA,WAEA1I,KAAA+hB,gBAEA3iB,EAAA+tB,aAAAntB,KAAA+hB,gBAIA/hB,KAAA6nB,cACA7nB,KAAA6nB,aAAAnf,UAGA1I,KAAAyP,aACAzP,KAAAyP,YAAA/G,UAGA1I,KAAA+I,SACA/I,KAAA+I,QAAAL,UAGA1I,KAAA2gB,OACA3gB,KAAA2gB,MAAAjY,UAGA1I,KAAAiN,UACAjN,KAAAiN,QAAAiB,SACAlO,KAAAiN,QAAAvE,UACA1I,KAAAiN,QAAA,MAGAjN,KAAA+C,OAAA/C,KAAA+C,MAAAG,QAAAlD,KAAA+G,oBACA/G,KAAA+C,MAAA+lB,SAAA,SAAAjmB,GACAA,EAAA6F,SACA,IACA1I,KAAA+C,MAAA,IAGA/C,KAAAmoB,aACAnoB,KAAAmoB,YAAAzf,UAEA1I,KAAA6F,cAAAunB,IAAA9P,GACAtd,KAAA0Q,qBAAA0c,IAAA9P,GAEAK,EAAArP,GAAA5F,QAAA6F,KAAAvO,KACA,EAEAwD,YAAA,WACAxD,KAAA+C,MAAA,GACA/C,KAAA8C,SAAA,KACA9C,KAAA+O,SAAA,EAEA/O,KAAA6F,cAAAunB,IAAA9P,GACAtd,KAAA6F,cAAAwnB,QAEArtB,KAAAmoB,aAEAnoB,KAAAmoB,YAAAzf,SAEA,EAEAwiB,8BAAA,SAAAplB,GACA,MAAA5E,EAAAlB,KACA4B,EAAAkE,EAAAwnB,qBACAzT,EAAA/T,EAAA+T,OACAM,EAAAjZ,EAAAqsB,iBAAApT,MACAL,EAAAhU,EAAA0nB,OAAAC,oBAGA,IAAAtT,IAAAA,EAAAuT,WAAAvT,EAAAwT,UAAA,aAAA/rB,EAUA,OANAV,EAAAqsB,kBACArsB,EAAAqsB,gBAAA7kB,UACAxH,EAAAqsB,gBAAApS,gBACAja,EAAAqsB,gBAAA,MAGA3rB,GACA,IAAA,YACAV,EAAAqsB,gBAAA,IAAAlS,EAAAna,EAAA2Y,EAAAC,GACA,MACA,IAAA,WACA5Y,EAAAqsB,gBAAA,IAAAtR,EAAA/a,EAAA2Y,EAAAC,GAGA,IAGAxV,EAAAspB,OAAAnP,EACA,CA94CA,CA84CA9d,OAAAvB,MAAA4E,QACA,IAAA6pB,EAAAzuB,MAEAP,EAAAivB,SAz5CA,CACA5S,GAAA,YACA7N,KAAA,YACA0gB,SAAA,MACAxY,YAAA,2CACAyY,QAAA,CAAA,OAAA,SAAA,SAAA,UAAA,cAAA,SAAA,WAAA,UAAA,SAAA,eAAA,iBAAA,UAAA,QAAA,OAAA,cAAA,+BAq5CAnvB,EAAAovB,QAAAJ,EAEA9hB,OAAAmiB,eAAArvB,EAAA,aAAA,CAAAgQ,OAAA,GAEA","file":"kendo.pdfviewer.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.mobile.scroller.js'), require('kendo.toolbar.js'), require('kendo.pager.js'), require('kendo.combobox.js'), require('kendo.textbox.js'), require('kendo.core.js'), require('kendo.drawing.js'), require('kendo.upload.js'), require('kendo.pdfviewer-common.cmn.chunk.js'), require('kendo.dialog.js'), require('kendo.window.js'), require('kendo.binder.js'), require('kendo.numerictextbox.js'), require('kendo.dropdownlist.js'), require('kendo.icons.js'), require('kendo.draganddrop.js'), require('kendo.pdfjs.loader.js'), require('kendo.form.js'), require('kendo.colorpicker.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.mobile.scroller', 'kendo.toolbar', 'kendo.pager', 'kendo.combobox', 'kendo.textbox', 'kendo.core', 'kendo.drawing', 'kendo.upload', 'kendo.pdfviewer-common.cmn.chunk', 'kendo.dialog', 'kendo.window', 'kendo.binder', 'kendo.numerictextbox', 'kendo.dropdownlist', 'kendo.icons', 'kendo.draganddrop', 'kendo.pdfjs.loader', 'kendo.form', 'kendo.colorpicker'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Pdfviewer = {}), global.kendo._globals.MobileScroller, global.kendo._globals.Toolbar, global.kendo._globals.Pager, global.kendo._globals.Combobox, global.kendo._globals.Textbox, global.kendo._globals.Core, global.kendo._globals.Drawing, global.kendo._globals.Upload, global.kendo._globals.PdfviewerCommonCmnChunk));\n})(this, (function (exports, kendo_mobile_scroller_js, kendo_toolbar_js, kendo_pager_js, kendo_combobox_js, kendo_textbox_js, kendo_core_js, kendo_drawing_js, kendo_upload_js, kendo_pdfviewerCommon_cmn_chunk_js) {\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            Class = kendo.Class;\n\n        var DPLProcessor = Class.extend({\n            init: function(options, viewer) {\n                var that = this;\n\n                that.options = options;\n                that.read = options.read;\n                that.upload = options.upload;\n                that.download = options.download;\n\n                that.viewer = viewer;\n            },\n            fetchDocument: function() {\n                var that = this,\n                    deferred = $.Deferred(),\n                    errorMessages = that.viewer.options.messages.errorMessages;\n\n                if (!that.read) {\n                    return deferred.resolve();\n                }\n\n                $.ajax({\n                    type: that.read.type,\n                    url: that.read.url,\n                    dataType: that.read.dataType,\n                    success: function(data) {\n                        if (typeof data != \"string\") {\n                            data = kendo.stringify(data);\n                        }\n                        deferred.resolve(JSON.parse(data));\n                    },\n                    error: function(xhr) {\n                        that.viewer._triggerError({\n                            error: xhr.responseText,\n                            message: errorMessages.parseError\n                        });\n                    }\n                });\n\n                return deferred;\n            },\n            fetchPageData: function(number) {\n                var that = this;\n                var deferred = $.Deferred();\n                var page = that.viewer.document.pages[number - 1];\n                var data = {};\n                data[that.read.pageField] = number;\n\n                if (!page.geometries.length) {\n                    $.ajax({\n                        type: that.read.type,\n                        url: that.read.url,\n                        data: data,\n                        success: function(data) {\n                            deferred.resolve(JSON.parse(data));\n                        },\n                        error: function(xhr) {\n                            that.viewer._triggerError({\n                                error: xhr.responseText,\n                                message: that.viewer.options.messages.errorMessages.parseError\n                            });\n                        }\n                    });\n                } else {\n                    deferred.resolve(page);\n                }\n\n                return deferred;\n            },\n            downloadFile: function(fileName) {\n                window.location = this.download.url + \"?file=\" + fileName;\n            },\n\n            fromJSON: function(json)\n            {\n                var viewer = this.viewer;\n                viewer._clearPages();\n\n                viewer.document = json;\n                viewer.document.total = viewer.document.pages.length;\n\n                viewer._renderPages();\n                viewer.resize(true);\n\n                viewer.activatePage(1);\n            }\n        });\n\n        extend(kendo, {\n            pdfviewer: {\n                dpl: {\n                    processor: DPLProcessor\n                }\n            }\n        });\n    })(window.kendo.jQuery);\n\n    /* eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n\n    function isLoaded() {\n        if (!window.pdfjsLib) {\n            console?.error(`PDF.JS library is required. Make sure that it is properly loaded <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.6.82/pdf.mjs\" type=\"module\"></script>`);\n            return false;\n        }\n\n        if (!window.pdfjsLib?.GlobalWorkerOptions?.workerSrc && !window.pdfjsWorker) {\n            console?.error(`The pdf.worker.mjs script is not loaded. The PDF.JS library will not work correctly.\n    Either load the script:\n    \n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.6.82/pdf.worker.mjs\" type=\"module\"></script>\n    \n    Or set it to the GlobalWorkerOptions.workerSrc property:\n    \n    <script type=\"module\">\n        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.6.82/pdf.worker.mjs';\n    </script>`);\n        return false;\n        }\n\n        return true;\n    }\n\n    kendo.pdfviewer.pdfjs = { lib: window.pdfjsLib };\n\n    (function($, undefined$1) {\n        var Class = kendo.Class,\n            extend = $.extend,\n            parseJSON = JSON.parse,\n            progress = kendo.ui.progress,\n            Class = kendo.Class,\n            OPEN = \"open\";\n\n        var UploadHelper = Class.extend({\n            init: function(viewer) {\n                this.viewer = viewer;\n                this.errorMessages = this.viewer.options.messages.errorMessages;\n                this.upload = this.viewer.processor && this.viewer.processor.upload;\n            },\n            _initUpload: function(uploadElement, extendUploadOptions) {\n                var uploadOptions = extend({\n                    select: this._onSelect.bind(this),\n                    success: this._onSuccess.bind(this),\n                    error: this._onError.bind(this),\n                    complete: this._onComplete.bind(this),\n                    showFileList: false,\n                    multiple: false,\n                    validation: {\n                        allowedExtensions: [\".pdf\"]\n                    }\n                }, extendUploadOptions || {});\n\n                if (this.upload) {\n                    extend(uploadOptions, {\n                        async: {\n                            saveUrl: this.upload.url,\n                            autoUpload: true,\n                            saveField: this.upload.saveField\n                        }\n                    });\n                }\n\n                var upload = (uploadElement || $('<input name=\"files\" accept=\".pdf\" type=\"file\" />')).kendoUpload(uploadOptions).getKendoUpload();\n\n                return upload;\n            },\n            _onComplete: function() {\n                progress(this.viewer.pageContainer, false);\n            },\n            _onSuccess: function(e) {\n                var json = parseJSON(e.response);\n\n                if ($.isPlainObject(json)) {\n                    this.viewer.processor.fromJSON(json);\n                }\n                else {\n                    this.viewer._triggerError({\n                        error: json,\n                        message: this.errorMessages.parseError\n                    });\n                }\n            },\n            _onError: function(e) {\n                this.viewer._triggerError({\n                    error: e.XMLHttpRequest.responseText,\n                    message: this.errorMessages.notSupported\n                });\n            },\n            _onSelect: function(e) {\n                var that = this;\n                var fileToUpload = e.files[0];\n\n                progress(that.viewer.pageContainer, true);\n\n                if (that.viewer.trigger(OPEN, { file: fileToUpload }) || that.upload) {\n                    return;\n                } else if (fileToUpload.extension.toLowerCase() !== \".pdf\") {\n                    that.viewer._triggerError({\n                        error: fileToUpload,\n                        message: that.errorMessages.notSupported\n                    });\n                    return;\n                }\n\n                var reader = new FileReader();\n                reader.onload = function(e) {\n                    var document = e.target.result;\n                    const loadParams = that.viewer._isDPLProcessor() ? document : { data: document };\n                    that.viewer.fromFile(loadParams);\n                };\n                reader.onerror = function() {\n                    that.viewer._triggerError({\n                        error: fileToUpload,\n                        message: that.errorMessages.parseError\n                    });\n                };\n\n                reader.readAsArrayBuffer(fileToUpload.rawFile);\n            }\n        });\n\n        extend(kendo.pdfviewer, {\n            UploadHelper: UploadHelper\n        });\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var extend = $.extend,\n            noop = $.noop,\n            drawing = kendo.drawing,\n            Group = drawing.Group,\n            Surface = drawing.Surface,\n            RENDER = \"render\",\n            Class = kendo.Class,\n            UploadHelper = kendo.pdfviewer.UploadHelper,\n\n            DEFAULT_DPR = 2;\n\n        var geometryTypes = {\n            Path: \"path\",\n            MultiPath: \"multipath\",\n            Rect: \"rect\",\n            Image: \"image\",\n            Text: \"text\"\n        };\n\n        var BLANK_PAGE_TEMPLATE = (dropzoneId) => `<div class=\"k-page k-blank-page\">\n        <div id=\"${dropzoneId}\" class=\"k-external-dropzone\">\n            <div class=\"k-dropzone-inner\">\n                <span class=\"k-dropzone-icon k-icon k-svg-icon k-icon-xxxl k-svg-i-upload\">\n                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                        <path d=\"M32 384v96h448v-96H32zm192-64h64V192h96L256 32 128 192h96v128z\"></path>\n                    </svg>\n                </span>\n                <span class=\"k-dropzone-hint\">Drag and drop files here to upload</span>\n            </div>\n        </div>\n        <input name=\"files\" accept=\".pdf\" type=\"file\" ref-pdfviewer-blank-page-upload>\n    </div>`;\n\n        var Page = Class.extend({\n            init: function(options, viewer) {\n                this.viewer = viewer;\n                this.processor = options.processor;\n                this.options = options;\n                this.pageNumber = options.number;\n\n                this.element = $(\"<div class='k-page' />\");\n                this.element.attr(kendo.attr(\"number\"), this.pageNumber);\n\n                this._updatePageSize(options);\n                this.width = options.width;\n                this.height = options.height;\n            },\n            resize: function(ratio) {\n                var pageElement = this.element;\n\n                this._updatePageSize({\n                    width: Math.min(pageElement.width() * ratio, this.width),\n                    height: Math.min(pageElement.height() * ratio, this.height)\n                });\n            },\n            _updatePageSize: function(size) {\n                this.element\n                        .width(size.width)\n                        .height(size.height);\n            },\n            destroy: function() {\n                kendo.destroy(this.element);\n            },\n            render: noop\n        });\n\n        var BlankPage = Page.extend({\n            init: function(options, viewer) {\n                this.viewer = viewer;\n                this.options = options;\n                this._externalDropZoneId = `${viewer.element.attr(\"id\")}-external-dropzone`;\n                this.element = $(BLANK_PAGE_TEMPLATE(this._externalDropZoneId));\n                this._uploadHelper = new UploadHelper(viewer);\n            },\n            _initUpload: function() {\n                this._upload = this._uploadHelper._initUpload(this.element.find(\"input[ref-pdfviewer-blank-page-upload]\"), {\n                    dropZone: `#${this._externalDropZoneId}`,\n                    showFileList: false,\n                    async: {\n                        autoUpload: false,\n                        saveUrl: \"save\"\n                    }\n                });\n            },\n            resize: noop,\n            _updatePageSize: noop,\n            destroy: function() {\n                if (this._upload) {\n                    this._upload.destroy();\n                }\n\n                kendo.destroy(this.element);\n            },\n            render: noop\n        });\n\n        var DPLPage = Page.extend({\n            draw: function() {\n                var that = this,\n                    geometries = that.options.geometries;\n\n                that.group = new Group();\n                that.surface.draw(that.group);\n\n                that._drawGeometries(geometries);\n\n                that.viewer.trigger(RENDER, { page: this });\n                kendo.ui.progress(that.element, false);\n            },\n            load: function() {\n                var that = this;\n\n                if (that.loaded || !that.processor)\n                {\n                    return;\n                }\n\n                that.processor.fetchPageData(that.pageNumber).then(function(data) {\n                    that.options = data;\n                    that._initSurface();\n                    that.draw();\n                });\n\n                that.loaded = true;\n            },\n            _initSurface: function() {\n                var size = {\n                    width: this.element.width(),\n                    height: this.element.height()\n                };\n                var surfaceOptions = extend({ width: this.width, height: this.height }, this.viewer.options.view);\n                this.surface = new Surface(this.element, surfaceOptions);\n                this._updatePageSize(size);\n            },\n            _drawGeometries: function(geometries) {\n                var that = this,\n                    kGeometry;\n\n                if (!geometries) {\n                    return;\n                }\n\n                for (var i = 0; i <= geometries.length; i++) {\n                    var geometry = geometries[i];\n\n                    if (!geometry) {\n                        continue;\n                    }\n\n                    switch (geometry.type) {\n                        case geometryTypes.Path:\n                        case geometryTypes.MultiPath:\n                            kGeometry = that._drawPath(geometry);\n                            break;\n                        case geometryTypes.Rect:\n                            kGeometry = that._drawRect(geometry);\n                            break;\n                        case geometryTypes.Image:\n                            kGeometry = that._drawImage(geometry);\n                            break;\n                        case geometryTypes.Text:\n                            kGeometry = that._drawText(geometry);\n                            break;\n                        default:\n                            kGeometry = null;\n                            break;\n                    }\n\n                    if (kGeometry)\n                    {\n                        that.group.append(kGeometry);\n                    }\n                }\n            },\n            _drawRect: function(geometry)\n            {\n                var rectGeo = new kendo.geometry.Rect(geometry.point, geometry.size);\n\n                return new drawing.Rect(rectGeo, {\n                    transform: this._getMatrix(geometry.transform),\n                    fill: geometry.fillOptions,\n                    stroke: geometry.strokeOptions\n                });\n            },\n\n            _drawImage: function(geometry)\n            {\n                var imageRect = new kendo.geometry.Rect(geometry.point, geometry.size);\n                return new drawing.Image(geometry.src, imageRect, {\n                    transform: this._getMatrix(geometry.transform)\n                });\n            },\n\n            _drawText: function(geometry)\n            {\n                var options = {\n                    transform: this._getMatrix(geometry.transform),\n                    stroke: geometry.strokeOptions,\n                    fill: geometry.fillOptions,\n                    font: geometry.font\n                };\n                return new kendo.drawing.Text(geometry.content, geometry.point, options);\n            },\n\n            _drawPath: function(geometry)\n            {\n                var options = {\n                    transform: this._getMatrix(geometry.transform),\n                    stroke: geometry.strokeOptions,\n                    fill: geometry.fillOptions\n                };\n                var path = new drawing.MultiPath(options);\n\n                for (var i = 0; i < geometry.paths.length; i++) {\n                    var subPath = geometry.paths[i];\n\n                    if (!subPath.segments)\n                    {\n                        return;\n                    }\n\n                    path.moveTo.apply(path, subPath.point);\n\n                    for (var j = 0; j < subPath.segments.length; j++) {\n                        var segment = subPath.segments[j];\n                        var drawAction = segment.points.length === 1 ? path.lineTo : path.curveTo;\n                        drawAction.apply(path, segment.points);\n                    }\n\n                    if (subPath.closed) {\n                        path.close();\n                    }\n                }\n\n                return path;\n            },\n\n            _getMatrix: function(transform) {\n                var matrix = Object.create(kendo.geometry.Matrix.prototype);\n                kendo.geometry.Matrix.apply(matrix, transform);\n                return matrix;\n            }\n        });\n\n        extend(kendo.pdfviewer.dpl, {\n            geometryTypes: geometryTypes,\n            Page: DPLPage\n        });\n        extend(kendo.pdfviewer, {\n            BlankPage: BlankPage\n        });\n    })(window.kendo.jQuery);\n\n    const deleteAnnotation = (widget) => {\n        widget.deleteAnnotation();\n    };\n\n    const setHighlightTextColor = (widget, color) => {\n        widget.setHighlightColor(color);\n    };\n\n    const setFreeTextFontColor = (widget, color) => {\n        widget.setFreeTextColor(color);\n    };\n\n    const setFreeTextFontSize = (widget, fontSize) => {\n        widget.setFreeTextFontSize(fontSize);\n    };\n\n    const setAnnotationEditorMode = (widget, args) => {\n        if (widget.interactionMode !== args.mode) {\n            widget.setInteractionMode({\n                mode: args.mode\n            });\n        }\n\n        widget.setAnnotationEditorMode(args);\n    };\n\n    const resetAnnotationEditorMode = (widget) => {\n        widget.resetAnnotationEditorMode();\n    };\n\n    const setInteractionMode = (widget, mode) => {\n        widget.setInteractionMode({ mode: mode });\n    };\n\n    const $$1 = jQuery;\n    const AnnotationEditorType = {\n        DISABLE: -1,\n        NONE: 0,\n        FREETEXT: 3,\n        HIGHLIGHT: 9\n    };\n\n    class AnnotationToolbar {\n        constructor(viewer) {\n            this.viewer = viewer;\n            this.widget = viewer.pdfViewerCommon;\n            this.init();\n        }\n\n        init() {\n            const annotationsToolbar = this.element = $$1(\"<div></div>\");\n\n            annotationsToolbar.insertAfter(this.viewer.toolbar.element);\n            const toolbar = this.toolbar = new kendo.ui.ToolBar(annotationsToolbar, {\n                fillMode: 'flat',\n                tools: [\n                    { name: \"highlight\", command: \"highlight\", icon: \"highlight\", type: \"button\", togglable: true, showText: \"overflow\", group: \"annotations\", fillMode: \"flat\" },\n                    { type: \"separator\" },\n                    { name: \"freeText\", command: \"freeText\", icon: \"free-text\", type: \"button\", togglable: true, showText: \"overflow\", group: \"annotations\", fillMode: \"flat\" },\n                    { type: \"spacer\" },\n                    { name: \"close\", command: \"close\", icon: \"x\", type: \"button\", showText: \"overflow\", fillMode: \"flat\" }\n                ],\n                parentMessages: {\n                    highlight: \"Highlight\",\n                    freeText: \"Free text\",\n                    close: \"Close\"\n                }\n            });\n\n            toolbar.bind(\"click\", this.onToolbarClick.bind(this));\n            toolbar.bind(\"toggle\", this.onToolbarClick.bind(this));\n        }\n\n        onToolbarClick(e) {\n            const widget = this.widget;\n            const target = $$1(e.target);\n            const command = target.data(\"command\");\n            const viewerToolbar = this.viewer.toolbar;\n\n            switch (command) {\n                case \"close\":\n                    this.destroy();\n                    viewerToolbar.element.find(\"[tabindex=0]\").trigger(\"focus\");\n                    break;\n                case \"highlight\":\n                    setAnnotationEditorMode(widget, { interactionMode: kendo_pdfviewerCommon_cmn_chunk_js.P.TextSelection, mode: AnnotationEditorType.HIGHLIGHT });\n                    break;\n                case \"freeText\":\n                    setAnnotationEditorMode(widget, { interactionMode: kendo_pdfviewerCommon_cmn_chunk_js.P.TextSelection, mode: AnnotationEditorType.FREETEXT });\n                    break;\n            }\n        }\n\n        destroy() {\n            if (this.toolbar) {\n                this.viewer.toolbar.toggle(\"[title='Annotations']\", false);\n                this.toolbar.unbind(\"click\");\n                this.toolbar.unbind(\"toggle\");\n                this.toolbar.destroy();\n                this.toolbar = null;\n                this.element.remove();\n                this.element = null;\n                this.viewer.annotationsToolbar = null;\n                resetAnnotationEditorMode(this.widget);\n            }\n        }\n    }\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            progress = kendo.ui.progress,\n            Class = kendo.Class,\n            UploadHelper = kendo.pdfviewer.UploadHelper,\n            ZOOMSTART = \"zoomStart\",\n            ZOOMEND = \"zoomEnd\";\n\n        var Command = Class.extend({\n            init: function(options) {\n                this.options = options;\n                this.viewer = options.viewer;\n                this.errorMessages = this.viewer.options.messages.errorMessages;\n            }\n        });\n\n        var OpenCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n                this._uploadHelper = new UploadHelper(this.viewer);\n            },\n            exec: function() {\n                this.viewer._upload = this.viewer._upload || this._uploadHelper._initUpload();\n                this.viewer._upload.element.click();\n            },\n        });\n\n        var PageChangeCommand = Command.extend({\n            exec: function() {\n                var targetPage = this.options.value,\n                    viewer = this.viewer,\n                    current, total;\n\n                if (isNaN(targetPage)) {\n                    current = viewer._pageNum;\n                    total = viewer.document.total || viewer.document.numPages;\n\n                    switch (targetPage) {\n                        case \"first\": targetPage = 1;\n                            break;\n                        case \"prev\": targetPage = current > 1 ? current - 1 : 1;\n                            break;\n                        case \"next\": targetPage = current < total ? current + 1 : total;\n                            break;\n                        case \"last\": targetPage = total;\n                            break;\n                    }\n                } else {\n                    targetPage = Number(targetPage);\n                }\n\n                viewer.activatePage(targetPage, false);\n            }\n        });\n\n        var DownloadCommand = Command.extend({\n            exec: function() {\n                const that = this;\n                if (!that.viewer.document) {\n                    that.viewer._triggerError({\n                        message: that.errorMessages.notFound\n                    });\n                    return;\n                }\n\n                const fileName = (that.viewer.document.info && that.viewer.document.info.title) ||\n                that.viewer.options.messages.defaultFileName;\n\n                if (that.viewer._isDPLProcessor()) {\n                    that.viewer.processor.downloadFile(fileName);\n                } else {\n                    that.viewer.pdfViewerCommon.downloadFile(fileName);\n                }\n            }\n        });\n\n        var ExportCommand = Command.extend({\n            init: function(options) {\n                options = $.extend(options, this.options);\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var dialog = (this.viewer._saveDialog || this._initDialog());\n\n                dialog._updateModel({\n                    pagesCount: (this.viewer.document && this.viewer.document.total) || 1,\n                    page: this.viewer.options.page\n                });\n\n                dialog.open();\n            },\n            apply: function(viewModel) {\n                var extension = viewModel.extension;\n\n                if (extension === \".png\") {\n                    this.viewer.exportImage(viewModel);\n                } else if (extension === \".svg\") {\n                    this.viewer.exportSVG(viewModel);\n                }\n            },\n            _initDialog: function() {\n                this.viewer._saveDialog = new kendo.pdfviewer.dialogs.ExportAsDialog({\n                    apply: this.apply.bind(this),\n                    pagesCount: (this.viewer.document && this.viewer.document.total) || 1,\n                    messages: this.viewer.options.messages\n                });\n                return this.viewer._saveDialog;\n            }\n        });\n\n        var EnableSelectionCommand = Command.extend({\n            exec: function() {\n                const that = this,\n                    viewer = that.viewer;\n\n                viewer.toolbar.enable(viewer.toolbar.element.find(\"[data-command=AnnotationsCommand]\"), true);\n                setInteractionMode(viewer.pdfViewerCommon, kendo_pdfviewerCommon_cmn_chunk_js.P.TextSelection);\n            }\n        });\n\n        var EnablePanCommand = Command.extend({\n            exec: function() {\n                const that = this,\n                    viewer = that.viewer;\n\n                viewer.toolbar.enable(viewer.toolbar.element.find(\"[data-command=AnnotationsCommand]\"), false);\n                if (viewer.annotationsToolbar) {\n                    viewer.annotationsToolbar.destroy();\n                }\n                resetAnnotationEditorMode(viewer.pdfViewerCommon);\n                setInteractionMode(viewer.pdfViewerCommon, kendo_pdfviewerCommon_cmn_chunk_js.P.Pan);\n            }\n        });\n\n        const OpenSearchCommand = Command.extend({\n            init: function(options) {\n                const that = this;\n\n                that.viewer = options.viewer;\n\n                if (!that.viewer.searchDialog) {\n                    that.viewer.searchDialog = new kendo.pdfviewer.dialogs.SearchDialog({\n                        pageContainer: that.viewer.pageContainerWrapper,\n                        position: {\n                            top: that.viewer.pageContainer.offset().top,\n                            left: that.viewer.pageContainer.offset().left\n                        },\n                        messages: that.viewer.options.messages.dialogs.search,\n                        open: that._open.bind(that),\n                        next: that._next.bind(that),\n                        prev: that._prev.bind(that),\n                        close: that._close.bind(that)\n                    });\n                }\n\n                Command.fn.init.call(that, options);\n            },\n            exec: function() {\n                const that = this;\n\n                that.viewer.searchDialog.open();\n            },\n            _open: function() {\n                const that = this;\n\n                that.changeHandler = that._change.bind(that);\n                that.viewer.searchDialog.searchModel.bind(\"change\", that.changeHandler);\n            },\n            _close: function() {\n                const that = this;\n                that.viewer.pdfViewerCommon.clearSearch();\n                that.viewer.toolbar.element.find(\"[tabindex=0]\").trigger(\"focus\");\n                that.viewer.searchDialog.searchModel.unbind(\"change\", that.changeHandler);\n                that.matches = [];\n                that.matchIndex = null;\n                that._updateSearchModel();\n            },\n            _change: function(ev) {\n                const that = this,\n                    text = that.viewer.searchDialog.searchModel[\"searchText\"],\n                    matchCase = that.viewer.searchDialog.searchModel[\"matchCase\"];\n\n                if (ev.field === \"searchText\" || ev.field === \"matchCase\") {\n                    that.matches = that.viewer.pdfViewerCommon.searchText({ text: text, matchCase: matchCase });\n                    that.matchIndex = that.matches.length ? 1 : 0;\n                    that._updateSearchModel();\n                }\n            },\n            _next: function() {\n                const that = this;\n\n                that.viewer.pdfViewerCommon.goToNextSearchMatch();\n                that.matchIndex = that.matchIndex + 1 > that.matches.length ? 1 : that.matchIndex + 1;\n                that._updateSearchModel();\n            },\n            _prev: function() {\n                const that = this;\n\n                that.viewer.pdfViewerCommon.goToPreviousSearchMatch();\n                that.matchIndex = that.matchIndex - 1 < 1 ? that.matches.length : that.matchIndex - 1;\n                that._updateSearchModel();\n            },\n            _updateSearchModel: function() {\n                const that = this,\n                    model = that.viewer.searchDialog.searchModel;\n\n                if (that.matches && that.matches.length) {\n                    model.set(\"matches\", that.matches.length);\n                    model.set(\"matchIndex\", that.matchIndex);\n                } else {\n                    model.set(\"searchText\", \"\");\n                    model.set(\"matches\", 0);\n                    model.set(\"matchIndex\", 0);\n                }\n            },\n            _closeDialog: function() {\n                const that = this;\n                that.viewer.searchDialog.close();\n            }\n        });\n\n        var ZoomCommand = Command.extend({\n            exec: function() {\n                const that = this;\n                const scale = that._calculateZoom();\n\n                if (scale === undefined$1) {\n                    return;\n                }\n\n                let zoomLevel = scale.zoomLevel;\n\n                if (that.viewer.zoomScale !== scale.zoomLevel) {\n                    that.viewer._preventRenderEvent = true;\n                    that.viewer._currentPage = that.viewer.pdfViewerCommon.getCurrentPageIndex() + 1;\n                    that.viewer.pdfViewerCommon.zoom({ zoomLevel: scale.zoomLevel, zoomLevelType: scale.zoomLevelType });\n                    zoomLevel = that.viewer.pdfViewerCommon.options.zoomLevel;\n                    that._triggerZoomEnd(zoomLevel);\n                }\n\n                that.viewer.zoomScale = zoomLevel;\n            },\n\n            _calculateZoom: function() {\n                var options = this.options,\n                    viewer = this.viewer,\n                    viewerOptions = viewer.options,\n                    scale = options.value || options.scale,\n                    scaleValue = scale,\n                    zoomLevelType = \"\",\n                    preventZoom;\n\n                viewer._allowResize = false;\n                viewer._autoFit = false;\n\n                if (options.zoomIn) {\n                    scaleValue = scale = viewer.zoomScale + viewerOptions.zoomRate;\n                } else if (options.zoomOut) {\n                    scaleValue = scale = viewer.zoomScale - viewerOptions.zoomRate;\n                } else if (scale === \"auto\") {\n                    viewer._allowResize = true;\n                    scaleValue = viewer._autoZoomScale;\n                } else if (typeof scale === \"string\" && !kendo.parseFloat(scale)) {\n                    zoomLevelType = scale;\n                } else if (scale && scale.toString().match(/^[0-9]+%?$/)) {\n                    scale = parseInt(scale.replace('%', ''), 10) / 100;\n                    scaleValue = scale;\n                } else {\n                    preventZoom = isNaN(scale);\n                }\n\n                if (!preventZoom) {\n                    preventZoom = scale < viewerOptions.zoomMin || scale > viewerOptions.zoomMax;\n                }\n\n                if (preventZoom || viewer.trigger(ZOOMSTART, { scale: scale })) {\n                    return;\n                }\n\n                if (options.updateComboBox && viewer.toolbar)\n                {\n                    viewer._updateZoomComboBox(scale);\n                }\n\n                return { zoomLevel: scaleValue, zoomLevelType: zoomLevelType };\n            },\n\n            _triggerZoomEnd: function(scale) {\n                var that = this,\n                    viewer = that.viewer;\n\n                viewer.trigger(ZOOMEND, { scale: scale });\n            }\n        });\n\n        var PrintCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                const that = this;\n\n                 if (!that.viewer.document) {\n                    that.viewer._triggerError({\n                        message: this.errorMessages.notFound\n                    });\n                    return;\n                }\n\n                progress(that.viewer.pageContainerWrapper, true);\n                // Used to ensure that loading indicator appears before the browser hangs.\n                setTimeout(() => {\n                   that.viewer.pdfViewerCommon.printFile();\n                }, 100);\n            }\n        });\n\n        const AnnotationsCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                const viewer = this.viewer;\n                if (viewer.annotationsToolbar) {\n                    viewer.annotationsToolbar.destroy();\n                } else {\n                    viewer.annotationsToolbar = new AnnotationToolbar(viewer);\n                }\n            }\n        });\n\n        extend(kendo.pdfviewer, {\n            OpenCommand: OpenCommand,\n            PageChangeCommand: PageChangeCommand,\n            DownloadCommand: DownloadCommand,\n            EnableSelectionCommand: EnableSelectionCommand,\n            EnablePanCommand: EnablePanCommand,\n            ExportCommand: ExportCommand,\n            PrintCommand: PrintCommand,\n            OpenSearchCommand: OpenSearchCommand,\n            ZoomCommand: ZoomCommand,\n            AnnotationsCommand: AnnotationsCommand\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            encode = kendo.htmlEncode,\n            extend = $.extend,\n            Class = kendo.Class,\n            Draggable = kendo.ui.Draggable,\n            outerWidth = kendo._outerWidth,\n            EXTENSIONS = {\n                svg: \".svg\",\n                png: \".png\"\n            },\n            keys = kendo.keys;\n\n        var ErrorDialog = Class.extend({\n            init: function(options) {\n                this.options = extend(options, {\n                    actions: [{\n                        text: options.messages.dialogs.okText\n                    }]\n                });\n                this._dialog = $(\"<div />\")\n                        .kendoDialog(this.options)\n                        .getKendoDialog();\n            },\n            open: function() {\n                this._dialog.center().open();\n            }\n        });\n\n        var ExportAsDialog = Class.extend({\n            init: function(options) {\n                this.options = extend(options, this.options, {\n                    fileFormats: [{\n                        description: options.messages.dialogs.exportAsDialog.png,\n                        extension: EXTENSIONS.png\n                    }, {\n                        description: options.messages.dialogs.exportAsDialog.svg,\n                        extension: EXTENSIONS.svg\n                    }],\n                    title: options.messages.dialogs.exportAsDialog.title,\n                    open: function() {\n                        this.center();\n                    }\n                });\n                this._initializeDialog();\n                return this;\n            },\n            options: {\n                extension: EXTENSIONS.png,\n                autoFocus: true,\n                resizable: false,\n                modal: {\n                    preventScroll: true\n                },\n                width: \"90%\",\n                maxWidth: 520,\n                template: ({ messages, total }) =>\n                    `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.fileName)}:</label></div>` +\n                    \"<div class='k-edit-field'>\" +\n                        \"<span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input class='k-input-inner' data-bind='value: name' /></span>\" +\n                    \"</div>\" +\n                    \"<div>\" +\n                        `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.saveAsType)}:</label></div>` +\n                        \"<div class='k-edit-field'>\" +\n                        \"<select data-role='dropdownlist' class='k-file-format' \" +\n                            \"data-text-field='description' \" +\n                            \"data-value-field='extension' \" +\n                            \"data-bind='value: extension, source: fileFormats'></select>\" +\n                        \"</div>\" +\n                    \"</div>\" +\n                    `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.page)}:</label></div>` +\n                    \"<div class='k-edit-field'>\" +\n                        `<input data-role='numerictextbox' data-format='n0' data-min='1' data-max='${encode(total)}' data-bind='value: page' />` +\n                    \"</div>\" +\n                    \"<div class='k-actions'>\" +\n                        `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary' data-bind='click: apply'><span class='k-button-text'>${encode(messages.save)}</span></button>` +\n                        `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base' data-bind='click: close'><span class='k-button-text'>${encode(messages.cancel)}</span></button>` +\n                    \"</div>\"\n            },\n            _updateModel: function(options) {\n                if (options.pagesCount) {\n                    this.viewModel.set(\"pagesCount\", options.pagesCount);\n                }\n                if (options.page) {\n                    this.viewModel.set(\"page\", options.page);\n                }\n            },\n            _initializeDialog: function() {\n                var that = this;\n                var options = that.options;\n                var dialogMessages = options.messages.dialogs;\n                var dialog = $(\"<div class='k-pdf-viewer-window k-action-window k-popup-edit-form' />\")\n                        .append(kendo.template(options.template)({\n                            total: options.pagesCount,\n                            messages: dialogMessages\n                        }))\n                        .kendoWindow(options)\n                        .getKendoWindow();\n\n                that.viewModel = kendo.observable({\n                    title: dialogMessages.exportAsDialog.title,\n                    name: dialogMessages.exportAsDialog.defaultFileName,\n                    extension: options.extension,\n                    fileFormats: options.fileFormats,\n                    pagesCount: options.pagesCount,\n                    page: 1,\n                    apply: that.apply.bind(this),\n                    close: function() {\n                        dialog.close();\n                    }\n                });\n\n                that._dialog = dialog;\n\n                kendo.bind(dialog.element, that.viewModel);\n                return dialog;\n            },\n            open: function() {\n                this._dialog.center().open();\n            },\n            apply: function() {\n                this._dialog.close();\n                this.options.apply({\n                    fileName: this.viewModel.name + this.viewModel.extension,\n                    extension: this.viewModel.extension,\n                    page: this.viewModel.page\n                });\n            }\n        });\n\n        var SearchDialog = Class.extend({\n            init: function(options) {\n                var that = this;\n                that.options = extend({}, options, that.options);\n            },\n            options: {\n                resizable: false,\n                template: ({ messages }) => '<div class=\"k-search-panel k-pos-sticky k-top-center\">' +\n                              `<button aria-label='${encode(messages.dragHandle)}' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-search-dialog-draghandle'>${kendo.ui.icon({ icon: \"handle-drag\", iconClass: \"k-button-icon\" })}</button>` +\n                              \"<span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'>\" +\n                                  `<input class='k-search-dialog-input k-input-inner' data-bind='value: boundValue, events: { keyup: onKeyup, input: onInput }' aria-label='${encode( messages.inputLabel)}' title='${encode(messages.inputLabel)}' />` +\n                                  `<span class='k-input-suffix'><button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-match-case-button k-match-case-button' data-bind='css: {k-selected: matchCase}, click: matchCaseClick' aria-label='${encode(messages.matchCase)}' title='${encode(messages.matchCase)}'>${kendo.ui.icon({ icon: \"convert-lowercase\", iconClass: \"k-button-icon\" })}</button></span>` +\n                              \"</span>\" +\n                              `<span class='k-search-matches'><span data-bind='text: matchIndex'></span> ${encode(messages.of)} <span data-bind='text: matches'></span></span>` +\n                              `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: prev' aria-label='${encode(messages.previous)}' title='${encode(messages.previous)}'>${kendo.ui.icon({ icon: \"arrow-up\", iconClass: \"k-button-icon\" })}</button>` +\n                              `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: next' aria-label='${encode(messages.next)}' title='${encode(messages.next)}'>${kendo.ui.icon({ icon: \"arrow-down\", iconClass: \"k-button-icon\" })}</button>` +\n                              `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: close' aria-label='${encode(messages.close)}' title='${encode(messages.close)}'>${kendo.ui.icon({ icon: \"x\", iconClass: \"k-button-icon\" })}</button>` +\n                          \"</div>\"\n            },\n            open: function() {\n                var that = this;\n\n                if (!that.dialog) {\n                    that._initializeDialog();\n                }\n\n                that.options.open();\n                that._showSearchDialog();\n            },\n            close: function() {\n                var that = this;\n                that.options.close();\n                that._hideSearchDialog();\n            },\n            _showSearchDialog: function() {\n                var that = this;\n\n                that.dialog.css(\"left\",`${(that.options.pageContainer.innerWidth() / 2) - (outerWidth(that.dialog, true) / 2)}px`);\n\n                that.dialog.kendoStop().kendoAnimate({\n                    effects: { zoom: { direction: \"in\" }, fade: { direction: \"in\" } },\n                    duration: 350,\n                    complete: function(ev) {\n                        that.dialog.find(\".k-search-dialog-input\").trigger(\"focus\");\n                    }\n                });\n            },\n            _hideSearchDialog: function() {\n                var that = this;\n\n                that.dialog.kendoStop().kendoAnimate({\n                    effects: { zoom: { direction: \"out\", properties: { scale: 0.7 } }, fade: { direction: \"out\" } },\n                    duration: 350,\n                    hide: true\n                });\n            },\n            _initializeDialog: function() {\n                var that = this;\n                var template = kendo.template(that.options.template);\n                var dialogElm = $(template({\n                    messages: that.options.messages\n                }));\n\n                that.options.pageContainer.prepend(dialogElm);\n                that.dialog = dialogElm;\n\n                that._draggable = new Draggable(dialogElm, {\n                    filter: \".k-search-dialog-draghandle\",\n                    axis: \"x\",\n                    dragstart: function(e) {\n                        var wnd = that.dialog;\n                        var containment = that.options.pageContainer;\n\n                        wnd.startPosition = {\n                            left: e.x.client - kendo.getOffset(wnd, \"position\").left,\n                        };\n\n                        if (!containment) {\n                            return null;\n                        }\n\n                        containment._innerWidth = containment.innerWidth();\n\n                        if (parseInt(containment._innerWidth, 10) > containment[0].clientWidth) {\n                            containment._innerWidth -= kendo.support.scrollbar();\n                        }\n\n                        wnd.maxLeft = containment._innerWidth - outerWidth(wnd, true);\n                    },\n                    drag: function(e) {\n                        var wnd = that.dialog;\n                        var position = {};\n                        var left;\n\n                        left = e.x.client - wnd.startPosition.left;\n\n                        if (left && isNaN(left) && left.toString().indexOf(\"px\") < 0) {\n                            position.left = left;\n                        } else {\n                            position.left = Math.max(\n                                Math.min(parseInt(left, 10), parseInt(wnd.maxLeft, 10)),\n                                0\n                            );\n                        }\n\n                        wnd.css(position);\n                    },\n                });\n\n                that._draggable.userEvents.stopPropagation = false;\n\n                that.searchModel = kendo.observable({\n                    boundValue: \"\",\n                    searchText: \"\",\n                    matchCase: false,\n                    matchIndex: 0,\n                    matches: 0,\n                    matchCaseClick: function() {\n                        this.set(\"matchCase\", !this.matchCase);\n                    },\n                    next: that.options.next,\n                    prev: that.options.prev,\n                    close: function() {\n                        this.set(\"boundValue\", \"\");\n                        that.close();\n                    },\n                    onKeyup: function(ev) {\n                        var key = ev.keyCode;\n                        var navigationFn = ev.shiftKey ? this.prev : this.next;\n\n                        if (key === keys.ENTER) {\n                            navigationFn();\n                            ev.preventDefault();\n                        } else if (key == keys.ESC) {\n                            this.close();\n                        }\n                    },\n                    onInput: function(ev) {\n                        this.set(\"searchText\", ev.target.value);\n                    }\n                });\n\n                kendo.bind(dialogElm, that.searchModel);\n            }\n        });\n\n        extend(kendo.pdfviewer, {\n            dialogs: {\n                ErrorDialog: ErrorDialog,\n                ExportAsDialog: ExportAsDialog,\n                SearchDialog: SearchDialog\n            }\n        });\n    })(window.kendo.jQuery);\n\n    const $ = jQuery;\n\n    class AnnotationPopup {\n        constructor(viewer, anchor, editor) {\n            this.viewer = viewer;\n            this.widget = viewer.pdfViewerCommon;\n            this.anchor = anchor;\n            this.editor = editor;\n            this.popupOpenHandler = this.onPopupOpen.bind(this);\n            this.init();\n        }\n\n        init() {\n            const anchor = this.anchor;\n            const annotationPopupToolbarElement = $(`<div data-uid=\"${kendo.guid()}\"></div>`);\n\n            this.popup = new kendo.ui.Popup($(`<div class=\"k-pdf-viewer-annotation-editor-toolbar\"></div>`), {\n                anchor: anchor\n            });\n\n            this.popup.element.html(annotationPopupToolbarElement);\n            const popupToolbar =\n                this.popupToolbar =\n                new kendo.ui.ToolBar(annotationPopupToolbarElement, {\n                    fillMode: \"flat\",\n                    tools: [\n                        { name: \"palette\", command: \"palette\", icon: \"palette\", type: \"button\", showText: \"overflow\", fillMode: \"flat\" },\n                        { name: \"remove\", command: \"remove\", icon: \"trash\", type: \"button\", showText: \"overflow\", fillMode: \"flat\" },\n                    ],\n                    parentMessages: {\n                        palette: \"Palette\",\n                        remove: \"Remove\"\n                    }\n                });\n\n            popupToolbar.bind(\"click\", this.onAnnotationPopupToolbarClick.bind(this));\n\n            this.popup.open();\n        }\n\n        initEditor() {\n        }\n\n        onAnnotationPopupToolbarClick(e) {\n            const widget = this.widget;\n            const target = $(e.target);\n            const command = target.data(\"command\");\n\n            switch (command) {\n                case \"palette\":\n                    this.initEditor();\n                    break;\n                case \"remove\":\n                    deleteAnnotation(widget);\n                    this.destroyPopup();\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        onPopupOpen() {\n            this.flatColorPicker._view._hueSlider.resize();\n            this.flatColorPicker._view._opacitySlider.resize();\n        }\n\n        anchorExists() {\n            return document.getElementById(this.anchor.id);\n        }\n\n        destroyPopup() {\n            if (this.popup) {\n                this.popup.destroy();\n                this.popup = null;\n            }\n        }\n\n        destroyEditor() {\n            if (this.editorPopup) {\n                this.editorPopup.destroy();\n                this.editorPopup = null;\n            }\n        }\n\n        destroy() {\n            if (this.popupToolbar) {\n                this.popupToolbar.unbind(\"click\");\n                this.popupToolbar.unbind(\"toggle\");\n                this.popupToolbar.destroy();\n                this.popupToolbar = null;\n            }\n\n            this.destroyPopup();\n        }\n    }\n\n    class HighlightAnnotationPopup extends AnnotationPopup {\n        constructor(viewer, anchor, editor) {\n            super(viewer, anchor, editor);\n        }\n\n        initEditor() {\n            const anchor = this.anchor;\n\n            if (!this.anchorExists()) {\n                this.destroy();\n                return;\n            }\n\n            this.destroyEditor();\n\n            this.editorPopup = new kendo.ui.Popup($(`\n            <div class=\"k-pdf-viewer-annotation-editor\">\n                <span class=\"k-column-menu-group-header\">\n                    <span class=\"k-column-menu-group-header-text\">Color</span>\n                </span>\n                <div ref-annotation-editor-flat-color-picker></div>\n            </div>\n`), {\n                anchor: anchor,\n                activate: this.popupOpenHandler\n            });\n\n            this.initFlatColorPicker();\n\n            this.editorPopup.open();\n\n            this.destroy();\n        }\n\n        initFlatColorPicker() {\n            this.flatColorPicker = new kendo.ui.FlatColorPicker(this.editorPopup.element.find(\"[ref-annotation-editor-flat-color-picker]\"), {\n                format: \"rgb\",\n                opacity: true,\n                change: (e) => setHighlightTextColor(this.widget, e.value)\n            });\n        }\n\n        onPopupOpen() {\n            const currentColor = this.editor.color;\n\n            super.onPopupOpen();\n            this.flatColorPicker.value(currentColor);\n        }\n    }\n\n    class FreeTextAnnotationPopup extends AnnotationPopup {\n        constructor(viewer, anchor, editor) {\n            super(viewer, anchor, editor);\n        }\n\n        initEditor() {\n            const anchor = this.anchor;\n\n            if (!this.anchorExists()) {\n                this.destroy();\n                return;\n            }\n\n            this.destroyEditor();\n\n            this.editorPopup = new kendo.ui.Popup($(`\n            <div class=\"k-pdf-viewer-annotation-editor\">\n                <span class=\"k-column-menu-group-header\">\n                        <span class=\"k-column-menu-group-header-text\">Text style</span>\n                    </span>\n                    <form ref-annotation-text-editor-popup-form></form>\n                <span class=\"k-column-menu-group-header\">\n                    <span class=\"k-column-menu-group-header-text\">Color</span>\n                </span>\n                <div ref-annotation-editor-flat-color-picker></div>\n            </div>\n`), {\n                anchor: anchor,\n                activate: this.popupOpenHandler\n            });\n\n            this.initFontSizeForm();\n            this.initFlatColorPicker();\n\n            this.editorPopup.open();\n\n            this.destroy();\n        }\n\n        initFontSizeForm() {\n            const currentFontSize = this.editor.propertiesToUpdate[0][1];\n            const fontSizeList = [8, 9, 10, 11, 12, 13, 14, 16, 20, 22, 24, 26, 28, 36, 48, 72];\n\n            this.fontSizeForm = new kendo.ui.Form($(\"[ref-annotation-text-editor-popup-form]\"), {\n                buttonsTemplate: () => \"\",\n                formData: {\n                    fontSize: currentFontSize\n                },\n                layout: \"grid\",\n                grid: {\n                    cols: 3\n                },\n                items: [\n                    {\n                        field: \"fontSize\",\n                        label: \"Font size\",\n                        editor: \"DropDownList\",\n                        colSpan: 1,\n                        editorOptions: {\n                            fillMode: \"flat\",\n                            dataSource: fontSizeList,\n                            change: (e) => {\n                                const value = e.sender.value();\n                                setFreeTextFontSize(this.widget, value);\n                            }\n                        }\n                    }\n                ]\n            });\n\n            this.fontSizeForm.element.find(\".k-form-buttons\").remove();\n        }\n\n        initFlatColorPicker() {\n            this.flatColorPicker = new kendo.ui.FlatColorPicker(this.editorPopup.element.find(\"[ref-annotation-editor-flat-color-picker]\"), {\n                format: \"rgb\",\n                opacity: true,\n                change: (e) => setFreeTextFontColor(this.widget, e.value)\n            });\n        }\n\n        onPopupOpen() {\n            const currentColor = this.editor.propertiesToUpdate[1][1];\n\n            super.onPopupOpen();\n            this.flatColorPicker.value(currentColor);\n        }\n    }\n\n    const __meta__ = {\n        id: \"pdfviewer\",\n        name: \"PDFViewer\",\n        category: \"web\",\n        description: \"PDFViewer to display pdfs in the browser\",\n        depends: [\"core\", \"window\", \"dialog\", \"toolbar\", \"draganddrop\", \"upload\", \"combobox\", \"drawing\", \"binder\", \"dropdownlist\", \"numerictextbox\", \"textbox\", \"pager\", \"form\", \"colorpicker\", \"pdfviewer-common.cmn.chunk\"]\n    };\n\n    (function($, undefined$1) {\n        var NS = \".kendoPDFViewer\",\n            kendo = window.kendo,\n            ui = kendo.ui,\n            extend = $.extend,\n            drawing = kendo.drawing,\n            keys = $.extend({ PLUS: 187, MINUS: 189, ZERO: 48, NUMPAD_ZERO: 96 }, kendo.keys),\n            Page,\n            BlankPage = kendo.pdfviewer.BlankPage,\n            Widget = ui.Widget,\n            progress = kendo.ui.progress,\n            SCROLL = \"scroll\",\n            RENDER = \"render\",\n            OPEN = \"open\",\n            ERROR = \"error\",\n            KEYDOWN = \"keydown\" + NS,\n            MOUSEWHEEL = \"DOMMouseScroll\" + NS + \" mousewheel\" + NS,\n            UPDATE = \"update\",\n            PAGE_CHANGE = \"pagechange\",\n            ZOOMSTART = \"zoomStart\",\n            ZOOMEND = \"zoomEnd\",\n            ZOOMCOMMAND = \"ZoomCommand\",\n            WHITECOLOR = \"#ffffff\",\n            TABINDEX = \"tabindex\",\n            CLICK = \"click\",\n            CHANGE = \"change\",\n            TOGGLE = \"toggle\",\n            DISABLED = 'k-disabled',\n            PROCESSORS = {\n                pdfjs: \"pdfjs\",\n                dpl: \"dpl\"\n            },\n            styles = {\n                viewer: \"k-pdf-viewer\",\n                scroller: \"k-canvas k-pdf-viewer-canvas k-pos-relative k-overflow-auto\",\n                enableTextSelection: \"k-enable-text-select\",\n                enablePanning: \"k-enable-panning\",\n                highlightClass: \"k-search-highlight\",\n                highlightMarkClass: \"k-search-highlight-mark\",\n                charClass: \"k-text-char\"\n            },\n            PREDEFINED_ZOOM_VALUES = {\n                auto: \"auto\",\n                actual: \"ActualWidth\",\n                fitToWidth: \"FitToWidth\",\n                fitToPage: \"FitToPage\"\n            };\n\n        var PDFViewer = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, kendo.deepExtend({}, this.options, options));\n\n                that._processMessages();\n\n                that._wrapper();\n\n                if (that.options.toolbar) {\n                    that._renderToolbar();\n                }\n\n                that._initProcessor(options || {});\n                that._renderPageContainer();\n\n                if (that._isDPLProcessor()) {\n                    that._loadDPLDocument();\n                } else {\n                    that._loadPdfJSDocument();\n                }\n\n                kendo.notify(that, kendo.ui);\n\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay(that.wrapper[0]);\n                }\n            },\n\n            events: [\n                RENDER,\n                OPEN,\n                ERROR,\n                ZOOMSTART,\n                ZOOMEND\n            ],\n\n            options: {\n                name: \"PDFViewer\",\n                view: {\n                    type: \"canvas\"\n                },\n                pdfjsProcessing: {\n                    file: null,\n                    loadOnDemand: true\n                },\n                dplProcessing: {\n                    read: {\n                        url: null,\n                        type: \"GET\",\n                        dataType: \"json\",\n                        pageField: \"pageNumber\"\n                    },\n                    upload: {\n                        url: null,\n                        saveField: \"file\"\n                    },\n                    download: {\n                        url: null\n                    },\n                    loadOnDemand: false\n                },\n                toolbar: {\n                    items: [],\n                    contextMenu: false\n                },\n                width: 1000,\n                height: 1200,\n                page: 1,\n                defaultPageSize: {\n                    width: 794,\n                    height: 1123\n                },\n                scale: null,\n                zoomMin: 0.5,\n                zoomMax: 4,\n                zoomRate: 0.25,\n                messages: {\n                    defaultFileName: \"Document\",\n                    toolbar: {\n                        zoom: {\n                            zoomLevel: \"zoom level\",\n                            zoomOut: \"Zoom Out\",\n                            zoomIn: \"Zoom In\",\n                            actualWidth: \"Actual Width\",\n                            autoWidth: \"Automatic Width\",\n                            fitToWidth: \"Fit to Width\",\n                            fitToPage: \"Fit to Page\"\n                        },\n                        contextMenu: \"Menu\",\n                        open: \"Open\",\n                        exportAs: \"Export\",\n                        download: \"Download\",\n                        print: \"Print\",\n                        toggleSelection: \"Enable Selection\",\n                        togglePan: \"Enable Panning\",\n                        search: \"Search\",\n                        annotations: \"Annotations\"\n                    },\n                    errorMessages: {\n                        notSupported: \"Only pdf files allowed.\",\n                        parseError: \"PDF file fails to process.\",\n                        notFound: \"File is not found.\",\n                        popupBlocked: \"Popup is blocked.\"\n                    },\n                    dialogs: {\n                        exportAsDialog: {\n                            title: \"Export...\",\n                            defaultFileName: \"Document\",\n                            pdf: \"Portable Document Format (.pdf)\",\n                            png: \"Portable Network Graphics (.png)\",\n                            svg: \"Scalable Vector Graphics (.svg)\",\n                            labels: {\n                                fileName: \"File name\",\n                                saveAsType: \"Save as\",\n                                page: \"Page\"\n                            }\n                        },\n                        okText: \"OK\",\n                        save: \"Save\",\n                        cancel: \"Cancel\",\n                        search: {\n                            inputLabel: \"Search Text\",\n                            matchCase: \"Match Case\",\n                            next: \"Next Match\",\n                            previous: \"Previous Match\",\n                            close: \"Close\",\n                            of: \"of\",\n                            dragHandle: \"Drag search\"\n                        }\n                    }\n                }\n            },\n\n            defaultTools: {\n                contextMenu: {\n                    type: \"dropDownButton\",\n                    name: \"contextMenu\",\n                    showText: \"overflow\",\n                    id: \"pdfviewer-toolbar-context-menu\",\n                    overflow: \"never\",\n                    icon: \"menu\",\n                    fillMode: \"flat\",\n                    menuButtons: [\n                        { id: \"open\", text: \"Open\", icon: \"folder-open\", attributes: { \"data-command\": \"OpenCommand\" } },\n                        { id: \"download\", text: \"Download\", icon: \"download\", attributes: { \"data-command\": \"DownloadCommand\" }, enable: false },\n                        { id: \"print\", text: \"Print\", icon: \"print\", attributes: { \"data-command\": \"PrintCommand\" }, enable: false }\n                    ]\n                },\n                separator: { type: \"separator\" },\n                pager: {\n                    type: \"component\",\n                    name: \"pager\",\n                    overflow: \"never\",\n                    component: \"Pager\",\n                    element: '<div></div>',\n                    componentOptions: {\n                        navigatable: true,\n                        _isToolbarItem: true,\n                    }\n                },\n                spacer: { type: \"spacer\" },\n                zoomInOut: {\n                    type: \"buttonGroup\",\n                    fillMode: \"flat\",\n                    buttons: [\n                        { type: \"button\", icon: \"zoom-out\", name: \"zoomOut\", command: \"ZoomCommand\", showText: \"overflow\", options: \"{ \\\"zoomOut\\\": true, \\\"updateComboBox\\\": true }\", fillMode: \"flat\" },\n                        { type: \"button\", icon: \"zoom-in\", name: \"zoomIn\", command: \"ZoomCommand\", showText: \"overflow\", options: \"{ \\\"zoomIn\\\": true, \\\"updateComboBox\\\": true }\", fillMode: \"flat\" },\n                    ]\n                },\n                zoom: {\n                    type: \"component\",\n                    name: \"zoom\",\n                    command: \"ZoomCommand\",\n                    overflow: \"never\",\n                    component: \"ComboBox\",\n                    data: [50, 100, 150, 200, 300, 400],\n                    componentOptions: {\n                        enable: false,\n                        dataTextField: \"text\",\n                        dataValueField: \"percent\",\n                        valuePrimitive: true,\n                        clearOnEscape: false,\n                        commandOn: \"change\",\n                        fillMode: 'flat',\n                    }\n                },\n                toggleSelection: {\n                    type: \"buttonGroup\",\n                    fillMode: \"flat\",\n                    buttons: [\n                        {\n                            togglable: true,\n                            command: \"EnableSelectionCommand\",\n                            icon: \"pointer\",\n                            showText: \"overflow\",\n                            name: \"toggleSelection\",\n                            group: \"toggle-pan\",\n                            fillMode: \"flat\"\n                        }, {\n                            togglable: true,\n                            command: \"EnablePanCommand\",\n                            icon: \"hand\",\n                            showText: \"overflow\",\n                            name: \"togglePan\",\n                            group: \"toggle-pan\",\n                            selected: true,\n                            fillMode: \"flat\"\n                        }\n                    ]\n                },\n                spacer2: { type: \"spacer\" },\n                search: {\n                    type: \"button\",\n                    command: \"OpenSearchCommand\",\n                    icon: \"search\",\n                    name: \"search\",\n                    showText: \"overflow\",\n                    enable: false,\n                    fillMode: \"flat\"\n                },\n                open: {\n                    type: \"button\",\n                    showText: \"overflow\",\n                    name: \"open\",\n                    icon: \"folder-open\",\n                    command: \"OpenCommand\",\n                    fillMode: \"flat\"\n                },\n                download: {\n                    type: \"button\",\n                    showText: \"overflow\",\n                    name: \"download\",\n                    icon: \"download\",\n                    command: \"DownloadCommand\",\n                    enable: false,\n                    fillMode: \"flat\"\n                },\n                print: {\n                    type: \"button\",\n                    showText: \"overflow\",\n                    name: \"print\",\n                    icon: \"print\",\n                    command: \"PrintCommand\",\n                    enable: false,\n                    fillMode: \"flat\"\n                },\n                annotations: {\n                    togglable: true,\n                    type: \"button\",\n                    showText: \"overflow\",\n                    name: \"annotations\",\n                    icon: \"edit-annotations\",\n                    command: \"AnnotationsCommand\",\n                    enable: false,\n                    fillMode: \"flat\"\n                }\n            },\n\n            exportAsTool: {\n                exportAs: { type: \"button\", showText: \"overflow\", name: \"exportAs\", icon: \"image-export\", command: \"ExportCommand\", fillMode: \"flat\" }\n            },\n\n\n            _processMessages: function() {\n                var messages = this.options.messages.toolbar,\n                    zoom = messages.zoom;\n\n                if ($.isPlainObject(zoom)) {\n                    this.options.messages.toolbar = $.extend({}, this.options.messages.toolbar, zoom);\n                    this.options.messages.toolbar.zoom = zoom.zoomLevel || this.options.messages.toolbar.zoom;\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options;\n\n                that.wrapper = that.element;\n\n                that.wrapper\n                        .width(options.width)\n                        .height(options.height)\n                        .addClass(styles.viewer)\n                        .on(KEYDOWN, that._keydown.bind(that));\n\n                that._allowResize = that.options.scale === null;\n                that._autoZoomScale = kendo_pdfviewerCommon_cmn_chunk_js.D;\n                that.zoomScale = that.options.scale || that._autoZoomScale;\n\n                that._resizeHandler = kendo.onResize(function() {\n                    that.resize();\n                });\n\n                that._pageNum = that.options.page;\n            },\n\n            _keydown: function(e) {\n                var plusShortcuts = [keys.PLUS, keys.NUMPAD_PLUS],\n                    minusShortcuts = [keys.MINUS, keys.NUMPAD_MINUS],\n                    zeroShortcuts = [keys.ZERO, keys.NUMPAD_ZERO],\n                    shouldExecute = false,\n                    args = {\n                        command: ZOOMCOMMAND,\n                        options: { updateComboBox: true }\n                    };\n\n                if (!e.ctrlKey || this._blankPage || this.processingLib === PROCESSORS.dpl) {\n                    return;\n                }\n\n                if (plusShortcuts.includes(e.keyCode)) {\n                    args.options.zoomIn = true;\n                    shouldExecute = true;\n                } else if (minusShortcuts.includes(e.keyCode)) {\n                    args.options.zoomOut = true;\n                    shouldExecute = true;\n                } else if (zeroShortcuts.includes(e.keyCode)) {\n                    args.options.value = kendo_pdfviewerCommon_cmn_chunk_js.D;\n                    shouldExecute = true;\n                }\n\n                if (shouldExecute) {\n                    this.execute(args);\n                    e.preventDefault();\n                }\n            },\n\n            _handlePageChangeEvent: function(event) {\n                const that = this;\n\n                if (!that._pageChangeFromScroll) {\n                    this.activatePage(event.index, false);\n                    that._showPagerInputLabels();\n                }\n\n                delete that._pageChangeFromScroll;\n            },\n\n            _showPagerInputLabels: function() {\n                const that = this;\n                const inputElements = that.pager.element.find(\".k-pager-input\").children();\n                if (inputElements) {\n                    const labels = inputElements.eq(0).add(inputElements.eq(2));\n\n                    if (!$(labels).is(\":visible\")) {\n                        labels.show();\n                    }\n                }\n            },\n\n            _resizePager: function() {\n                const that = this;\n\n                if (!that.pager || !that.pager.options.responsive) {\n                    return;\n                }\n\n                const pagerWidth = kendo._outerWidth(that.pager.element);\n                const visibleToolbarItems = Array.from(that.toolbar.element.children(':not(.k-hidden):not(:has(.k-pager))'));\n                const containerWidth = kendo._outerWidth(that.element);\n\n                let visibleToolsWidth = 0;\n\n                const pattern = /(em|ex|%|px|cm|mm|in|pt|pc|ch|rem|vh|vw|vmin|vmax)$/;\n                const gap = Number(that.toolbar.element.css(\"gap\").replace(pattern,''));\n\n                if (visibleToolbarItems.length > 0) {\n                    let temp = 0;\n                    for (let i = 0; i < visibleToolbarItems.length; i++) {\n                        temp += kendo._outerWidth(visibleToolbarItems[i]) + gap;\n                    }\n                    if (temp) {\n                        visibleToolsWidth = temp;\n                    }\n                }\n\n                const elementsToShrink = that.pager.element.find(\".k-pager-nav\");\n\n                if ((pagerWidth + visibleToolsWidth + gap) > containerWidth) {\n\n                    for (var i = elementsToShrink.length - 1; i >= 0; i--) {\n                        const element = elementsToShrink.eq(i);\n                            element.addClass(\"k-hidden\");\n                    }\n                }\n\n                if ((pagerWidth + visibleToolsWidth + gap) < containerWidth) {\n                    const hidden = that.pager.element.find(\".k-hidden\");\n\n                    for (var i = 0; i < hidden.length; i++) {\n                        const hiddenElement = hidden.eq(i);\n\n                        hiddenElement.removeClass('k-hidden');\n                    }\n                }\n\n                if (that.pager.options.input) {\n                    that._showPagerInputLabels();\n                }\n            },\n\n            _initProcessor: function(options) {\n                var that = this,\n                    processingOptions;\n\n                processingOptions = options.dplProcessing ? that.options.dplProcessing : that.options.pdfjsProcessing;\n                that.processingLib = options.dplProcessing ? PROCESSORS.dpl : PROCESSORS.pdfjs;\n\n                if (that._isDPLProcessor()) {\n                    that.processor = new kendo.pdfviewer[that.processingLib].processor(processingOptions, that);\n                    Page = kendo.pdfviewer[that.processingLib].Page;\n                } else {\n                    isLoaded();\n                }\n            },\n\n            _isDPLProcessor: function() {\n                return this.processingLib === PROCESSORS.dpl;\n            },\n\n            _hasPagerTool: function(tools) {\n                let hasPager = false;\n                let index;\n\n                for (let i = 0; i < tools.length; i++) {\n                    const tool = tools[i];\n                    if (typeof tool === 'string') {\n                        hasPager = tool.toLowerCase() === 'pager';\n                        index = i;\n                    } else {\n                        if (tool.type) {\n                            hasPager = tool.type.toLowerCase() === 'pager';\n                            index = i;\n                        } else if (tool.name) {\n                            hasPager = tool.name.toLowerCase() === 'pager';\n                            if (hasPager) {\n                                delete tool.name;\n                            }\n                            index = i;\n                        }\n                    }\n\n                    if (hasPager) {\n                        break;\n                    }\n                }\n\n                return {\n                    hasPager,\n                    index\n                };\n            },\n\n            _renderToolbar: function() {\n                var that = this,\n                    options = that.options,\n                    toolbarOptions = extend({}, options.toolbar),\n                    tools = toolbarOptions.items && toolbarOptions.items.length ? toolbarOptions.items : Object.keys(that.defaultTools);\n\n\n                const { hasPager, index } = that._hasPagerTool(tools);\n\n\n                tools = that._processTools(tools);\n\n                if (hasPager) {\n                    let pagerMessages = that.options.messages.toolbar.pager;\n\n                    if (pagerMessages) {\n                        if (pagerMessages.of) {\n                            pagerMessages.of = `${pagerMessages.of} {0}`;\n                            if (pagerMessages.pages) {\n                                pagerMessages.of = pagerMessages.of + ' ' + pagerMessages.pages;\n                                delete pagerMessages.pages;\n                            }\n                        }\n                    }\n                    that.defaultTools.pager.componentOptions.messages = pagerMessages;\n                    options.messages.toolbar.pager = \"Pager\";\n\n                    const currentPagerOptions = that.defaultTools.pager.componentOptions;\n                    if (typeof tools[index] !== 'string') {\n                        that.defaultTools.pager.componentOptions = $.extend(tools[index], currentPagerOptions);\n\n                        tools[index] = that.defaultTools.pager;\n                    }\n                }\n\n                toolbarOptions = {\n                    defaultTools: $.extend({}, that.defaultTools, that.exportAsTool),\n                    parentMessages: options.messages.toolbar,\n                    tools: tools,\n                    resizable: true,\n                    fillMode: 'flat',\n                    overflow: toolbarOptions.overflow\n                };\n\n                var toolbarElement = $(\"<div />\");\n\n                toolbarElement.appendTo(that.element);\n                that.toolbar = new kendo.ui.ToolBar(toolbarElement, toolbarOptions);\n                that.options.toolbar = that.toolbar.options;\n\n                that.toolbar.bind(TOGGLE, that._toolbarClick.bind(that));\n                that.toolbar.bind(CLICK, that._toolbarClick.bind(that));\n                that.toolbar.bind(CHANGE, that._toolbarClick.bind(that));\n\n                // If the context menu is enabled, bind the click event to the items of the dropdown button as well.\n                if (toolbarOptions.contextMenu) {\n                    that.toolbar.element.find('[data-role=dropdownbutton]').on(CLICK, that._toolbarClick.bind(that));\n                }\n\n                if (hasPager) {\n                    that.pager = that.toolbar.element.find('.k-pager');\n                    if (that.pager.length > 0) {\n                        that.pager = that.pager.data('kendoPager');\n                    }\n                    that.pager.bind(CHANGE, that._handlePageChangeEvent.bind(that));\n                }\n\n                that.bind({\n                    update: that._updateToolbar.bind(that)\n                });\n\n                return that.toolbar;\n            },\n\n            _processTools: function(tools) {\n                var that = this,\n                    toolbar = that.options.toolbar,\n                    messages = that.options.messages.toolbar;\n\n                tools = tools.flatMap(t => {\n                    if (t === \"zoom\") {\n                        t = that.defaultTools.zoom;\n                    }\n\n                    if (t.name === \"zoom\") {\n                        t = $.extend({}, that.defaultTools.zoom, t);\n\n                        var zoomLevels = [{\n                            percent: PREDEFINED_ZOOM_VALUES.auto,\n                            text: messages.autoWidth\n                        }, {\n                            percent: PREDEFINED_ZOOM_VALUES.actual,\n                            text: messages.actualWidth\n                        }, {\n                            percent: PREDEFINED_ZOOM_VALUES.fitToWidth,\n                            text: messages.fitToWidth\n                        }, {\n                            percent: PREDEFINED_ZOOM_VALUES.fitToPage,\n                            text: messages.fitToPage\n                        }];\n\n                        // eslint-disable-next-line\n                        var comboOptions = t.data.map(i => { return { percent: i, text: i + \"%\" } });\n                        var value = that.options.scale ? that.options.scale * 100 + \"%\" : \"auto\";\n\n                        zoomLevels = zoomLevels.concat(comboOptions);\n                        t.componentOptions.dataSource = zoomLevels;\n                        t.componentOptions.value = value;\n                    }\n\n                    return t;\n                });\n\n                if (!toolbar.contextMenu) {\n                    // If the option is not enabled we don't want to render the context menu button and the separator.\n                    const contextMenuIndex = tools.findIndex(t => t === \"contextMenu\");\n                    if (contextMenuIndex !== -1) {\n                        tools.splice(contextMenuIndex, 1);\n                    }\n\n                    const separatorIndex = tools.findIndex(t => t === \"separator\");\n                    if (separatorIndex !== -1) {\n                        tools.splice(separatorIndex, 1);\n                    }\n                } else {\n                    // If it is enabled, we don't want the open, download and print buttons to be rendered.\n                    tools = tools.filter(t => t !== \"open\" && t !== \"download\" && t !== \"print\");\n                }\n\n                return tools;\n            },\n\n            _updateToolbar: function(e) {\n                var pageOptions = {\n                        page: e.page || 1,\n                        total: e.total || 1\n                    },\n                    toolbar = this.toolbar,\n                    toolbarEl = toolbar.element,\n                    zoomCombo = toolbarEl.find(\"[data-command=ZoomCommand][data-role=combobox]\").data(\"kendoComboBox\"),\n                    toFocus = toolbarEl.find(\".k-focus\");\n\n                if (toFocus.length === 0) {\n                    toFocus = toolbarEl.find(\"[tabindex=0]\").first();\n\n                    if (toFocus.length === 0) {\n                        toFocus = toolbar._getAllItems().first();\n                    }\n                }\n\n                if (zoomCombo) {\n                    zoomCombo.enable(!e.isBlank);\n                    if (e.action === \"zoom\") {\n                        this._updateZoomComboBox(e.zoom);\n                    }\n                }\n\n                if (((e.action === \"pagechange\" && e.updatePager !== false) || e.isBlank) && this.pager) {\n                    if (e.updatePager) {\n                        pageOptions.updatePager = true;\n                    }\n\n                    if (e.pageChangeFromScroll) {\n                        pageOptions.pageChangeFromScroll = true;\n                    }\n\n                    this._updatePager(pageOptions);\n                }\n\n                this._updateOnBlank(e.isBlank);\n\n                toolbar._resetTabIndex(toFocus);\n            },\n\n            _updateOnBlank: function(isBlank) {\n                const toolbar = this.toolbar,\n                    toolbarEl = toolbar.element;\n\n                const contextMenu = $(\"#pdfviewer-toolbar-context-menu_buttonmenu\");\n                let downloadButton = toolbarEl.find(\"[data-command='DownloadCommand']\");\n                let printButton = toolbarEl.find(\"[data-command='PrintCommand']\");\n\n                if (contextMenu.length) {\n                    downloadButton = contextMenu.find(\"[data-command='DownloadCommand']\");\n                    printButton = contextMenu.find(\"[data-command='PrintCommand']\");\n                }\n\n                toolbar.enable(toolbarEl.find(\"[data-command=EnableSelectionCommand]\").parent(), !isBlank);\n                toolbar.enable(toolbarEl.find(\"[data-command=ZoomCommand][role=button]\").parent(), !isBlank);\n\n                toolbar.enable(toolbarEl.find(\"[data-command='OpenSearchCommand']\"), !isBlank);\n                toolbar.enable(downloadButton, !isBlank);\n                toolbar.enable(printButton, !isBlank);\n            },\n\n            _updatePager: function(options) {\n                const that = this;\n                if (options.updatePager) {\n                    const isDPLProcessed = that.processingLib === 'dpl';\n\n                    const data = isDPLProcessed ? (that.document && that.document.pages ? that.document.pages : []) : that.pages ?? [];\n\n                    const pagerDataSource = new kendo.data.DataSource({\n                    data: data ?? [],\n                    pageSize: 1,\n                    page: options.page\n                });\n                    that.pager.setDataSource(pagerDataSource);\n                    that._resizePager();\n                } else {\n                    const current = that.pager.page();\n\n                    if (current !== options.page) {\n                        if (options.pageChangeFromScroll) {\n                            that._pageChangeFromScroll = true;\n                        }\n                        that.pager.page(options.page);\n                    }\n                }\n                that._showPagerInputLabels();\n                that._togglePagerDisabledClass();\n            },\n\n            _togglePagerDisabledClass: function() {\n                const that = this;\n                const pager = that.pager;\n\n                if (pager.totalPages() <= 1 ) {\n                    pager.element.addClass(DISABLED);\n                } else if (pager.element.hasClass(DISABLED)) {\n                    pager.element.removeClass(DISABLED);\n                }\n            },\n\n            _updateZoomComboBox: function(value) {\n                var isPredefined = value === PREDEFINED_ZOOM_VALUES.auto ||\n                    value === PREDEFINED_ZOOM_VALUES.actual ||\n                    value === PREDEFINED_ZOOM_VALUES.fitToPage ||\n                    value === PREDEFINED_ZOOM_VALUES.fitToWidth,\n                    zoomCombo = this.toolbar.element.find(\"[data-command=ZoomCommand][data-role=combobox]\").data(\"kendoComboBox\");\n\n                if (!isPredefined) {\n                    value = Math.round(value * 100) + '%';\n                }\n\n                if (zoomCombo) {\n                    zoomCombo.value(value);\n                }\n            },\n\n            _toolbarClick: function(ev) {\n                let target = $(ev.target),\n                    command = target.data(\"command\"),\n                    options = target.data(\"options\");\n\n                if (!command && !options) {\n                    target = $(ev.currentTarget);\n                    command = target.data(\"command\");\n                    options = target.data(\"options\");\n                }\n\n                options = extend({}, { value: target.val() }, options);\n\n                if (!command) {\n                    return;\n                }\n\n                this.execute({\n                    command: command,\n                    options: options\n                });\n            },\n\n            _initErrorDialog: function(options) {\n                var that = this;\n\n                if (!that._errorDialog) {\n                    options = extend(options, {\n                        messages: that.options.messages\n                    });\n                    var dialogInstance = new kendo.pdfviewer.dialogs.ErrorDialog(options);\n                    that._errorDialog = dialogInstance._dialog;\n                }\n                return that._errorDialog;\n            },\n\n            _renderPageContainer: function() {\n                var that = this;\n\n                if (!that.pageContainer) {\n                    that.pageContainerWrapper = $(\"<div />\");\n                    that.pageContainerWrapper.addClass(styles.scroller);\n\n                    that.pageContainer = $(`<div class=\"k-pdf-viewer-pages\" />`);\n                    that.pageContainer.attr(TABINDEX, 0);\n\n                    that.pageContainerWrapper.append(that.pageContainer);\n                    that.wrapper.append(that.pageContainerWrapper);\n                }\n            },\n\n            _triggerError: function(options) {\n                var dialog = this._initErrorDialog();\n                extend(options, {\n                    dialog: dialog\n                });\n                if (this.pageContainer) {\n                    progress(this.pageContainer, false);\n                }\n\n                if (this.trigger(ERROR, options))\n                {\n                    return;\n                }\n\n                dialog.open().content(options.message);\n            },\n\n            _renderPages: function() {\n                var that = this,\n                    document = that.document,\n                    pagesData;\n\n                that.pages = [];\n\n                if (!document || !document.total) {\n                    that._renderBlankPage();\n                    return;\n                }\n\n                pagesData = document.pages;\n\n                for (var i = 1; i <= document.total; i++) {\n                    var viewerPage,\n                        pageData = {\n                            processor: that.processor,\n                            number: i\n                        };\n\n                    if (pagesData && pagesData.length) {\n                        pageData = extend(pageData, pagesData[i - 1]);\n                    }\n\n                    viewerPage = new Page(pageData, that);\n                    that.pages.push(viewerPage);\n                    that.pageContainer.append(viewerPage.element);\n                }\n\n                if (that.pdfScroller) {\n                    that.pdfScroller.enablePanEventsTracking();\n                }\n\n                that._attachContainerEvents();\n                that._getVisiblePagesCount();\n                that._updatePager({ updatePager: true });\n            },\n\n            _renderBlankPage: function() {\n                this._blankPage = new BlankPage(this.options.defaultPageSize, this);\n\n                this.pageContainer.append(this._blankPage.element);\n\n                this._blankPage._initUpload();\n                this.trigger(UPDATE, { isBlank: true });\n            },\n\n            _removeBlankPage: function() {\n                if (this._blankPage) {\n                    this._blankPage.destroy();\n                    this._blankPage.element.remove();\n                    this._blankPage = null;\n                }\n            },\n\n            _resize: function() {\n                var that = this,\n                    containerWidth,\n                    ratio;\n\n                if (!that._allowResize) {\n                    return;\n                }\n\n                if (!that.pages || !that.pages.length) {\n                    if (that._blankPage) {\n                        ratio = containerWidth / that._blankPage.element.width();\n                        that._blankPage.resize(ratio);\n                    }\n                    return;\n                }\n\n                if (that.toolbar) {\n                    that.toolbar.resize(true);\n                }\n\n\n                if (that._resizeHandler) {\n                    clearTimeout(that._resizeHandler);\n                }\n                that._resizeHandler = setTimeout(that._resizePages.bind(that), 100);\n            },\n\n            _resizePages: function() {\n                const that = this,\n                    containerWidth = that.pageContainer[0].clientWidth,\n                    pagesElements = that.pdfViewerCommon?.getPagesElements();\n                let ratio = 0;\n\n                that.pages.forEach(function(page) {\n                    const pageWidth = page.element ? page.element.width() : $(pagesElements[page._pageIndex]).width();\n                    const currentRatio = containerWidth / pageWidth;\n\n                    if (currentRatio > ratio) {\n                        ratio = currentRatio;\n                    }\n                });\n\n\n                if (that._autoFit) {\n                    that.zoom(that._autoFit, true);\n                    return;\n                }\n\n                ratio = Math.min(Math.max(ratio, that.options.zoomMin), kendo_pdfviewerCommon_cmn_chunk_js.D);\n                if (ratio != that.zoomScale) {\n                    that.zoom(ratio, true);\n                    that.zoomScale = ratio;\n                    that._allowResize = true;\n                }\n\n                if (that.pager && that.pager.element) {\n                    that._resizePager();\n                }\n            },\n\n            _attachContainerEvents: function() {\n                const that = this;\n\n                that.pageContainer.addClass(styles.enablePanning);\n                that.pageContainerWrapper.bind(SCROLL, that._scroll.bind(that));\n            },\n\n            _scroll: function(e) {\n                var that = this,\n                    containerHeight = that.pageContainerWrapper.height(),\n                    total = that.pages.length,\n                    pageNum = that._pageNum,\n                    pageIndex = pageNum - 1,\n                    pageToLoadNum = pageNum,\n                    pageToLoad,\n                    currentPage$1;\n\n                    if (that._preventScroll || !total) {\n                        that._preventScroll = false;\n                        return;\n                    }\n\n                    that._scrollingStarted = true;\n                    const nextPageIndex = kendo_pdfviewerCommon_cmn_chunk_js.c(that.element[0]);\n                    currentPage$1 = that.pages[pageIndex];\n                    pageToLoadNum = pageNum + nextPageIndex - pageIndex;\n\n                    if (pageNum !== pageToLoadNum && pageToLoadNum >= 1 && pageToLoadNum <= total) {\n                        pageToLoad = that.pages[pageToLoadNum - 1].element;\n\n                        if (pageToLoad.offset().top > containerHeight) {\n                            return;\n                        }\n\n                        that._pageNum = pageToLoadNum;\n                        that._loadVisiblePages();\n\n                        that.trigger(UPDATE, { action: PAGE_CHANGE, page: pageToLoadNum, total: total, pageChangeFromScroll: true });\n                    }\n            },\n\n            zoom: function(scale, preventComboBoxChange) {\n                var that = this;\n\n                if (that._isDPLProcessor()) {\n                    return;\n                }\n\n                if (!scale) {\n                    return that.zoomScale;\n                }\n\n                return that.execute({\n                    command: ZOOMCOMMAND,\n                    options: {\n                        value: scale,\n                        updateComboBox: !preventComboBoxChange\n                    }\n                });\n            },\n\n            execute: function(options) {\n                var commandOptions = extend({ viewer: this }, options.options);\n                var command = new kendo.pdfviewer[options.command](commandOptions);\n                return command.exec();\n            },\n\n            _loadDPLDocument: function() {\n                var that = this;\n                var page = that.options.page;\n\n                progress(that.pageContainer, true);\n                that.processor.fetchDocument().done(function(document) {\n                    that._clearPages();\n                    that.document = document;\n\n                    that._renderPages();\n                    that.resize(true);\n                    if (document) {\n                        page = page >= 1 && page <= document.total ? page : 1;\n                        that.activatePage(page, true);\n                    }\n\n                    if (that.pdfScroller) {\n                        that.pdfScroller.destroy();\n                    }\n\n                    that.pdfScroller = new kendo_pdfviewerCommon_cmn_chunk_js.S(that.pageContainer[0].parentNode, {\n                        filter: '.k-page',\n                        events: {}\n                    });\n\n                    that.pdfScroller.enablePanEventsTracking();\n\n                    progress(that.pageContainer, false);\n                });\n            },\n\n            _loadPdfJSDocument: function(data) {\n                const that = this;\n                const options = that.options;\n                const page = options.page;\n                let file;\n\n                if (data) {\n                    file = data;\n                } else {\n                    file = options.pdfjsProcessing.file;\n                }\n\n                if (!file) {\n                    that._renderBlankPage();\n                    return;\n                }\n\n                if (typeof file === \"string\") {\n                    file = {\n                        url: file\n                    };\n                } else if (file instanceof ArrayBuffer) {\n                    file = {\n                        data: file\n                    };\n                }\n\n                that._removeBlankPage();\n\n                progress(that.pageContainer, true);\n                that.pdfViewerCommon = new kendo_pdfviewerCommon_cmn_chunk_js.a(that.element[0], {\n                    loadOnDemand: that.options.pdfjsProcessing.loadOnDemand,\n                    loadOnDemandPageSize: 1,\n                    zoomLevel: that.zoomScale,\n                    fileDescriptor: file,\n                    events: {\n                        pagesLoad: (e) => {\n                            that.document = e.pdfDoc;\n                            that.pages = e.pdfPages;\n\n                            // Enable panning by default.\n                            setInteractionMode(that.pdfViewerCommon, 1);\n\n                            that.activatePage(page, true);\n                            that.trigger(UPDATE);\n\n                            if (that._currentPage > -1) {\n                                that.pdfViewerCommon.scrollToPage({ pageNumber: that._currentPage });\n                                // Reset the internal current page property.\n                                that._currentPage = null;\n                            }\n\n                            progress(that.pageContainer, false);\n                        },\n                        pageRendered: (e) => {\n                            if (!that._preventRenderEvent) {\n                                that.trigger(RENDER, { page: e.page.pdfPage });\n                            }\n\n                            that._setPageNumberAttributes();\n\n                            that._preventRenderEvent = false;\n                        },\n                        zoomStart: (e) => {\n                            that._currentPage = that.pdfViewerCommon.getCurrentPageIndex() + 1;\n                        },\n                        zoomEnd: (e) => {\n                            that.zoomScale = e.zoomLevel;\n                            that._updateZoomComboBox(e.zoomLevel);\n                            that.trigger(ZOOMEND, { scale: e.zoomLevel });\n                        },\n                        printEnd: (e) => {\n                            progress(that.pageContainerWrapper, false);\n                        },\n                        scroll: (e) => {\n                            if (e.isPageChanged) {\n                                that.trigger(UPDATE, { action: PAGE_CHANGE, page: e.pageNumber, total: that.pages.length, pageChangeFromScroll: true });\n                            }\n                        },\n                        error: (e) => {\n                            that._triggerError({\n                                error: e.message,\n                                message: that.options.messages.errorMessages.parseError\n                            });\n                        },\n                        annotationEditorToolBarShow: that.onAnnotationEditorToolBarShow.bind(that),\n                    }\n                });\n            },\n\n            _enablePanning: function() {\n                const that = this;\n                that.pdfViewerCommon.documentScroller.enablePanEventsTracking();\n            },\n\n            _disablePanning: function() {\n                const that = this;\n                that.pdfViewerCommon.documentScroller.disablePanEventsTracking();\n            },\n\n            _setPageNumberAttributes: function() {\n                const that = this;\n\n                that.pageContainer.find('.k-page').each((i, el) => {\n                    $(el).attr(kendo.attr(\"number\"), i + 1);\n                });\n            },\n\n            loadPage: function(number) {\n                const that = this,\n                    page = that.pages && that.pages[number - 1];\n\n                if (!page) {\n                    return;\n                }\n\n                if (that._isDPLProcessor()) {\n                    return page.load(that.zoomScale);\n                }\n\n                return Promise.resolve();\n            },\n\n            activatePage: function(number, updatePager) {\n                const that = this,\n                    page = that.pages && that.pages[number - 1];\n\n                if (!page) {\n                    return;\n                }\n\n                that._pageNum = number;\n\n                if (that._isDPLProcessor()) {\n                    that._loadVisiblePages();\n                    that._scrollToActivatedPage(number, updatePager);\n                } else {\n                    that.pdfViewerCommon.activatePageNumber(number);\n                    that.trigger(UPDATE, { action: PAGE_CHANGE, page: number, total: that.pages.length, updatePager: updatePager });\n                }\n            },\n\n            _scrollToActivatedPage: function(number, updatePager) {\n                const that = this,\n                    pageContainer = that.pageContainerWrapper;\n\n                that._preventScroll = true;\n                kendo_pdfviewerCommon_cmn_chunk_js.s(pageContainer[0], number - 1);\n                that.trigger(UPDATE, { action: PAGE_CHANGE, page: number, total: that.pages.length, updatePager: updatePager });\n            },\n\n            _getVisiblePagesCount: function() {\n                var that = this,\n                    loadedPagesHeight = 0,\n                    updatedVisiblePagesCount = 0,\n                    containerHeight = that.pageContainer[0].clientHeight,\n                    index = 0;\n\n                while (loadedPagesHeight <= containerHeight && index < that.pages.length)\n                {\n                    loadedPagesHeight += that.pages[index].element.height();\n                    updatedVisiblePagesCount++;\n                    index++;\n                }\n\n                that._visiblePagesCount = updatedVisiblePagesCount;\n            },\n\n            _loadVisiblePages: function() {\n                var pagesCount = this.pages && this.pages.length,\n                    minVisiblePageNum = Math.max(this._pageNum - this._visiblePagesCount, 1),\n                    maxVisiblePageNum = Math.min(this._pageNum + this._visiblePagesCount, pagesCount);\n\n                this._visiblePages = this.pages.slice(minVisiblePageNum - 1, maxVisiblePageNum);\n\n                for (var i = minVisiblePageNum; i <= maxVisiblePageNum; i++)\n                {\n                    this.loadPage(i);\n                }\n            },\n\n            _loadAllPages: function() {\n                const pagesCount = this.pages && this.pages.length;\n                const promises = [];\n\n                for (var i = 0; i <= pagesCount; i++)\n                {\n                    promises.push(this.loadPage(i));\n                }\n\n                return promises;\n            },\n\n            fromFile: function(file) {\n                const that = this;\n                if (that._isDPLProcessor()) {\n                    that.zoomScale = that.options.scale || kendo_pdfviewerCommon_cmn_chunk_js.D;\n                    that.zoom(that.zoomScale, true);\n                    that.trigger(UPDATE, { action: \"zoom\", zoom: that.options.scale || \"auto\" });\n\n                    that.processor._updateDocument(file);\n                    that._loadDPLDocument();\n                } else {\n                    if (that.pdfViewerCommon) {\n                        that.annotationsToolbar?.destroy();\n                        resetAnnotationEditorMode(that.pdfViewerCommon);\n                        that.toolbar.toggle(\"[title='Annotations']\", false);\n                        that.toolbar.toggle(\"[title='Enable Selection']\", false);\n                        that.toolbar.toggle(\"[title='Enable Panning']\", true);\n\n                        const loadParams = $.isPlainObject(file) ? file : { url: file };\n\n                        that.pdfViewerCommon.loadFile(loadParams);\n                    } else {\n                        that._loadPdfJSDocument(file);\n                    }\n                }\n            },\n\n            exportImage: function(options) {\n                var that = this;\n                var pageNumber = options.page;\n                var page = that.pages[pageNumber - 1] || that._blankPage;\n                var rootGroup = new drawing.Group();\n\n                page.load();\n\n                var background = kendo.drawing.Path.fromRect(new kendo.geometry.Rect([0, 0], [page.width, page.height]), {\n                    fill: {\n                        color: WHITECOLOR\n                    },\n                    stroke: null\n                });\n\n                progress(that.pageContainer, true);\n                rootGroup.append(background, page.group);\n\n                drawing.exportImage(rootGroup).done(function(data) {\n                    progress(that.pageContainer, false);\n                    kendo.saveAs({\n                        dataURI: data,\n                        fileName: options.fileName,\n                        proxyURL: options.proxyURL || \"\",\n                        forceProxy: options.forceProxy,\n                        proxyTarget: options.proxyTarget\n                    });\n                });\n            },\n\n            exportSVG: function(options) {\n                var that = this;\n                var pageNumber = options.page;\n                var page = that.pages[pageNumber - 1] || that._blankPage;\n\n                progress(that.pageContainer, true);\n\n                page.load();\n\n                drawing.exportSVG(page.group).done(function(data) {\n                    progress(that.pageContainer, false);\n                    kendo.saveAs({\n                        dataURI: data,\n                        fileName: options.fileName,\n                        proxyURL: options.proxyURL || \"\",\n                        forceProxy: options.forceProxy,\n                        proxyTarget: options.proxyTarget\n                    });\n                });\n            },\n\n            setOptions: function(options)\n            {\n                var that = this;\n\n                if (options.pdfjsProcessing || options.dplProcessing) {\n                    that._initProcessor(options || {});\n                }\n\n                options = $.extend(that.options, options);\n\n                Widget.fn.setOptions.call(that, options);\n\n                if (options.page) {\n                    that._pageNum = options.page;\n                    that.activatePage(options.page, false);\n                }\n\n                if (options.width) {\n                    that.element.width(options.width);\n                }\n\n                if (options.height) {\n                    that.element.height(options.height);\n                }\n            },\n\n            destroy: function()\n            {\n                if (this._resizeHandler)\n                {\n                    kendo.unbindResize(this._resizeHandler);\n                }\n\n                //destroy nested components\n                if (this._errorDialog) {\n                    this._errorDialog.destroy();\n                }\n\n                if (this._saveDialog) {\n                    this._saveDialog.destroy();\n                }\n\n                if (this._upload) {\n                    this._upload.destroy();\n                }\n\n                if (this.pager) {\n                    this.pager.destroy();\n                }\n\n                if (this.toolbar) {\n                    this.toolbar.unbind();\n                    this.toolbar.destroy();\n                    this.toolbar = null;\n                }\n\n                if (this.pages && this.pages.length && this._isDPLProcessor()) {\n                    this.pages.forEach(function(page) {\n                        page.destroy();\n                    });\n                    this.pages = [];\n                }\n\n                if (this.pdfScroller) {\n                    this.pdfScroller.destroy();\n                }\n                this.pageContainer.off(NS);\n                this.pageContainerWrapper.off(NS);\n\n                Widget.fn.destroy.call(this);\n            },\n\n            _clearPages: function() {\n                this.pages = [];\n                this.document = null;\n                this._pageNum = 1;\n\n                this.pageContainer.off(NS);\n                this.pageContainer.empty();\n\n                if (this.pdfScroller)\n                {\n                    this.pdfScroller.destroy();\n                }\n            },\n\n            onAnnotationEditorToolBarShow: function(e) {\n                const that = this;\n                const type = e.annotationEditorMode;\n                const anchor = e.anchor;\n                const popup = that.annotationPopup?.popup;\n                const editor = e.source.firstSelectedEditor;\n\n                // Do not continue if popup is already visible.\n                if (popup && popup.visible() && !popup._closing && type === \"freeText\") {\n                    return;\n                }\n\n                if (that.annotationPopup) {\n                    that.annotationPopup.destroy();\n                    that.annotationPopup.destroyEditor();\n                    that.annotationPopup = null;\n                }\n\n                switch (type) {\n                    case \"highlight\":\n                        that.annotationPopup = new HighlightAnnotationPopup(that, anchor, editor);\n                        break;\n                    case \"freeText\":\n                        that.annotationPopup = new FreeTextAnnotationPopup(that, anchor, editor);\n                        break;\n                }\n            }\n        });\n\n        ui.plugin(PDFViewer);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}