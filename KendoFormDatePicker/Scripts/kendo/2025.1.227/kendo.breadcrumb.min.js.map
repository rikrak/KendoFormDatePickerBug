{"version":3,"sources":["raw-js/kendo.breadcrumb.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Breadcrumb","this","$","undefined$1","window","Widget","ui","extend","isPlainObject","mediaQuery","encode","support","htmlEncode","sanitizeLink","BREADCRUMB","ARIA_HIDDEN","CLICK","BLUR","KEYDOWN","CHANGE","DOT","breadcrumbStyles","widget","overlay","textbox","textboxWrapper","link","item","delimiter","rootItem","rootLink","overflowIcon","focused","hidden","inputWrapper","init","element","options","that","fn","call","_wrapper","editable","_editable","_tabindex","wrapper","on","_click","bind","value","bindToLocation","items","_value","_applyCssClasses","_resizeHandler","onResize","resize","navigational","name","size","gap","rootIcon","delimiterIcon","messages","rootTitle","events","destroy","unbindResize","add","find","off","_segments","refresh","_update","val","_generateSegments","trigger","sender","path","segments","_split","i","length","_path","slice","indexOf","text","push","e","target","closest","previousDomItems","prevAll","addBack","previousItems","_getItems","segment","index","preventDefault","originalEvent","isRoot","type","map","innerText","_edit","input","oldValue","css","height","hide","attr","show","setTimeout","select","_blur","shouldRestoreValue","replace","is","removeClass","_keydown","key","keyCode","isEnter","keys","ENTER","isEsc","ESC","first","isNavigational","canNavigate","hasClass","_wrapperKeydown","ev","_wrapperClick","_wrapperFocus","addClass","_wrapperBlur","elementIsInput","wrap","parent","append","split","location","href","filter","isRtl","idx","isLastSegment","html","isOnlyRoot","showIcon","showText","icon","itemClass","linkClass","renderDelimiter","lastSegment","iconClass","splice","toLowerCase","title","match","template","itemTemplate","empty","data","iconElm","delimiterElm","encoded","linkElm","linkClasses","Object","join","getLinkClasses","_displayOverflowIcons","visible","last","_shrinkItems","lastHidden","delimiterWidth","_outerWidth","availableWidth","width","_showItem","overlayWidth","prev","_stretchItems","_resize","getSize","dimensions","trail","b","cssProperties","registerPrefix","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default","defineProperty"],"mappings":"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","file":"kendo.breadcrumb.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Breadcrumb = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"breadcrumb\",\n        name: \"Breadcrumb\",\n        category: \"web\",\n        description: \"The Breadcrumb widget displays navigation breadcrumb.\",\n        depends: [ \"core\", \"icons\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            extend = $.extend,\n            mediaQuery = kendo.mediaQuery,\n            isPlainObject = $.isPlainObject,\n            support = kendo.support,\n            encode = kendo.htmlEncode,\n            sanitizeLink = kendo.sanitizeLink,\n\n            BREADCRUMB = \".kendoBreadcrumb\",\n\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_LABEL = \"aria-label\",\n\n            CLICK = \"click\",\n            FOCUS = \"focus\",\n            BLUR = \"blur\",\n            KEYDOWN = \"keydown\",\n            CHANGE = \"change\",\n            DOT = \".\";\n\n        var breadcrumbStyles = {\n            widget: \"k-breadcrumb\",\n            overlay: \"k-breadcrumb-container\",\n            textbox: \"k-input-inner\",\n            textboxWrapper: \"k-textbox k-input k-input-md k-rounded-md k-input-solid\",\n            link: \"k-breadcrumb-link\",\n            item: \"k-breadcrumb-item\",\n            delimiter: \"k-breadcrumb-delimiter-icon\",\n            rootItem: \"k-breadcrumb-root-item\",\n            rootLink: \"k-breadcrumb-root-link\",\n            overflowIcon: \"k-breadcrumb-overflow-icon\",\n            focused: \"k-focus\",\n            hidden: \"k-hidden\",\n            inputWrapper: \"k-breadcrumb-input-container\"\n        };\n\n        var Breadcrumb = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                options = options || {};\n\n                Widget.fn.init.call(that, element, options);\n\n                that._wrapper();\n\n                if (options.editable) {\n                    that._editable();\n                    that._tabindex();\n                }\n\n                that.wrapper.on(CLICK + BREADCRUMB, \"a:not(.k-disabled)\", that._click.bind(that));\n\n                if (options.value || options.bindToLocation || !options.items) {\n                    that._value();\n                } else if (options.items) {\n                    that.items(options.items);\n                }\n\n                that._applyCssClasses();\n\n                that._resizeHandler = kendo.onResize(function() {\n                    that.resize(true);\n                });\n            },\n\n            options: {\n                editable: false,\n                navigational: false,\n                bindToLocation: false,\n                items: null,\n                name: \"Breadcrumb\",\n                size: \"medium\",\n                gap: 0,\n                rootIcon: \"home\",\n                delimiterIcon: \"chevron-right\",\n                messages: {\n                    rootTitle: \"Go to root\"\n                }\n            },\n\n            events: [ CHANGE, CLICK ],\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                kendo.unbindResize(that._resizeHandler);\n\n                that.wrapper\n                    .add(that.wrapper.find(\"input\"))\n                    .add(that.wrapper.find(\"a\"))\n                    .off(BREADCRUMB);\n            },\n\n            items: function(items) {\n                var that = this;\n\n                if (items === undefined$1) {\n                    return that.options.items;\n                }\n\n                that.options.items = items;\n                that._segments = items;\n                that.refresh();\n            },\n\n            _update: function(val) {\n                var that = this;\n\n                if (val !== that.value()) {\n                    that._generateSegments(val);\n                    that.refresh();\n                    that.trigger(CHANGE, { sender: this, value: val });\n                }\n            },\n\n            _generateSegments: function(value) {\n                var that = this,\n                    options = that.options,\n                    items = options.items,\n                    path, segments;\n\n                segments = that._split(value);\n\n                if (!items) {\n                    that.options.items = that._segments = segments;\n                    return;\n                }\n\n                that._segments = [];\n\n                for (var i = 0; i < segments.length; i++) {\n                    path = that._path(items.slice(0, i + 1));\n\n                    if (path !== \"\" && value.indexOf(path) > -1 && items[i] && items[i].text === segments[i]) {\n                        that._segments.push(items[i]);\n                    } else {\n                        that._segments.push(segments[i]);\n                    }\n                }\n            },\n\n            _click: function(e) {\n                var that = this,\n                    options = that.options,\n                    item = $(e.target).closest(DOT + breadcrumbStyles.item),\n                    previousDomItems = item.prevAll().addBack(),\n                    previousItems = that._getItems(previousDomItems),\n                    path = that._path(previousItems),\n                    segment = that._segments[item.index()];\n\n                if (!options.navigational) {\n                    e.preventDefault();\n                }\n\n                if (!that.trigger(CLICK, { sender: that, originalEvent: e, isRoot: segment.type === \"rootitem\", item: segment })) {\n                    that._update(path);\n                }\n            },\n\n            _getItems: function(items) {\n                var that = this;\n\n                return $.map(items, function(item) {\n                    return that._segments[$(item).index()] || item.innerText;\n                });\n            },\n\n            _edit: function() {\n                var that = this,\n                    input = that.input;\n\n                that.oldValue = that.value();\n                that.inputWrapper.css(\"height\", that.wrapper.height());\n                that.overlay.hide();\n                that.input.val(that.value());\n                that.input.attr(ARIA_HIDDEN, false);\n                that.inputWrapper.show();\n\n                setTimeout(function() {\n                    input.select();\n                });\n            },\n\n            _blur: function(shouldRestoreValue) {\n                var that = this,\n                    input = that.input,\n                    inputWrapper = that.inputWrapper,\n                    wrapper = that.wrapper,\n                    overlay = that.overlay,\n                    val = input.val().replace(/\\/{2,}/g, \"/\");\n\n                if (overlay.is(\":visible\")) {\n                    return;\n                }\n\n                if (shouldRestoreValue) {\n                    val = that.oldValue;\n                }\n\n                input.attr(ARIA_HIDDEN, true);\n                inputWrapper.hide();\n                overlay.show();\n                input.val(\"\");\n                that._update(val);\n                wrapper.removeClass(breadcrumbStyles.focused);\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    isEnter = key === kendo.keys.ENTER,\n                    isEsc = key === kendo.keys.ESC;\n\n                if (isEnter || isEsc) {\n                    that._blur(isEsc);\n\n                    setTimeout(function() {\n                        that.overlay.find(\"a\").first().trigger(\"focus\");\n                    });\n                }\n            },\n\n            isNavigational: function(target) {\n                var canNavigate =\n                    target.hasClass(breadcrumbStyles.textbox) ||\n                    target.closest(DOT + breadcrumbStyles.item);\n\n                if (target[0] === this.wrapper[0]) {\n                    return false;\n                }\n\n                return canNavigate && !target.hasClass(\"k-breadcrumb-last-item\");\n            },\n\n            _wrapperKeydown: function(ev) {\n                var that = this,\n                    target = $(ev.target),\n                    isNavigational = that.isNavigational(target);\n\n                if (ev.keyCode === kendo.keys.ENTER && !isNavigational) {\n                    that._edit();\n                }\n            },\n\n            _wrapperClick: function(ev) {\n                var that = this,\n                    target = $(ev.target),\n                    isNavigational = that.isNavigational(target);\n\n                if (!isNavigational) {\n                    this._edit();\n                }\n            },\n\n            _wrapperFocus: function(ev) {\n                $(ev.target).addClass(breadcrumbStyles.focused);\n            },\n\n            _wrapperBlur: function(ev) {\n                $(ev.target).removeClass(breadcrumbStyles.focused);\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = this.element,\n                    elementIsInput = element.is(\"input\"),\n                    inputWrapper = $(\"<div class=\\\"\" + breadcrumbStyles.inputWrapper + \"\\\"><span class=\\\"\" + breadcrumbStyles.textboxWrapper + \"\\\"></span></div>\");\n\n                that.wrapper = elementIsInput ? element\n                    .wrap($(\"<nav />\"))\n                    .parent() : element;\n\n                if (elementIsInput) {\n                    that.element\n                        .wrap(inputWrapper)\n                        .addClass(breadcrumbStyles.textbox);\n\n                    that.inputWrapper = that.wrapper.find(DOT + breadcrumbStyles.inputWrapper).hide();\n                } else {\n                    that.inputWrapper = that.wrapper\n                        .append(inputWrapper)\n                        .find(DOT + breadcrumbStyles.inputWrapper).hide();\n                }\n\n                that.wrapper.addClass(breadcrumbStyles.widget);\n                that.wrapper.attr(ARIA_LABEL, \"Breadcrumb\");\n\n                that.overlay = that.wrapper\n                    .append($(\"<ol />\").addClass(breadcrumbStyles.overlay))\n                    .find(DOT + breadcrumbStyles.overlay);\n            },\n\n\n            _editable: function() {\n                var that = this,\n                    element = that.element,\n                    elementIsInput = element.is(\"input\");\n\n                if (elementIsInput) {\n                    that.input = that.element;\n                } else {\n                    that.input = $(\"<input />\");\n                }\n\n                that.inputWrapper.find(DOT + breadcrumbStyles.textboxWrapper.split(' ')[0]).append(that.input);\n\n                that.input\n                    .addClass(breadcrumbStyles.textbox)\n                    .attr(ARIA_HIDDEN, true);\n\n                that.input\n                    .on(BLUR + BREADCRUMB, that._blur.bind(that, false))\n                    .on(KEYDOWN + BREADCRUMB, that._keydown.bind(that));\n\n                that.wrapper\n                    .on(FOCUS + BREADCRUMB, that._wrapperFocus.bind(that))\n                    .on(BLUR + BREADCRUMB, that._wrapperBlur.bind(that))\n                    .on(KEYDOWN + BREADCRUMB, that._wrapperKeydown.bind(that))\n                    .on(CLICK + BREADCRUMB, that._wrapperClick.bind(that));\n            },\n\n            _value: function() {\n                var that = this,\n                    options = that.options;\n\n                if (options.value) {\n                    that.value(options.value);\n                } else if (options.bindToLocation) {\n                    that.value(window.location.href.replace(/http(s?):\\/\\//,\"\").replace(/\\/$/, \"\"));\n                } else {\n                    that.value(\"\");\n                }\n            },\n\n            _split: function(value) {\n                return value.split(\"/\").filter(function(item, index) {\n                    if (index > 0 && item === \"\") {\n                        return false;\n                    }\n\n                    return true;\n                });\n            },\n\n            isRtl: function() {\n                return kendo.support.isRtl(this.wrapper);\n            },\n\n            refresh: function() {\n                var that = this,\n                    options = that.options,\n                    messages = options.messages,\n                    delimiterIcon = that.options.delimiterIcon,\n                    html = \"\",\n                    href = \"\",\n                    isOnlyRoot = that.value() === \"\",\n                    segments = that._segments,\n                    segment,\n                    idx,\n                    length, isLastSegment;\n\n                if (delimiterIcon == \"chevron-right\" && that.isRtl()) {\n                    delimiterIcon = \"chevron-left\";\n                }\n\n                for (idx = 0, length = segments.length; idx < length; idx++) {\n                    segment = segments[idx];\n                    isLastSegment = idx === segments.length - 1;\n\n                    if (segment !== undefined$1) {\n                        if (!html) {\n                            href = \"/\";\n                        } else {\n                            href += segment.text || segment || \"\";\n                        }\n\n                        if (typeof segment === \"string\") {\n                            segment = {\n                                type: !html ? \"rootitem\" : \"item\",\n                                href: options.navigational ? href : \"#\",\n                                text: segment,\n                                showIcon: !html,\n                                showText: !!html,\n                                icon: !html ? options.rootIcon : \"\",\n                                itemClass: !html ? \"k-breadcrumb-root-item\" : \"\",\n                                linkClass: !html ? breadcrumbStyles.rootLink : \"\",\n                                delimiterIcon: delimiterIcon,\n                                renderDelimiter: !isLastSegment && !isOnlyRoot,\n                                lastSegment: isLastSegment,\n                                iconClass: \"\"\n                            };\n\n                            that._segments.splice(idx, 1, segment);\n                        } else if (isPlainObject(segment)) {\n                            segment = extend({}, segment, {\n                                type: segment.type ? segment.type.toLowerCase() : \"item\"\n                            });\n\n                            segment = extend({}, segment, {\n                                text: segment.text || \"\",\n                                title: segment.text || \"\",\n                                icon: segment.icon || (segment.type === \"rootitem\" ? options.rootIcon : \"\"),\n                                iconClass: segment.iconClass || \"\",\n                                lastSegment: isLastSegment,\n                                renderDelimiter: !isLastSegment && segments.length > 1,\n                                href: options.navigational ? segment.href : \"#\",\n                                delimiterIcon: delimiterIcon,\n                                itemClass: segment.itemClass || \"\",\n                                linkClass: segment.linkClass || \"\",\n                                showIcon: segment.showIcon === undefined$1 ? segment.type === \"rootitem\" && segment.type !== \"item\" : segment.showIcon,\n                                showText: segment.showText === undefined$1 ? segment.type === \"item\" && segment.type !== \"rootitem\" : segment.showText\n                            });\n\n                            if (segment.type === \"rootitem\") {\n                                segment.itemClass += \" k-breadcrumb-root-item\";\n                                segment.linkClass += \" \" + breadcrumbStyles.rootLink;\n                            }\n                        }\n\n                        if (segment.type === \"rootitem\" && segment.text === \"\") {\n                            segment.title = messages.rootTitle;\n                        }\n\n                        href += href.match(/\\/$/) ? \"\" : \"/\";\n\n                        html += kendo.template(this.itemTemplate)(segment);\n                    }\n                }\n\n                this.overlay\n                    .empty()\n                    .append($(html));\n\n                this.resize(true);\n            },\n\n            itemTemplate: (data) => {\n                const getLinkClasses = () => {\n                    let linkClasses = {\n                        'k-breadcrumb-link': data.type !== 'rootitem',\n                        'k-breadcrumb-icontext-link': data.showText && data.showIcon,\n                        'k-breadcrumb-icon-link': data.showIcon && !data.showText,\n                        'k-disabled': data.lastSegment && data.type !== \"rootitem\"\n                    };\n\n                    return Object.keys(linkClasses).filter(i => linkClasses[i]).join(' ');\n                };\n\n                const iconElm = data.showIcon ? kendo.ui.icon($(`<span class=\"${encode(data.iconClass)}\"></span>`), { icon: encode(data.icon) }) : '';\n                const delimiterElm = data.renderDelimiter ? kendo.ui.icon($(`<span class=\"k-breadcrumb-delimiter-icon\" aria-hidden=\"true\"></span>`), { icon: encode(data.delimiterIcon), size: \"xsmall\" }) : '';\n                const text = data.showText ? `<span class=\"k-breadcrumb-item-text\">${data.encoded !== false ? encode(data.text) : data.text}</span>` : '';\n\n                const linkElm = `<a href=\"${sanitizeLink(data.href)}\" class=\"${encode(data.linkClass)} ${getLinkClasses()}\"\n                ${data.lastSegment ? 'aria-current=\"page\"' : ''}\n                ${(data.lastSegment && data.type !== \"rootitem\") ? 'aria-disabled=\"true\"' : ''}\n                title=\"${encode(data.text || data.title)}\">${iconElm}${text}</a>`;\n\n                return `<li class=\"k-breadcrumb-item ${encode(data.itemClass)} ${data.lastSegment ? 'k-breadcrumb-last-item' : ''}\">${linkElm}${delimiterElm}</li>`;\n            },\n\n            _displayOverflowIcons: function(visible) {\n                var that = this,\n                    rootItem = that.wrapper.find(DOT + breadcrumbStyles.rootItem);\n\n                if (visible) {\n                    rootItem.find(DOT + breadcrumbStyles.delimiter)\n                        .addClass(breadcrumbStyles.overflowIcon)\n                        .removeClass(breadcrumbStyles.hidden);\n                } else {\n                    rootItem.find(DOT + breadcrumbStyles.overflowIcon)\n                        .removeClass(breadcrumbStyles.overflowIcon)\n                        .last().addClass(breadcrumbStyles.hidden);\n                }\n            },\n\n            _shrinkItems: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    overlay = that.overlay,\n                    items = that.overlay.find(DOT + breadcrumbStyles.item + \":not(.k-breadcrumb-root-item)\"),\n                    delimiterWidth = kendo._outerWidth(that.overlay.find(DOT + breadcrumbStyles.delimiter + \":visible\").first()),\n                    availableWidth = wrapper.width() - that.options.gap - delimiterWidth,\n                    lastHidden,\n                    item;\n\n                if (items.length == 1) {\n                    return;\n                }\n\n                for (var i = 0; i < items.length; i += 1) {\n                    item = $(items[i]);\n\n                    if (kendo._outerWidth(overlay) >= availableWidth) {\n                        if (i == items.length - 1) {\n                            break;\n                        }\n\n                        lastHidden = item;\n                        item.find(DOT + breadcrumbStyles.delimiter).hide();\n                        item.find(DOT + breadcrumbStyles.link).hide();\n                        that._displayOverflowIcons(true);\n                    }\n                }\n\n                if (lastHidden) {\n                    lastHidden.find(DOT + breadcrumbStyles.delimiter).show();\n                }\n            },\n\n            _showItem: function(item, overlayWidth, availableWidth) {\n                if (item.length && availableWidth > overlayWidth + kendo._outerWidth(item, true)) {\n                    item.find(DOT + breadcrumbStyles.link).show();\n                    item.prev().find(DOT + breadcrumbStyles.delimiter).show();\n                    return true;\n                }\n\n                return false;\n            },\n\n            _stretchItems: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    overlay = that.overlay,\n                    items = that.overlay.find(DOT + breadcrumbStyles.item + \":not(.k-breadcrumb-root-item)\"),\n                    delimiterWidth = kendo._outerWidth(that.overlay.find(DOT + breadcrumbStyles.delimiter + \":visible\").first()),\n                    availableWidth = wrapper.width() - that.options.gap - delimiterWidth,\n                    item, overlayWidth;\n\n                if (!items.length) {\n                    that._displayOverflowIcons(false);\n                }\n\n                for (var i = items.length - 1; i >= 0; i--) {\n                    item = $(items[i]);\n\n                    overlayWidth = kendo._outerWidth(overlay);\n\n                    if (overlayWidth > availableWidth || !this._showItem(item, overlayWidth, availableWidth)) {\n                        break;\n                    }\n                }\n            },\n\n            _resize: function() {\n                this._shrinkItems();\n                this._stretchItems();\n            },\n\n            getSize: function() {\n                return kendo.dimensions(this.wrapper);\n            },\n\n            value: function(val) {\n                var that = this;\n\n                if (val !== undefined$1) {\n                    that._generateSegments(val);\n                    that.refresh();\n                    return;\n                }\n\n                return that._path(that._segments);\n            },\n\n            _path: function(trail) {\n                return $.map(trail, function(b) {\n                    var text = isPlainObject(b) ? b.text : b;\n                    return text === \"/\" ? \"\" : text;\n                }).join(\"/\");\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"Breadcrumb\", \"k-breadcrumb-\");\n\n        kendo.ui.plugin(Breadcrumb);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}