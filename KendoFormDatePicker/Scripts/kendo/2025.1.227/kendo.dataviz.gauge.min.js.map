{"version":3,"sources":["raw-js/kendo.dataviz.gauge.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","DatavizGauge","Core","DatavizCore","ChartsCmnChunk","this","kendo_core_js","kendo_dataviz_core_js","kendo_charts_cmn_chunk_js","$","window","dataviz","Widget","ui","draw","drawing","themeOptions","options","element","themes","themeName","theme","lowerName","toLowerCase","SASS_THEMES","indexOf","addClass","g","removeClass","gauge","Gauge","extend","init","userOptions","destroy","empty","fn","call","deepExtend","wrapper","_createInstance","notify","renderAs","pointer","scale","gaugeArea","background","transitions","setOptions","_instance","_copyFields","redraw","gaugeType","_gaugeType","_originalOptions","surface","bbox","pointers","_resize","resize","proxyMembers","createProxyMember","name","apply","arguments","idx","length","ExportMixin","RadialGaugeWidget","R","LinearGaugeWidget","vertical","L","ArcGaugeWidget","css","_centerTemplate","value","instance","_centerElement","exportVisual","centerTemplate","template","centerElement","_getCenterElement","html","color","currentColor","position","centerLabelPosition","width","height","remove","append","A","CircularGaugeWidget","t","createExportMethod","method","drawDOM","then","visual","exportMethods","plugin","LinearScale","z","RadialScale","y","RadialPointer","x","LinearPointer","w","BarLinearPointer","v","ArrowLinearPointer","u","LinearGauge","RadialGauge","ArcGauge","CircularGauge","jQuery","kendo$1","__meta__","id","category","description","depends","default","Object","defineProperty"],"mappings":"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","file":"kendo.dataviz.gauge.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.dataviz.core.js'), require('kendo.charts.cmn.chunk.js'), require('kendo.dataviz.themes.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.dataviz.core', 'kendo.charts.cmn.chunk', 'kendo.dataviz.themes'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.DatavizGauge = {}), global.kendo._globals.Core, global.kendo._globals.DatavizCore, global.kendo._globals.ChartsCmnChunk));\n})(this, (function (exports, kendo_core_js, kendo_dataviz_core_js, kendo_charts_cmn_chunk_js) {\n    (function($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n\n        var kendo = window.kendo;\n        var Widget = kendo.ui.Widget;\n        var dataviz = kendo.dataviz;\n        var draw = kendo.drawing;\n\n        function themeOptions(options, element) {\n            var themes = dataviz.ui.themes || {};\n            var themeName = options.theme || \"\";\n            var lowerName = themeName.toLowerCase();\n\n            if (dataviz.SASS_THEMES.indexOf(lowerName) != -1) {\n                element.addClass(\"k-gauge\");\n                const theme = kendo_charts_cmn_chunk_js.g(element[0]);\n\n                element.removeClass(\"k-gauge\");\n                return theme;\n            }\n\n            return (themes[themeName] || themes[lowerName] || {}).gauge;\n        }\n\n        var Gauge = Widget.extend({\n            init: function(element, userOptions) {\n                kendo.destroy(element);\n                $(element).empty();\n\n                Widget.fn.init.call(this, element);\n\n                this.options = kendo.deepExtend(this.options, userOptions);\n\n                this.wrapper = this.element;\n                this._createInstance();\n\n                this.element.addClass('k-gauge');\n\n                kendo.notify(this, dataviz.ui);\n            },\n\n            options: {\n                theme: \"sass\",\n                renderAs: \"\",\n                pointer: {},\n                scale: {},\n                gaugeArea: {\n                    background: \"\"\n                },\n                transitions: true\n            },\n\n            setOptions: function(options) {\n                this._instance.setOptions(options, themeOptions(options, this.element));\n\n                this._copyFields();\n            },\n\n            redraw: function() {\n                this._instance.redraw();\n                this._copyFields();\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n                this._instance.destroy();\n            },\n\n            _createInstance: function() {\n                var gaugeType = this._gaugeType();\n                this._instance = new gaugeType(this.element[0], this.options, themeOptions(this.options, this.element));\n                this._copyFields();\n            },\n\n            _copyFields: function() {\n                this._originalOptions = this._instance._originalOptions;\n                this.options = this._instance.options;\n                this.surface = this._instance.surface;\n                this.bbox = this._instance.bbox;\n                this.gaugeArea = this._instance.gaugeArea;\n                this.pointers = this._instance.pointers;\n                this.scale = this._instance.scale;\n            },\n\n            _resize: function() {\n                this._instance.resize();\n            }\n        });\n\n        var proxyMembers = [\"getSize\", \"value\", \"allValues\", \"exportVisual\"];\n\n        function createProxyMember(name) {\n            Gauge.fn[name] = function() {\n                return this._instance[name].apply(this._instance, arguments);\n            };\n        }\n\n        for (var idx = 0; idx < proxyMembers.length; idx++) {\n            createProxyMember(proxyMembers[idx]);\n        }\n\n        dataviz.ExportMixin.extend(Gauge.fn);\n\n        var RadialGaugeWidget = Gauge.extend({\n\n            options: {\n                name: \"RadialGauge\"\n            },\n\n            _gaugeType: function() {\n                return kendo_charts_cmn_chunk_js.R;\n            }\n        });\n\n        var LinearGaugeWidget = Gauge.extend({\n\n            options: {\n                name: \"LinearGauge\",\n                scale: {\n                    vertical: true\n                }\n            },\n\n            _gaugeType: function() {\n                return kendo_charts_cmn_chunk_js.L;\n            }\n        });\n\n        var ArcGaugeWidget = Gauge.extend({\n            init: function(element, userOptions) {\n                Gauge.fn.init.call(this, element, userOptions);\n\n                this.element.css('position', 'relative');\n                this.element.addClass('k-arcgauge');\n\n                this._centerTemplate();\n            },\n\n            options: {\n                name: \"ArcGauge\"\n            },\n\n            setOptions: function(options) {\n                Gauge.fn.setOptions.call(this, options);\n                this._centerTemplate();\n            },\n\n            redraw: function() {\n                Gauge.fn.redraw.call(this);\n                this._centerTemplate();\n            },\n\n            value: function(value) {\n                var instance = this._instance;\n                if (arguments.length === 0) {\n                    return instance.value();\n                }\n\n                instance.value(value);\n\n                this._centerTemplate();\n            },\n\n            destroy: function() {\n                Gauge.fn.destroy.call(this);\n                delete this._centerElement;\n            },\n\n            exportVisual: function() {\n                if (this._centerElement) {\n                    return false;\n                }\n\n                return Gauge.fn.exportVisual.call(this);\n            },\n\n            _resize: function() {\n                this._instance.resize();\n\n                this._centerTemplate();\n            },\n\n            _centerTemplate: function() {\n                if (this.options.centerTemplate) {\n                    var template = kendo.template(this.options.centerTemplate);\n\n                    var instance = this._instance;\n                    var centerElement = this._getCenterElement();\n\n                    centerElement.html(template({ color: instance.currentColor(), value: instance.value() }));\n\n                    var position = instance.centerLabelPosition(centerElement.width(), centerElement.height());\n\n                    centerElement.css(position);\n                } else if (this._centerElement) {\n                    this._centerElement.remove();\n                    this._centerElement = null;\n                }\n            },\n\n            _getCenterElement: function() {\n                var centerElement = this._centerElement;\n                if (!centerElement) {\n                    centerElement = this._centerElement = $('<div></div>').addClass('k-arcgauge-label');\n                    this.element.append(centerElement);\n                }\n\n                return centerElement;\n            },\n\n            _gaugeType: function() {\n                return kendo_charts_cmn_chunk_js.A;\n            }\n        });\n\n        var CircularGaugeWidget = ArcGaugeWidget.extend({\n            options: {\n                name: \"CircularGauge\"\n            },\n\n            _gaugeType: function() {\n                return kendo_charts_cmn_chunk_js.t;\n            }\n        });\n\n        function createExportMethod(name) {\n            ArcGaugeWidget.fn[name] = function(options) {\n                var gauge = this;\n                var method = draw[name];\n\n                if (!gauge._centerElement) {\n                    return method(gauge.exportVisual(), options);\n                }\n\n                return draw.drawDOM(gauge.element).then(function(visual) {\n                    return method(visual, options);\n                });\n            };\n        }\n\n        var exportMethods = ['exportSVG', 'exportImage', 'exportPDF'];\n\n        for (idx = 0; idx < exportMethods.length; idx++) {\n            createExportMethod(exportMethods[idx]);\n        }\n\n        dataviz.ui.plugin(LinearGaugeWidget);\n        dataviz.ui.plugin(RadialGaugeWidget);\n        dataviz.ui.plugin(ArcGaugeWidget);\n        dataviz.ui.plugin(CircularGaugeWidget);\n\n        kendo.deepExtend(dataviz, {\n            Gauge: Gauge,\n            LinearScale: kendo_charts_cmn_chunk_js.z,\n            RadialScale: kendo_charts_cmn_chunk_js.y,\n            RadialPointer: kendo_charts_cmn_chunk_js.x,\n            LinearPointer: kendo_charts_cmn_chunk_js.w,\n            BarLinearPointer: kendo_charts_cmn_chunk_js.v,\n            ArrowLinearPointer: kendo_charts_cmn_chunk_js.u,\n            LinearGauge: LinearGaugeWidget,\n            RadialGauge: RadialGaugeWidget,\n            ArcGauge: ArcGaugeWidget,\n            CircularGauge: CircularGaugeWidget\n        });\n\n    })(window.kendo.jQuery);\n\n    const __meta__ = {\n        id: \"dataviz.gauge\",\n        name: \"Gauge\",\n        category: \"dataviz\",\n        description: \"Linear, Radial and Arc gauges.\",\n        depends: [\"dataviz.core\", \"dataviz.themes\", \"charts.cmn.chunk\"]\n    };\n\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}